{"version":3,"file":"index51.js","sources":["../../src/components/va-toast/VaToast.vue","../../src/components/va-toast/VaToast.vue?vue&type=template&id=e50edcbc&lang.js","../../src/components/va-toast/VaToast.ts","../../src/components/va-toast/index.ts"],"sourcesContent":["<template>\r\n  <transition name=\"va-toast-fade\">\r\n    <div\r\n      v-show=\"visible\"\r\n      :class=\"['va-toast', $props.multiLine ? 'va-toast--multiline' : '', ...toastClasses]\"\r\n      :style=\"toastStyles\"\r\n      @mouseenter=\"clearTimer()\"\r\n      @mouseleave=\"startTimer()\"\r\n      @click=\"onToastClick()\"\r\n      role=\"alert\"\r\n    >\r\n      <div class=\"va-toast__group\">\r\n        <h2 v-if=\"title\" class=\"va-toast__title\" v-text=\"title\"></h2>\r\n\r\n        <div class=\"va-toast__content\" v-show=\"message\">\r\n          <p v-text=\"message\"></p>\r\n        </div>\r\n\r\n        <div class=\"va-toast__content\" v-if=\"render\">\r\n          <VaToastRenderer :content=\"render\" />\r\n        </div>\r\n\r\n        <va-icon\r\n          v-if=\"closeable\"\r\n          size=\"small\"\r\n          :name=\"icon\"\r\n          class=\"va-toast__close-icon\"\r\n          @click.stop=\"onToastClose\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { h, watch } from 'vue'\r\nimport { prop, mixins, Vue, Options } from 'vue-class-component'\r\nimport VaIcon from '../va-icon/VaIcon.vue'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { NotificationPosition } from './types'\r\n\r\nclass ToastProps {\r\n  title = prop<string>({ type: String, default: '' })\r\n  offsetY = prop<number>({ type: Number, default: 16 })\r\n  offsetX = prop<number>({ type: Number, default: 16 })\r\n  message = prop<string | Function>({ type: [String, Function] as any, default: '' })\r\n  icon = prop<string>({ type: String, default: 'close' })\r\n  customClass = prop<string>({ type: String, default: '' })\r\n  duration = prop<number>({ type: Number, default: 5000 })\r\n  color = prop<string>({ type: String, default: '' })\r\n  closeable = prop<boolean>({ type: Boolean, default: true })\r\n  onClose = prop<() => void>({ type: [Function, undefined] as any })\r\n  onClick = prop<() => void>({ type: [Function, undefined] as any })\r\n  multiLine = prop<boolean>({ type: Boolean, default: false })\r\n  position = prop<NotificationPosition>({\r\n    type: String as any,\r\n    default: 'top-right',\r\n    validator: (value: string) => {\r\n      return ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value)\r\n    },\r\n  })\r\n  render = prop<any>({ type: Function, default: undefined })\r\n}\r\n\r\nclass VaToastRendererProps {\r\n  content = prop<any>({ type: Function, default: undefined })\r\n}\r\n\r\nconst VaToastRendererPropsMixin = Vue.with(VaToastRendererProps)\r\n\r\n@Options({\r\n  name: 'VaToastRenderer',\r\n})\r\nclass VaToastRenderer extends mixins(VaToastRendererPropsMixin) {\r\n  render () {\r\n    return this.content(h)\r\n  }\r\n}\r\n\r\nconst ToastPropsMixin = Vue.with(ToastProps)\r\n\r\n@Options({\r\n  name: 'VaToast',\r\n  components: { VaIcon, VaToastRenderer },\r\n  emits: ['on-click', 'on-close'],\r\n})\r\nexport default class VaToast extends mixins(\r\n  ColorMixin,\r\n  ToastPropsMixin,\r\n) {\r\n  private timer: any = null\r\n  public visible = false\r\n\r\n  get positionX (): 'right' | 'left' {\r\n    return this.position.includes('right') ? 'right' : 'left'\r\n  }\r\n\r\n  get positionY (): 'top' | 'bottom' {\r\n    return this.position.includes('top') ? 'top' : 'bottom'\r\n  }\r\n\r\n  get toastClasses () {\r\n    return [this.customClass]\r\n  }\r\n\r\n  get toastStyles () {\r\n    return {\r\n      [this.positionY]: `${this.offsetY}px`,\r\n      [this.positionX]: `${this.offsetX}px`,\r\n      backgroundColor: this.colorComputed,\r\n    }\r\n  }\r\n\r\n  destroyElement () {\r\n    this.$el.removeEventListener('transitionend', this.destroyElement)\r\n\r\n    // TODO: not sure if this is really needed (it doesn't work in vue3)\r\n    // this.$destroy() // or this.$destroy(true)\r\n\r\n    this.$el.remove() // or this.$el.parentNode?.removeChild(this.$el)\r\n  }\r\n\r\n  onToastClick () {\r\n    if (typeof this.$props.onClick === 'function') {\r\n      this.$props.onClick()\r\n      return\r\n    }\r\n    this.$emit('click')\r\n  }\r\n\r\n  onToastClose () {\r\n    this.visible = false\r\n    this.$el.addEventListener('transitionend', this.destroyElement)\r\n    if (typeof this.onClose === 'function') {\r\n      this.onClose()\r\n      return\r\n    }\r\n    this.$emit('close')\r\n  }\r\n\r\n  clearTimer () {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n    }\r\n  }\r\n\r\n  startTimer () {\r\n    if (this.duration > 0) {\r\n      this.timer = setTimeout(() => {\r\n        if (this.visible) {\r\n          this.onToastClose()\r\n        }\r\n      }, this.duration)\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.visible = true\r\n    if (this.duration > 0) {\r\n      this.timer = setTimeout(() => {\r\n        if (this.visible) {\r\n          this.onToastClose()\r\n        }\r\n      }, this.duration)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-toast {\r\n  display: flex;\r\n  width: $toast-width;\r\n  padding: $toast-padding;\r\n  align-items: center;\r\n  border-radius: $toast-radius;\r\n  box-sizing: border-box;\r\n  border: 1px solid var(--va-toast-border-color);\r\n  position: fixed;\r\n  background-color: white;\r\n  color: #ffffff;\r\n  box-shadow: $toast-shadow;\r\n  transition: opacity 0.3s, transform 0.3s, left 0.3s, right 0.3s, top 0.4s, bottom 0.3s;\r\n  overflow: hidden;\r\n\r\n  &--multiline {\r\n    min-height: 70px;\r\n  }\r\n\r\n  &--right {\r\n    right: 16px;\r\n  }\r\n\r\n  &--left {\r\n    left: 16px;\r\n  }\r\n\r\n  &__group {\r\n    margin-left: var(--va-toast-group-margin-left);\r\n    margin-right: var(--va-toast-group-margin-right);\r\n  }\r\n\r\n  &__title {\r\n    font-weight: var(--va-toast-title-font-weight);\r\n    font-size: var(--va-toast-title-font-size);\r\n    color: var(--va-toast-title-color);\r\n    margin: var(--va-toast-title-margin);\r\n  }\r\n\r\n  &__content {\r\n    font-size: var(--va-toast-content-font-size);\r\n    line-height: var(--va-toast-content-line-height);\r\n    padding-right: var(--va-toast-content-padding-right);\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    height: var(--va-toast-icon-height);\r\n    width: var(--va-toast-icon-width);\r\n    font-size: var(--va-toast-icon-font-size);\r\n  }\r\n\r\n  &__close-icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 15px;\r\n    cursor: pointer;\r\n    transform: translateY(-50%);\r\n    font-size: $toast-close-font-size;\r\n\r\n    &:hover {\r\n      color: var(--va-toast-hover-color);\r\n    }\r\n  }\r\n}\r\n\r\n.va-toast-fade-enter {\r\n  &.right {\r\n    right: 0;\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  &.left {\r\n    left: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n}\r\n\r\n.va-toast-fade-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <transition name=\"va-toast-fade\">\r\n    <div\r\n      v-show=\"visible\"\r\n      :class=\"['va-toast', $props.multiLine ? 'va-toast--multiline' : '', ...toastClasses]\"\r\n      :style=\"toastStyles\"\r\n      @mouseenter=\"clearTimer()\"\r\n      @mouseleave=\"startTimer()\"\r\n      @click=\"onToastClick()\"\r\n      role=\"alert\"\r\n    >\r\n      <div class=\"va-toast__group\">\r\n        <h2 v-if=\"title\" class=\"va-toast__title\" v-text=\"title\"></h2>\r\n\r\n        <div class=\"va-toast__content\" v-show=\"message\">\r\n          <p v-text=\"message\"></p>\r\n        </div>\r\n\r\n        <div class=\"va-toast__content\" v-if=\"render\">\r\n          <VaToastRenderer :content=\"render\" />\r\n        </div>\r\n\r\n        <va-icon\r\n          v-if=\"closeable\"\r\n          size=\"small\"\r\n          :name=\"icon\"\r\n          class=\"va-toast__close-icon\"\r\n          @click.stop=\"onToastClose\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { h, watch } from 'vue'\r\nimport { prop, mixins, Vue, Options } from 'vue-class-component'\r\nimport VaIcon from '../va-icon/VaIcon.vue'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { NotificationPosition } from './types'\r\n\r\nclass ToastProps {\r\n  title = prop<string>({ type: String, default: '' })\r\n  offsetY = prop<number>({ type: Number, default: 16 })\r\n  offsetX = prop<number>({ type: Number, default: 16 })\r\n  message = prop<string | Function>({ type: [String, Function] as any, default: '' })\r\n  icon = prop<string>({ type: String, default: 'close' })\r\n  customClass = prop<string>({ type: String, default: '' })\r\n  duration = prop<number>({ type: Number, default: 5000 })\r\n  color = prop<string>({ type: String, default: '' })\r\n  closeable = prop<boolean>({ type: Boolean, default: true })\r\n  onClose = prop<() => void>({ type: [Function, undefined] as any })\r\n  onClick = prop<() => void>({ type: [Function, undefined] as any })\r\n  multiLine = prop<boolean>({ type: Boolean, default: false })\r\n  position = prop<NotificationPosition>({\r\n    type: String as any,\r\n    default: 'top-right',\r\n    validator: (value: string) => {\r\n      return ['top-right', 'top-left', 'bottom-right', 'bottom-left'].includes(value)\r\n    },\r\n  })\r\n  render = prop<any>({ type: Function, default: undefined })\r\n}\r\n\r\nclass VaToastRendererProps {\r\n  content = prop<any>({ type: Function, default: undefined })\r\n}\r\n\r\nconst VaToastRendererPropsMixin = Vue.with(VaToastRendererProps)\r\n\r\n@Options({\r\n  name: 'VaToastRenderer',\r\n})\r\nclass VaToastRenderer extends mixins(VaToastRendererPropsMixin) {\r\n  render () {\r\n    return this.content(h)\r\n  }\r\n}\r\n\r\nconst ToastPropsMixin = Vue.with(ToastProps)\r\n\r\n@Options({\r\n  name: 'VaToast',\r\n  components: { VaIcon, VaToastRenderer },\r\n  emits: ['on-click', 'on-close'],\r\n})\r\nexport default class VaToast extends mixins(\r\n  ColorMixin,\r\n  ToastPropsMixin,\r\n) {\r\n  private timer: any = null\r\n  public visible = false\r\n\r\n  get positionX (): 'right' | 'left' {\r\n    return this.position.includes('right') ? 'right' : 'left'\r\n  }\r\n\r\n  get positionY (): 'top' | 'bottom' {\r\n    return this.position.includes('top') ? 'top' : 'bottom'\r\n  }\r\n\r\n  get toastClasses () {\r\n    return [this.customClass]\r\n  }\r\n\r\n  get toastStyles () {\r\n    return {\r\n      [this.positionY]: `${this.offsetY}px`,\r\n      [this.positionX]: `${this.offsetX}px`,\r\n      backgroundColor: this.colorComputed,\r\n    }\r\n  }\r\n\r\n  destroyElement () {\r\n    this.$el.removeEventListener('transitionend', this.destroyElement)\r\n\r\n    // TODO: not sure if this is really needed (it doesn't work in vue3)\r\n    // this.$destroy() // or this.$destroy(true)\r\n\r\n    this.$el.remove() // or this.$el.parentNode?.removeChild(this.$el)\r\n  }\r\n\r\n  onToastClick () {\r\n    if (typeof this.$props.onClick === 'function') {\r\n      this.$props.onClick()\r\n      return\r\n    }\r\n    this.$emit('click')\r\n  }\r\n\r\n  onToastClose () {\r\n    this.visible = false\r\n    this.$el.addEventListener('transitionend', this.destroyElement)\r\n    if (typeof this.onClose === 'function') {\r\n      this.onClose()\r\n      return\r\n    }\r\n    this.$emit('close')\r\n  }\r\n\r\n  clearTimer () {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer)\r\n    }\r\n  }\r\n\r\n  startTimer () {\r\n    if (this.duration > 0) {\r\n      this.timer = setTimeout(() => {\r\n        if (this.visible) {\r\n          this.onToastClose()\r\n        }\r\n      }, this.duration)\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.visible = true\r\n    if (this.duration > 0) {\r\n      this.timer = setTimeout(() => {\r\n        if (this.visible) {\r\n          this.onToastClose()\r\n        }\r\n      }, this.duration)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-toast {\r\n  display: flex;\r\n  width: $toast-width;\r\n  padding: $toast-padding;\r\n  align-items: center;\r\n  border-radius: $toast-radius;\r\n  box-sizing: border-box;\r\n  border: 1px solid var(--va-toast-border-color);\r\n  position: fixed;\r\n  background-color: white;\r\n  color: #ffffff;\r\n  box-shadow: $toast-shadow;\r\n  transition: opacity 0.3s, transform 0.3s, left 0.3s, right 0.3s, top 0.4s, bottom 0.3s;\r\n  overflow: hidden;\r\n\r\n  &--multiline {\r\n    min-height: 70px;\r\n  }\r\n\r\n  &--right {\r\n    right: 16px;\r\n  }\r\n\r\n  &--left {\r\n    left: 16px;\r\n  }\r\n\r\n  &__group {\r\n    margin-left: var(--va-toast-group-margin-left);\r\n    margin-right: var(--va-toast-group-margin-right);\r\n  }\r\n\r\n  &__title {\r\n    font-weight: var(--va-toast-title-font-weight);\r\n    font-size: var(--va-toast-title-font-size);\r\n    color: var(--va-toast-title-color);\r\n    margin: var(--va-toast-title-margin);\r\n  }\r\n\r\n  &__content {\r\n    font-size: var(--va-toast-content-font-size);\r\n    line-height: var(--va-toast-content-line-height);\r\n    padding-right: var(--va-toast-content-padding-right);\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    height: var(--va-toast-icon-height);\r\n    width: var(--va-toast-icon-width);\r\n    font-size: var(--va-toast-icon-font-size);\r\n  }\r\n\r\n  &__close-icon {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 15px;\r\n    cursor: pointer;\r\n    transform: translateY(-50%);\r\n    font-size: $toast-close-font-size;\r\n\r\n    &:hover {\r\n      color: var(--va-toast-hover-color);\r\n    }\r\n  }\r\n}\r\n\r\n.va-toast-fade-enter {\r\n  &.right {\r\n    right: 0;\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  &.left {\r\n    left: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n}\r\n\r\n.va-toast-fade-leave-active {\r\n  opacity: 0;\r\n}\r\n\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\n\r\nimport VaToast from './VaToast.vue'\r\n\r\nexport default withConfigTransport(VaToast)\r\n","import VaToast from './VaToast'\r\nimport { NotificationOptions } from './types'\r\nimport { VNode, App, createVNode, render, cloneVNode } from 'vue'\r\n\r\nconst Z_INDEX = 100\r\nconst GAP = 5\r\nlet seed = 1\r\n\r\nlet toastInstances: VNode[] = []\r\n\r\ntype OptionKeys = keyof NotificationOptions;\r\n\r\nconst merge = (target: NotificationOptions | any, ...args: NotificationOptions[]): NotificationOptions => {\r\n  args.forEach((source) => {\r\n    if (typeof source !== 'object') {\r\n      return\r\n    }\r\n    for (const prop in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, prop)) {\r\n        const value = source[prop as OptionKeys]\r\n        if (value !== undefined) {\r\n          target[prop] = value\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return target\r\n}\r\n\r\nconst getTranslateValue = (item: VNode, position: string) => {\r\n  if (item.el) {\r\n    const direction = position.includes('bottom') ? -1 : 1\r\n    return (item.el.offsetHeight + GAP) * direction\r\n  }\r\n  return 0\r\n}\r\n\r\nconst getNewTranslateValue = (transformY: string, redundantHeight: number, position: string) => {\r\n  const direction = position.includes('bottom') ? -1 : 1\r\n  return parseInt(transformY, 10) - (redundantHeight + GAP) * direction\r\n}\r\n\r\nconst getNodeProps = (vNode: VNode) => {\r\n  // Here we assume that vNode is a `withConfigTransport` wrapped component\r\n  // so we can derive computedProps from it\r\n\r\n  // @ts-ignore\r\n  return vNode.component?.proxy?.computedProps as Record<OptionKeys, any>\r\n}\r\n\r\nconst closeNotification = (targetInstance: VNode | null, destroyElementFn: () => void) => {\r\n  if (!targetInstance) {\r\n    return\r\n  }\r\n\r\n  if (!toastInstances.length) {\r\n    seed = 1\r\n    return\r\n  }\r\n  const targetInstanceIndex = toastInstances.findIndex((instance) => instance === targetInstance)\r\n\r\n  if (targetInstanceIndex < 0) {\r\n    return\r\n  }\r\n\r\n  const nodeProps = getNodeProps(targetInstance)\r\n\r\n  const {\r\n    offsetX: targetOffsetX,\r\n    offsetY: targetOffsetY,\r\n    position: targetPosition,\r\n  } = nodeProps\r\n  const redundantHeight: number | null = targetInstance.el?.offsetHeight\r\n\r\n  destroyElementFn()\r\n\r\n  toastInstances = toastInstances.reduce((acc: any[], instance, index) => {\r\n    if (instance === targetInstance) {\r\n      return acc\r\n    }\r\n    if (instance.component) {\r\n      const { offsetX, offsetY, position } = getNodeProps(instance)\r\n      const isNextInstance = index > targetInstanceIndex && targetOffsetX === offsetX && targetOffsetY === offsetY && targetPosition === position\r\n      if (isNextInstance && instance.el && redundantHeight) {\r\n        const [_, transformY] = instance.el.style.transform.match(/[\\d-]+(?=px)/g)\r\n        const transformYNew = getNewTranslateValue(transformY, redundantHeight, position)\r\n        instance.el.style.transform = `translate(0, ${transformYNew}px)`\r\n      }\r\n    }\r\n    return [...acc, instance]\r\n  }, [])\r\n\r\n  if (!toastInstances.length) {\r\n    seed = 1\r\n  }\r\n}\r\n\r\nconst destroy = (el: HTMLElement | null | undefined, node: VNode | null) => {\r\n  if (el) {\r\n    render(null, el)\r\n    el.remove()\r\n  }\r\n  el = null\r\n  node = null\r\n}\r\n\r\nconst mount = (component: any, {\r\n  props,\r\n  children,\r\n  element,\r\n  app,\r\n}: { props?: { [key: string]: any }; children?: any; element?: HTMLElement; app?: App } = {}): { vNode: VNode; el?: HTMLElement } => {\r\n  let el: HTMLElement | null | undefined = element\r\n\r\n  // eslint-disable-next-line prefer-const\r\n  let vNode: VNode | null\r\n\r\n  const onClose = () => {\r\n    closeNotification(vNode, () => destroy(el, vNode))\r\n\r\n    if (props?.onClose) {\r\n      props.onClose()\r\n    }\r\n  }\r\n\r\n  vNode = createVNode(component, { ...props, onClose }, children)\r\n\r\n  if (app?._context) {\r\n    vNode.appContext = app._context\r\n  }\r\n  if (el) {\r\n    render(vNode, el)\r\n  } else if (typeof document !== 'undefined') {\r\n    render(vNode, el = document.createElement('div'))\r\n  }\r\n\r\n  return { vNode, el }\r\n}\r\n\r\nconst closeAllNotifications = () => {\r\n  if (!toastInstances.length) {\r\n    seed = 1\r\n    return\r\n  }\r\n  toastInstances.forEach(instance => getNodeProps(instance).onClose())\r\n}\r\n\r\nconst closeById = (id: string) => {\r\n  const targetInstance = toastInstances.find(instance => instance.el?.id === id)\r\n\r\n  if (targetInstance) {\r\n    const nodeProps = getNodeProps(targetInstance)\r\n    nodeProps.onClose()\r\n  }\r\n}\r\n\r\nconst createToastInstance = (customProps: NotificationOptions, app: App): VNode | null => {\r\n  const { vNode, el } = mount(VaToast, { app, props: customProps })\r\n\r\n  const nodeProps = getNodeProps(vNode)\r\n\r\n  if (el && vNode.el && nodeProps) {\r\n    document.body.appendChild(el)\r\n    const { offsetX, offsetY, position } = nodeProps\r\n\r\n    vNode.el.style.display = 'flex'\r\n    vNode.el.id = 'notification_' + seed\r\n    vNode.el.style.zIndex = Z_INDEX + ''\r\n\r\n    let transformY = 0\r\n    toastInstances.filter(item => {\r\n      const {\r\n        offsetX: itemOffsetX,\r\n        offsetY: itemOffsetY,\r\n        position: itemPosition,\r\n      } = getNodeProps(item)\r\n\r\n      return itemOffsetX === offsetX && itemOffsetY === offsetY && position === itemPosition\r\n    }).forEach((item) => {\r\n      transformY += getTranslateValue(item, position)\r\n    })\r\n    vNode.el.style.transform = `translate(0, ${transformY}px)`\r\n\r\n    seed += 1\r\n    return vNode\r\n  }\r\n  return null\r\n}\r\n\r\nconst getToastOptions = (options: string | NotificationOptions): any => {\r\n  if (typeof options === 'string') {\r\n    options = {\r\n      message: options,\r\n    }\r\n  }\r\n  return merge({}, options)\r\n}\r\n\r\nconst initNotification = (options: NotificationOptions | string, app: App) => {\r\n  const toastInstance = createToastInstance(getToastOptions(options), app)\r\n  if (toastInstance) {\r\n    toastInstances.push(toastInstance)\r\n  }\r\n  return toastInstance\r\n}\r\n\r\nclass Notification {\r\n  app: App;\r\n\r\n  constructor (app: App) {\r\n    this.app = app\r\n  }\r\n\r\n  init (options: NotificationOptions) {\r\n    return initNotification(options, this.app)?.el?.id as null | string\r\n  }\r\n\r\n  close (id: string) {\r\n    closeById(id)\r\n  }\r\n\r\n  closeAll () {\r\n    closeAllNotifications()\r\n  }\r\n}\r\n\r\nexport default Notification\r\n"],"names":["VaToastRendererPropsMixin","Vue","with","VaToastRendererProps","constructor","this","prop","type","Function","default","undefined","VaToastRenderer","mixins","render","content","h","Options","name","ToastPropsMixin","ToastProps","String","Number","Boolean","validator","value","includes","VaToast","ColorMixin","positionX","position","positionY","toastClasses","customClass","toastStyles","offsetY","offsetX","backgroundColor","colorComputed","destroyElement","$el","removeEventListener","remove","onToastClick","$props","onClick","$emit","onToastClose","visible","addEventListener","onClose","clearTimer","timer","clearTimeout","startTimer","duration","setTimeout","mounted","components","VaIcon","emits","class","_createBlock","_createElementVNode","_ctx","multiLine","style","onMouseenter","onMouseleave","role","_hoisted_1","_createElementBlock","_toDisplayString","_hoisted_3","_hoisted_5","_createVNode","size","withConfigTransport","seed","toastInstances","getNodeProps","vNode","component","proxy","computedProps","closeNotification","targetInstance","destroyElementFn","length","targetInstanceIndex","findIndex","instance","nodeProps","targetOffsetX","targetOffsetY","targetPosition","redundantHeight","el","offsetHeight","reduce","acc","index","_","transformY","transform","match","transformYNew","direction","parseInt","getNewTranslateValue","mount","props","children","element","app","createVNode","node","destroy","_context","appContext","document","createElement","getToastOptions","options","message","target","args","forEach","source","Object","prototype","hasOwnProperty","call","merge","initNotification","toastInstance","customProps","body","appendChild","display","id","zIndex","Z_INDEX","filter","item","itemOffsetX","itemOffsetY","itemPosition","getTranslateValue","createToastInstance","push","Notification","init","close","find","closeById","closeAll"],"mappings":"2rBAqEA,MAAMA,EAA4BC,EAAIC,KAJtC,MAAMC,qBAANC,cACEC,aAAUC,EAAU,CAAEC,KAAMC,SAAUC,aAASC,OAQjD,IAAMC,EAAN,MAAMA,wBAAwBC,EAAOZ,IACnCa,SACE,OAAOR,KAAKS,QAAQC,KAFlBJ,KAHLK,EAAQ,CACPC,KAAM,qBAEFN,GAMN,MAAMO,EAAkBjB,EAAIC,KAtC5B,MAAMiB,WAANf,cACEC,WAAQC,EAAa,CAAEC,KAAMa,OAAQX,QAAS,KAC9CJ,aAAUC,EAAa,CAAEC,KAAMc,OAAQZ,QAAS,KAChDJ,aAAUC,EAAa,CAAEC,KAAMc,OAAQZ,QAAS,KAChDJ,aAAUC,EAAwB,CAAEC,KAAM,CAACa,OAAQZ,UAAkBC,QAAS,KAC9EJ,UAAOC,EAAa,CAAEC,KAAMa,OAAQX,QAAS,UAC7CJ,iBAAcC,EAAa,CAAEC,KAAMa,OAAQX,QAAS,KACpDJ,cAAWC,EAAa,CAAEC,KAAMc,OAAQZ,QAAS,MACjDJ,WAAQC,EAAa,CAAEC,KAAMa,OAAQX,QAAS,KAC9CJ,eAAYC,EAAc,CAAEC,KAAMe,QAASb,SAAS,IACpDJ,aAAUC,EAAiB,CAAEC,KAAM,CAACC,cAAUE,KAC9CL,aAAUC,EAAiB,CAAEC,KAAM,CAACC,cAAUE,KAC9CL,eAAYC,EAAc,CAAEC,KAAMe,QAASb,SAAS,IACpDJ,cAAWC,EAA2B,CACpCC,KAAMa,OACNX,QAAS,YACTc,UAAYC,GACH,CAAC,YAAa,WAAY,eAAgB,eAAeC,SAASD,KAG7EnB,YAASC,EAAU,CAAEC,KAAMC,SAAUC,aAASC,OAyBhD,IAAqBgB,EAArB,MAAqBA,gBAAgBd,EACnCe,EACAT,IAFFd,kCAIUC,WAAa,KACdA,cAAU,EAEjBuB,gBACE,OAAOvB,KAAKwB,SAASJ,SAAS,SAAW,QAAU,OAGrDK,gBACE,OAAOzB,KAAKwB,SAASJ,SAAS,OAAS,MAAQ,SAGjDM,mBACE,MAAO,CAAC1B,KAAK2B,aAGfC,kBACE,MAAO,CACL,CAAC5B,KAAKyB,WAAY,GAAGzB,KAAK6B,YAC1B,CAAC7B,KAAKuB,WAAY,GAAGvB,KAAK8B,YAC1BC,gBAAiB/B,KAAKgC,eAI1BC,iBACEjC,KAAKkC,IAAIC,oBAAoB,gBAAiBnC,KAAKiC,gBAKnDjC,KAAKkC,IAAIE,SAGXC,eACqC,mBAAxBrC,KAAKsC,OAAOC,QAIvBvC,KAAKwC,MAAM,SAHTxC,KAAKsC,OAAOC,UAMhBE,eACEzC,KAAK0C,SAAU,EACf1C,KAAKkC,IAAIS,iBAAiB,gBAAiB3C,KAAKiC,gBACpB,mBAAjBjC,KAAK4C,QAIhB5C,KAAKwC,MAAM,SAHTxC,KAAK4C,UAMTC,aACM7C,KAAK8C,OACPC,aAAa/C,KAAK8C,OAItBE,aACMhD,KAAKiD,SAAW,IAClBjD,KAAK8C,MAAQI,YAAW,KAClBlD,KAAK0C,SACP1C,KAAKyC,iBAENzC,KAAKiD,WAIZE,UACEnD,KAAK0C,SAAU,EACX1C,KAAKiD,SAAW,IAClBjD,KAAK8C,MAAQI,YAAW,KAClBlD,KAAK0C,SACP1C,KAAKyC,iBAENzC,KAAKiD,aA7EO5B,KALpBV,EAAQ,CACPC,KAAM,UACNwC,WAAY,QAAEC,EAAQ/C,gBAAAA,GACtBgD,MAAO,CAAC,WAAY,eAEDjC,SAAAA,WC5EVkC,MAAM,wCAGJA,MAAM,gDAINA,MAAM,2hJAjBjBC,KAAY5C,KAAK,6BACf,OAAA6C,SAEGF,oBAAoBG,SAAOC,sCAA2CD,iBACtEE,QAAOF,eACPG,4BAAYH,gBACZI,4BAAYJ,gBACZnB,uBAAOmB,kBACRK,KAAK,UAELN,QAAAO,GACYN,EAAK,WAAfO,cAAiBV,MAAM,8BAAkBW,EAAQR,oCAEjDD,QAAAU,GACEV,mBAAGS,EAAQR,gCAD0BA,aAIFA,EAAM,YAA3CO,QAAAG,GACEC,KAAkB5D,QAASiD,8CAIrBA,EAAS,eADjBF,WAEEc,KAAK,QACJ1D,KAAM8C,OACPH,MAAM,uBACLhB,UAAYmB,8EAxBTA,sECCd,MAAea,EAAoBlD,GCEnC,IAAImD,EAAO,EAEPC,EAA0B,GAI9B,MA8BMC,aAAgBC,YAKpB,2BAAOA,EAAMC,gCAAWC,4BAAOC,eAG3BC,kBAAoB,CAACC,EAA8BC,WACvD,IAAKD,EACH,OAGF,IAAKP,EAAeS,OAElB,YADAV,EAAO,GAGT,MAAMW,EAAsBV,EAAeW,WAAWC,GAAaA,IAAaL,IAEhF,GAAIG,EAAsB,EACxB,OAGF,MAAMG,EAAYZ,aAAaM,IAG7BlD,QAASyD,EACT1D,QAAS2D,EACThE,SAAUiE,GACRH,EACEI,YAAiCV,EAAeW,yBAAIC,aAE1DX,IAEAR,EAAiBA,EAAeoB,QAAO,CAACC,EAAYT,EAAUU,KAC5D,GAAIV,IAAaL,EACf,OAAOc,EAET,GAAIT,EAAST,UAAW,CACtB,MAAM9C,QAAEA,EAAOD,QAAEA,EAAOL,SAAEA,GAAakD,aAAaW,GAEpD,GADuBU,EAAQZ,GAAuBI,IAAkBzD,GAAW0D,IAAkB3D,GAAW4D,IAAmBjE,GAC7G6D,EAASM,IAAMD,EAAiB,CACpD,MAAOM,EAAGC,GAAcZ,EAASM,GAAG/B,MAAMsC,UAAUC,MAAM,iBACpDC,EAhDe,EAACH,EAAoBP,EAAyBlE,KACzE,MAAM6E,EAAY7E,EAASJ,SAAS,WAAa,EAAI,EACrD,OAAOkF,SAASL,EAAY,KAAOP,EAlCzB,GAkCkDW,GA8ChCE,CAAqBN,EAAYP,EAAiBlE,GACxE6D,EAASM,GAAG/B,MAAMsC,UAAY,gBAAgBE,QAGlD,MAAO,IAAIN,EAAKT,KACf,IAEEZ,EAAeS,SAClBV,EAAO,IAaLgC,MAAQ,CAAC5B,GACb6B,MAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,IAAAA,GACwF,MACxF,IAGIjC,EAHAgB,EAAqCgB,EAwBzC,OAXAhC,EAAQkC,EAAYjC,EAAW,IAAK6B,EAAO7D,QAR3B,KACdmC,kBAAkBJ,GAAO,IArBb,EAACgB,EAAoCmB,KAC/CnB,IACFnF,EAAO,KAAMmF,GACbA,EAAGvD,UAELuD,EAAK,MAgB4BoB,CAAQpB,MAEnCc,MAAAA,SAAAA,EAAO7D,UACT6D,EAAM7D,YAI4C8D,IAElDE,MAAAA,SAAAA,EAAKI,YACPrC,EAAMsC,WAAaL,EAAII,UAErBrB,EACFnF,EAAOmE,EAAOgB,GACe,oBAAbuB,UAChB1G,EAAOmE,EAAOgB,EAAKuB,SAASC,cAAc,QAGrC,CAAExC,MAAAA,EAAOgB,GAAAA,IAqDZyB,gBAAmBC,IACA,iBAAZA,IACTA,EAAU,CACRC,QAASD,IApLD,EAACE,KAAsCC,KACnDA,EAAKC,SAASC,IACZ,GAAsB,iBAAXA,EAGX,IAAK,MAAMzH,KAAQyH,EACjB,GAAIC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQzH,GAAO,CACtD,MAAMkB,EAAQuG,EAAOzH,QACPI,IAAVc,IACFoG,EAAOtH,GAAQkB,OAKhBoG,GAyKAQ,CAAM,GAAIV,IAGbW,iBAAmB,CAACX,EAAuCT,KAC/D,MAAMqB,EA3CoB,EAACC,EAAkCtB,KAC7D,MAAMjC,MAAEA,EAAKgB,GAAEA,GAAOa,MAAMnF,EAAS,CAAEuF,IAAAA,EAAKH,MAAOyB,IAE7C5C,EAAYZ,aAAaC,GAE/B,GAAIgB,GAAMhB,EAAMgB,IAAML,EAAW,CAC/B4B,SAASiB,KAAKC,YAAYzC,GAC1B,MAAM7D,QAAEA,EAAOD,QAAEA,EAAOL,SAAEA,GAAa8D,EAEvCX,EAAMgB,GAAG/B,MAAMyE,QAAU,OACzB1D,EAAMgB,GAAG2C,GAAK,gBAAkB9D,EAChCG,EAAMgB,GAAG/B,MAAM2E,OAASC,MAExB,IAAIvC,EAAa,EAejB,OAdAxB,EAAegE,QAAOC,IACpB,MACE5G,QAAS6G,EACT9G,QAAS+G,EACTpH,SAAUqH,GACRnE,aAAagE,GAEjB,OAAOC,IAAgB7G,GAAW8G,IAAgB/G,GAAWL,IAAaqH,KACzEpB,SAASiB,IACVzC,GAtJoB,EAACyC,EAAalH,KACtC,GAAIkH,EAAK/C,GAAI,CACX,MAAMU,EAAY7E,EAASJ,SAAS,WAAa,EAAI,EACrD,OAAQsH,EAAK/C,GAAGC,aA3BR,GA2B8BS,EAExC,OAAO,GAiJWyC,CAAkBJ,EAAMlH,MAExCmD,EAAMgB,GAAG/B,MAAMsC,UAAY,gBAAgBD,OAE3CzB,GAAQ,EACDG,EAET,OAAO,MAaeoE,CAAoB3B,gBAAgBC,GAAUT,GAIpE,OAHIqB,GACFxD,EAAeuE,KAAKf,GAEfA,GAGT,MAAMgB,aAGJlJ,YAAa6G,GACX5G,KAAK4G,IAAMA,EAGbsC,KAAM7B,WACJ,2BAAOW,iBAAiBX,EAASrH,KAAK4G,2BAAMjB,yBAAI2C,GAGlDa,MAAOb,GAtES,CAACA,IACjB,MAAMtD,EAAiBP,EAAe2E,MAAK/D,UAAY,iBAAAA,EAASM,yBAAI2C,MAAOA,KAEvEtD,GACgBN,aAAaM,GACrBpC,WAkEVyG,CAAUf,GAGZgB,WAjFK7E,EAAeS,OAIpBT,EAAegD,SAAQpC,GAAYX,aAAaW,GAAUzC,YAHxD4B,EAAO"}