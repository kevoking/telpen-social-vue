{"version":3,"file":"index49.js","sources":["../../src/mixins/SelectableList/SelectableListMixin.ts","../../src/components/va-option-list/VaOptionList.vue","../../src/components/va-option-list/VaOptionList.vue?vue&type=template&id=69ca68d9&lang.js","../../src/components/va-option-list/index.ts"],"sourcesContent":["import { mixins, prop, Vue } from 'vue-class-component'\r\nimport { FormComponentMixin } from '../FormComponent/FormComponentMixin'\r\nimport { getProp } from '../../services/utils'\r\n\r\ntype StringOrFunction = string | Function\r\n\r\nclass SelectableListProps {\r\n  options = prop<any[]>({ type: Array, default: () => [] })\r\n  textBy = prop<StringOrFunction>({ type: [String, Function], default: 'text' })\r\n  valueBy = prop<StringOrFunction>({ type: [String, Function] })\r\n  trackBy = prop<StringOrFunction>({ type: [String, Function], default: 'value' })\r\n  disabledBy = prop<StringOrFunction>({ type: [String, Function], default: 'disabled' })\r\n}\r\n\r\nconst SelectableListPropsMixin = Vue.with(SelectableListProps)\r\n\r\nexport class SelectableListMixin extends mixins(\r\n  FormComponentMixin,\r\n  SelectableListPropsMixin,\r\n) {\r\n  isSelectableListComponent!: boolean\r\n\r\n  created () {\r\n    this.isSelectableListComponent = true\r\n  }\r\n\r\n  getValue (option: any) {\r\n    if (!this.valueBy) { return option }\r\n\r\n    return typeof option === 'string'\r\n      ? option\r\n      : getProp(option, this.valueBy)\r\n  }\r\n\r\n  getOptionByValue (value: any) {\r\n    if (!this.valueBy) { return value }\r\n\r\n    return this.options.find((option) => value === this.getValue(option)) || value\r\n  }\r\n\r\n  getText (option: any) {\r\n    return typeof option === 'string'\r\n      ? option\r\n      : getProp(option, this.textBy)\r\n  }\r\n\r\n  getDisabled (option: any) {\r\n    return typeof option !== 'string' && getProp(option, this.disabledBy)\r\n  }\r\n\r\n  getTrackBy (option: any) {\r\n    return typeof option === 'string'\r\n      ? option\r\n      : getProp(option, this.trackBy)\r\n  }\r\n}\r\n","<template>\r\n  <va-input-wrapper\r\n    :error=\"computedError\"\r\n    :error-messages=\"computedErrorMessages\"\r\n    :error-count=\"$props.errorCount\"\r\n  >\r\n    <ul\r\n      class=\"va-option-list__list\"\r\n      :id=\"$props.id\"\r\n    >\r\n      <li\r\n        v-for=\"(option, index) in $props.options\"\r\n        :key=\"getKey(option)\"\r\n      >\r\n        <slot\r\n          :props=\"{\r\n            option,\r\n            isDisabled,\r\n            name: $props.name,\r\n            color: $props.color,\r\n            leftLabel: $props.leftLabel,\r\n            getText,\r\n            selectedValue,\r\n            index\r\n          }\"\r\n        >\r\n          <va-radio\r\n            v-if=\"$props.type === 'radio'\"\r\n            ref=\"input\"\r\n            :option=\"getValue(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :name=\"$props.name\"\r\n            :color=\"$props.color\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :label=\"getText(option)\"\r\n            v-model=\"selectedValue\"\r\n            :tabindex=\"index\"\r\n          />\r\n          <va-checkbox\r\n            v-else-if=\"$props.type === 'checkbox'\"\r\n            ref=\"input\"\r\n            v-model=\"selectedValue\"\r\n            :label=\"getText(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :array-value=\"getValue(option)\"\r\n            :color=\"$props.color\"\r\n            :name=\"$props.name\"\r\n          />\r\n          <va-switch\r\n            v-else\r\n            ref=\"input\"\r\n            v-model=\"selectedValue\"\r\n            :label=\"getText(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :array-value=\"getValue(option)\"\r\n            :color=\"$props.color\"\r\n            :name=\"$props.name\"\r\n          />\r\n        </slot>\r\n      </li>\r\n    </ul>\r\n  </va-input-wrapper>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport { generateUniqueId } from '../../services/utils'\r\nimport { SelectableListMixin } from '../../mixins/SelectableList/SelectableListMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport VaRadio from '../va-radio'\r\nimport VaCheckbox from '../va-checkbox'\r\nimport VaSwitch from '../va-switch'\r\nimport { VaInputWrapper } from '../va-input'\r\n\r\nclass OptionListProps {\r\n  type = prop<string>({\r\n    type: String,\r\n    default: 'checkbox',\r\n    validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\r\n  })\r\n\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  defaultValue = prop<string | number | Record<string, unknown> | any[]>({ type: [String, Number, Object, Array] })\r\n  name = prop<string>({ type: String, default: generateUniqueId })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  leftLabel = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<string | number | Record<string, unknown> | any[]>({ type: [String, Number, Object, Array] })\r\n}\r\n\r\nconst OptionListPropsMixin = Vue.with(OptionListProps)\r\n\r\n@Options({\r\n  name: 'VaOptionList',\r\n  components: { VaRadio, VaCheckbox, VaSwitch, VaInputWrapper },\r\n})\r\nexport default class VaOptionList extends mixins(\r\n  SelectableListMixin,\r\n  StatefulMixin,\r\n  OptionListPropsMixin,\r\n) {\r\n  get isRadio () {\r\n    return this.$props.type === 'radio'\r\n  }\r\n\r\n  get selectedValue () {\r\n    const value = this.isRadio ? null : []\r\n    return this.valueComputed || this.$props.defaultValue || value\r\n  }\r\n\r\n  set selectedValue (value) {\r\n    if (this.$props.readonly) {\r\n      return\r\n    }\r\n    if (this.isRadio) {\r\n      this.valueComputed = this.getValue(value)\r\n    } else {\r\n      this.valueComputed = Array.isArray(value)\r\n        ? value.map(el => this.getValue(el))\r\n        : [this.getValue(value)]\r\n    }\r\n  }\r\n\r\n  getKey (option: any) {\r\n    return this.getTrackBy(option)\r\n  }\r\n\r\n  isDisabled (option: any) {\r\n    return this.$props.disabled || this.getDisabled(option)\r\n  }\r\n\r\n  reset () {\r\n    this.valueComputed = undefined\r\n  }\r\n\r\n  focus () {\r\n    const elements = (this as any).$refs.input\r\n    const firstActiveEl = Array.isArray(elements) && elements.find(el => !el.disabled)\r\n    if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\r\n      firstActiveEl.focus()\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.isSelectableListComponent = true\r\n    if (!this.valueComputed && this.$props.defaultValue) {\r\n      this.selectedValue = this.$props.defaultValue\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'variables';\r\n\r\n.va-option-list {\r\n  &__list {\r\n    line-height: var(--va-option-list-line-height);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <va-input-wrapper\r\n    :error=\"computedError\"\r\n    :error-messages=\"computedErrorMessages\"\r\n    :error-count=\"$props.errorCount\"\r\n  >\r\n    <ul\r\n      class=\"va-option-list__list\"\r\n      :id=\"$props.id\"\r\n    >\r\n      <li\r\n        v-for=\"(option, index) in $props.options\"\r\n        :key=\"getKey(option)\"\r\n      >\r\n        <slot\r\n          :props=\"{\r\n            option,\r\n            isDisabled,\r\n            name: $props.name,\r\n            color: $props.color,\r\n            leftLabel: $props.leftLabel,\r\n            getText,\r\n            selectedValue,\r\n            index\r\n          }\"\r\n        >\r\n          <va-radio\r\n            v-if=\"$props.type === 'radio'\"\r\n            ref=\"input\"\r\n            :option=\"getValue(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :name=\"$props.name\"\r\n            :color=\"$props.color\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :label=\"getText(option)\"\r\n            v-model=\"selectedValue\"\r\n            :tabindex=\"index\"\r\n          />\r\n          <va-checkbox\r\n            v-else-if=\"$props.type === 'checkbox'\"\r\n            ref=\"input\"\r\n            v-model=\"selectedValue\"\r\n            :label=\"getText(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :array-value=\"getValue(option)\"\r\n            :color=\"$props.color\"\r\n            :name=\"$props.name\"\r\n          />\r\n          <va-switch\r\n            v-else\r\n            ref=\"input\"\r\n            v-model=\"selectedValue\"\r\n            :label=\"getText(option)\"\r\n            :disabled=\"isDisabled(option)\"\r\n            :left-label=\"$props.leftLabel\"\r\n            :array-value=\"getValue(option)\"\r\n            :color=\"$props.color\"\r\n            :name=\"$props.name\"\r\n          />\r\n        </slot>\r\n      </li>\r\n    </ul>\r\n  </va-input-wrapper>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport { generateUniqueId } from '../../services/utils'\r\nimport { SelectableListMixin } from '../../mixins/SelectableList/SelectableListMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport VaRadio from '../va-radio'\r\nimport VaCheckbox from '../va-checkbox'\r\nimport VaSwitch from '../va-switch'\r\nimport { VaInputWrapper } from '../va-input'\r\n\r\nclass OptionListProps {\r\n  type = prop<string>({\r\n    type: String,\r\n    default: 'checkbox',\r\n    validator: (type: any) => ['radio', 'checkbox', 'switch'].includes(type),\r\n  })\r\n\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  defaultValue = prop<string | number | Record<string, unknown> | any[]>({ type: [String, Number, Object, Array] })\r\n  name = prop<string>({ type: String, default: generateUniqueId })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  leftLabel = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<string | number | Record<string, unknown> | any[]>({ type: [String, Number, Object, Array] })\r\n}\r\n\r\nconst OptionListPropsMixin = Vue.with(OptionListProps)\r\n\r\n@Options({\r\n  name: 'VaOptionList',\r\n  components: { VaRadio, VaCheckbox, VaSwitch, VaInputWrapper },\r\n})\r\nexport default class VaOptionList extends mixins(\r\n  SelectableListMixin,\r\n  StatefulMixin,\r\n  OptionListPropsMixin,\r\n) {\r\n  get isRadio () {\r\n    return this.$props.type === 'radio'\r\n  }\r\n\r\n  get selectedValue () {\r\n    const value = this.isRadio ? null : []\r\n    return this.valueComputed || this.$props.defaultValue || value\r\n  }\r\n\r\n  set selectedValue (value) {\r\n    if (this.$props.readonly) {\r\n      return\r\n    }\r\n    if (this.isRadio) {\r\n      this.valueComputed = this.getValue(value)\r\n    } else {\r\n      this.valueComputed = Array.isArray(value)\r\n        ? value.map(el => this.getValue(el))\r\n        : [this.getValue(value)]\r\n    }\r\n  }\r\n\r\n  getKey (option: any) {\r\n    return this.getTrackBy(option)\r\n  }\r\n\r\n  isDisabled (option: any) {\r\n    return this.$props.disabled || this.getDisabled(option)\r\n  }\r\n\r\n  reset () {\r\n    this.valueComputed = undefined\r\n  }\r\n\r\n  focus () {\r\n    const elements = (this as any).$refs.input\r\n    const firstActiveEl = Array.isArray(elements) && elements.find(el => !el.disabled)\r\n    if (firstActiveEl && typeof firstActiveEl.focus === 'function') {\r\n      firstActiveEl.focus()\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.isSelectableListComponent = true\r\n    if (!this.valueComputed && this.$props.defaultValue) {\r\n      this.selectedValue = this.$props.defaultValue\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'variables';\r\n\r\n.va-option-list {\r\n  &__list {\r\n    line-height: var(--va-option-list-line-height);\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaOptionList from './VaOptionList.vue'\r\n\r\nexport default withConfigTransport(VaOptionList)\r\n"],"names":["SelectableListPropsMixin","Vue","with","SelectableListProps","constructor","this","prop","type","Array","default","String","Function","SelectableListMixin","mixins","FormComponentMixin","created","isSelectableListComponent","getValue","option","valueBy","getProp","getOptionByValue","value","options","find","getText","textBy","getDisabled","disabledBy","getTrackBy","trackBy","OptionListPropsMixin","OptionListProps","validator","includes","Boolean","Number","Object","generateUniqueId","VaOptionList","StatefulMixin","isRadio","$props","selectedValue","valueComputed","defaultValue","readonly","isArray","map","el","getKey","isDisabled","disabled","reset","undefined","focus","elements","$refs","input","firstActiveEl","mounted","Options","name","components","VaRadio","VaCheckbox","VaSwitch","VaInputWrapper","_createBlock","error","_ctx","errorCount","_createElementVNode","class","id","_createElementBlock","index","key","_renderSlot","props","ref","color","leftLabel","label","tabindex","withConfigTransport"],"mappings":"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"}