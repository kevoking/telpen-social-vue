{"version":3,"file":"StatefulMixin.js","sources":["../../src/mixins/StatefulMixin/StatefulMixin.ts"],"sourcesContent":["import { mixins, Options, prop, Vue } from 'vue-class-component'\r\n\r\nexport type ValueState = {\r\n  modelValue?: any;\r\n}\r\n\r\nclass Props {\r\n  modelValue: any = prop<undefined>({\r\n    type: undefined,\r\n    default: undefined,\r\n  })\r\n\r\n  stateful = prop<boolean>({\r\n    type: Boolean,\r\n    default: false,\r\n  })\r\n}\r\n\r\nconst PropsMixin = Vue.with(Props)\r\n\r\n// TODO Definitions could be done better, but it's too complicated to bother.\r\n\r\n@Options({\r\n  emits: ['update:modelValue'],\r\n})\r\nexport class StatefulMixin extends mixins(PropsMixin) {\r\n  valueState: ValueState = {\r\n    modelValue: this.$props.modelValue,\r\n  }\r\n\r\n  hasStatefulMixin!: boolean\r\n\r\n  created () {\r\n    this.hasStatefulMixin = true\r\n  }\r\n\r\n  get valueComputed () {\r\n    if (this.$props.stateful) {\r\n      return this.valueState.modelValue\r\n    }\r\n    return this.$props.modelValue\r\n  }\r\n\r\n  set valueComputed (value) {\r\n    if (this.$props.stateful) {\r\n      this.valueState.modelValue = value\r\n    }\r\n    this.$emit('update:modelValue', value)\r\n  }\r\n}\r\n"],"names":["PropsMixin","Vue","with","Props","constructor","this","prop","type","undefined","default","Boolean","StatefulMixin","mixins","modelValue","$props","created","hasStatefulMixin","valueComputed","stateful","valueState","value","$emit","Options","emits"],"mappings":"iHAkBA,MAAMA,EAAaC,EAAIC,KAZvB,MAAMC,MAANC,cACEC,gBAAkBC,EAAgB,CAChCC,UAAMC,EACNC,aAASD,IAGXH,cAAWC,EAAc,CACvBC,KAAMG,QACND,SAAS,WAWAE,EAAb,MAAaA,sBAAsBC,EAAOZ,IAA1CI,kCACEC,gBAAyB,CACvBQ,WAAYR,KAAKS,OAAOD,YAK1BE,UACEV,KAAKW,kBAAmB,EAG1BC,oBACE,OAAIZ,KAAKS,OAAOI,SACPb,KAAKc,WAAWN,WAElBR,KAAKS,OAAOD,WAGrBI,kBAAmBG,GACbf,KAAKS,OAAOI,WACdb,KAAKc,WAAWN,WAAaO,GAE/Bf,KAAKgB,MAAM,oBAAqBD,KAtBvBT,KAHZW,EAAQ,CACPC,MAAO,CAAC,wBAEGZ"}