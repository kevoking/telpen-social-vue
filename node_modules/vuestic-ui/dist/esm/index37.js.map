{"version":3,"file":"index37.js","sources":["../../src/components/va-progress-bar/ProgressComponentMixin.ts","../../src/components/va-progress-bar/VaProgressBar.vue","../../src/components/va-progress-bar/VaProgressBar.vue?vue&type=template&id=ab4dd37e&lang.js","../../src/components/va-progress-bar/VaProgressCircle.vue","../../src/components/va-progress-bar/VaProgressCircle.vue?vue&type=template&id=0d32be92&lang.js","../../src/components/va-progress-bar/index.ts"],"sourcesContent":["import { mixins, prop, Vue } from 'vue-class-component'\r\nimport { normalizeValue } from '../../services/utils'\r\n\r\nclass ProgressProps {\r\n  modelValue = prop<number>({ type: Number, default: 0 })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  // If 'indeterminate' is 'true' 'value' prop will be ignored.\r\n  indeterminate = prop<boolean>({ type: Boolean, default: false })\r\n}\r\n\r\nconst ProgressPropsMixin = Vue.with(ProgressProps)\r\n\r\nexport class ProgressComponentMixin extends mixins(\r\n  ProgressPropsMixin,\r\n) {\r\n  get normalizedValue (): number {\r\n    return normalizeValue(this.modelValue)\r\n  }\r\n}\r\n","<template>\r\n  <div class=\"va-progress-bar\">\r\n    <div\r\n      :style=\"{colorComputed}\"\r\n      class=\"va-progress-bar__info\"\r\n    >\r\n      <slot v-if=\"!large\" />\r\n    </div>\r\n    <div\r\n      class=\"va-progress-bar__wrapper\"\r\n      :class=\"computedClass\"\r\n      :style=\"computedStyle\"\r\n    >\r\n      <div\r\n        :style=\"{\r\n          width: normalizedBuffer + '%',\r\n          backgroundColor: colorComputed,\r\n          ...(reverse ? { right: 0 } : { left: 0 })\r\n        }\"\r\n        class=\"va-progress-bar__buffer\"\r\n      />\r\n      <div\r\n        v-if=\"!indeterminate\"\r\n        :style=\"{\r\n          width: normalizedValue + '%',\r\n          backgroundColor: colorComputed,\r\n          ...(reverse && { 'margin-left': 'auto' })\r\n        }\"\r\n        class=\"va-progress-bar__overlay\"\r\n      >\r\n        <slot v-if=\"large\" />\r\n      </div>\r\n      <template v-else>\r\n        <div\r\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\r\n          class=\"va-progress-bar__overlay__indeterminate-start\"\r\n        />\r\n        <div\r\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\r\n          class=\"va-progress-bar__overlay__indeterminate-end\"\r\n        />\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\n\r\nimport { normalizeValue } from '../../services/utils'\r\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nclass ProgressBarProps {\r\n  buffer = prop<number>({ type: Number, default: 100 })\r\n  rounded = prop<boolean>({ type: Boolean, default: true })\r\n  size = prop<string | number>({ type: [Number, String], default: 'medium' })\r\n  reverse = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst ProgressBarPropsMixin = Vue.with(ProgressBarProps)\r\n\r\n@Options({\r\n  name: 'VaProgressBar',\r\n})\r\nexport default class VaProgressBar extends mixins(\r\n  ProgressComponentMixin,\r\n  ColorMixin,\r\n  SizeMixin,\r\n  ProgressBarPropsMixin,\r\n) {\r\n  get large () {\r\n    return this.size === 'large'\r\n  }\r\n\r\n  get small () {\r\n    return this.size === 'small'\r\n  }\r\n\r\n  get normalizedBuffer () {\r\n    if (this.indeterminate) {\r\n      return 100\r\n    }\r\n\r\n    return normalizeValue(this.buffer)\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-progress-bar__wrapper__square': (!this.rounded && !this.large) || this.small,\r\n      'va-progress-bar__small': this.small,\r\n      'va-progress-bar__large': this.large,\r\n    }\r\n  }\r\n\r\n  get computedStyle () {\r\n    if (this.size === 'medium') {\r\n      return { height: '0.5rem' }\r\n    }\r\n\r\n    if (!this.small && !this.large) {\r\n      return { height: typeof this.size === 'number' ? `${this.size}px` : this.size }\r\n    }\r\n\r\n    return {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-progress-bar {\r\n  width: var(--va-progress-bar-width);\r\n  position: var(--va-progress-bar-position);\r\n  overflow: var(--va-progress-bar-overflow);\r\n\r\n  &__small {\r\n    height: var(--va-progress-bar-sm-height);\r\n  }\r\n\r\n  &__large {\r\n    height: var(--va-progress-bar-lg-height);\r\n  }\r\n\r\n  &__info {\r\n    font-weight: var(--va-progress-bar-info-font-weight);\r\n    text-align: var(--va-progress-bar-info-text-align);\r\n    text-transform: var(--va-progress-bar-info-text-transform);\r\n\r\n    &:not(:empty) {\r\n      margin-bottom: 0.3125rem;\r\n    }\r\n  }\r\n\r\n  &__wrapper {\r\n    position: var(--va-progress-bar--wrapper-position);\r\n    overflow: var(--va-progress-bar--wrapper-overflow);\r\n    border-radius: var(--va-progress-bar--wrapper-border-radius);\r\n\r\n    &__square {\r\n      border-radius: var(--va-progress-bar-square-border-radius);\r\n    }\r\n  }\r\n\r\n  &__buffer {\r\n    position: var(--va-progress-bar-buffer-position);\r\n    top: var(--va-progress-bar-buffer-top);\r\n    height: inherit;\r\n    border-radius: inherit;\r\n    opacity: var(--va-progress-bar-buffer-opacity);\r\n    transition: var(--va-progress-bar-buffer-transition);\r\n  }\r\n\r\n  &__overlay {\r\n    height: inherit;\r\n    border-radius: inherit;\r\n    transition: var(--va-progress-bar-transition);\r\n    text-align: var(--va-progress-bar-text-align);\r\n    color: var(--va-progress-bar-color);\r\n    letter-spacing: var(--va-progress-bar-letter-spacing);\r\n    line-height: var(--va-progress-bar-line-height);\r\n    font-size: var(--va-progress-bar-font-size);\r\n    font-weight: var(--va-progress-bar-font-weight);\r\n\r\n    &__indeterminate-start {\r\n      animation: va-progress-bar__overlay__indeterminate-start 2s ease-in infinite;\r\n      position: absolute;\r\n      height: inherit;\r\n    }\r\n\r\n    &__indeterminate-end {\r\n      animation: va-progress-bar__overlay__indeterminate-end 2s ease-out 1s infinite;\r\n      position: absolute;\r\n      height: inherit;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes va-progress-bar__overlay__indeterminate-start {\r\n  0% {\r\n    width: 10%;\r\n    left: -10%;\r\n  }\r\n\r\n  50% {\r\n    width: 100%;\r\n    left: 100%;\r\n  }\r\n\r\n  100% {\r\n    width: 100%;\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n@keyframes va-progress-bar__overlay__indeterminate-end {\r\n  0% {\r\n    width: 100%;\r\n    left: -100%;\r\n  }\r\n\r\n  50% {\r\n    width: 10%;\r\n    left: 100%;\r\n  }\r\n\r\n  100% {\r\n    width: 10%;\r\n    left: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"va-progress-bar\">\r\n    <div\r\n      :style=\"{colorComputed}\"\r\n      class=\"va-progress-bar__info\"\r\n    >\r\n      <slot v-if=\"!large\" />\r\n    </div>\r\n    <div\r\n      class=\"va-progress-bar__wrapper\"\r\n      :class=\"computedClass\"\r\n      :style=\"computedStyle\"\r\n    >\r\n      <div\r\n        :style=\"{\r\n          width: normalizedBuffer + '%',\r\n          backgroundColor: colorComputed,\r\n          ...(reverse ? { right: 0 } : { left: 0 })\r\n        }\"\r\n        class=\"va-progress-bar__buffer\"\r\n      />\r\n      <div\r\n        v-if=\"!indeterminate\"\r\n        :style=\"{\r\n          width: normalizedValue + '%',\r\n          backgroundColor: colorComputed,\r\n          ...(reverse && { 'margin-left': 'auto' })\r\n        }\"\r\n        class=\"va-progress-bar__overlay\"\r\n      >\r\n        <slot v-if=\"large\" />\r\n      </div>\r\n      <template v-else>\r\n        <div\r\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\r\n          class=\"va-progress-bar__overlay__indeterminate-start\"\r\n        />\r\n        <div\r\n          :style=\"{backgroundColor: colorComputed, animationDirection: reverse ? 'reverse' : 'normal'}\"\r\n          class=\"va-progress-bar__overlay__indeterminate-end\"\r\n        />\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\n\r\nimport { normalizeValue } from '../../services/utils'\r\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nclass ProgressBarProps {\r\n  buffer = prop<number>({ type: Number, default: 100 })\r\n  rounded = prop<boolean>({ type: Boolean, default: true })\r\n  size = prop<string | number>({ type: [Number, String], default: 'medium' })\r\n  reverse = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst ProgressBarPropsMixin = Vue.with(ProgressBarProps)\r\n\r\n@Options({\r\n  name: 'VaProgressBar',\r\n})\r\nexport default class VaProgressBar extends mixins(\r\n  ProgressComponentMixin,\r\n  ColorMixin,\r\n  SizeMixin,\r\n  ProgressBarPropsMixin,\r\n) {\r\n  get large () {\r\n    return this.size === 'large'\r\n  }\r\n\r\n  get small () {\r\n    return this.size === 'small'\r\n  }\r\n\r\n  get normalizedBuffer () {\r\n    if (this.indeterminate) {\r\n      return 100\r\n    }\r\n\r\n    return normalizeValue(this.buffer)\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-progress-bar__wrapper__square': (!this.rounded && !this.large) || this.small,\r\n      'va-progress-bar__small': this.small,\r\n      'va-progress-bar__large': this.large,\r\n    }\r\n  }\r\n\r\n  get computedStyle () {\r\n    if (this.size === 'medium') {\r\n      return { height: '0.5rem' }\r\n    }\r\n\r\n    if (!this.small && !this.large) {\r\n      return { height: typeof this.size === 'number' ? `${this.size}px` : this.size }\r\n    }\r\n\r\n    return {}\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-progress-bar {\r\n  width: var(--va-progress-bar-width);\r\n  position: var(--va-progress-bar-position);\r\n  overflow: var(--va-progress-bar-overflow);\r\n\r\n  &__small {\r\n    height: var(--va-progress-bar-sm-height);\r\n  }\r\n\r\n  &__large {\r\n    height: var(--va-progress-bar-lg-height);\r\n  }\r\n\r\n  &__info {\r\n    font-weight: var(--va-progress-bar-info-font-weight);\r\n    text-align: var(--va-progress-bar-info-text-align);\r\n    text-transform: var(--va-progress-bar-info-text-transform);\r\n\r\n    &:not(:empty) {\r\n      margin-bottom: 0.3125rem;\r\n    }\r\n  }\r\n\r\n  &__wrapper {\r\n    position: var(--va-progress-bar--wrapper-position);\r\n    overflow: var(--va-progress-bar--wrapper-overflow);\r\n    border-radius: var(--va-progress-bar--wrapper-border-radius);\r\n\r\n    &__square {\r\n      border-radius: var(--va-progress-bar-square-border-radius);\r\n    }\r\n  }\r\n\r\n  &__buffer {\r\n    position: var(--va-progress-bar-buffer-position);\r\n    top: var(--va-progress-bar-buffer-top);\r\n    height: inherit;\r\n    border-radius: inherit;\r\n    opacity: var(--va-progress-bar-buffer-opacity);\r\n    transition: var(--va-progress-bar-buffer-transition);\r\n  }\r\n\r\n  &__overlay {\r\n    height: inherit;\r\n    border-radius: inherit;\r\n    transition: var(--va-progress-bar-transition);\r\n    text-align: var(--va-progress-bar-text-align);\r\n    color: var(--va-progress-bar-color);\r\n    letter-spacing: var(--va-progress-bar-letter-spacing);\r\n    line-height: var(--va-progress-bar-line-height);\r\n    font-size: var(--va-progress-bar-font-size);\r\n    font-weight: var(--va-progress-bar-font-weight);\r\n\r\n    &__indeterminate-start {\r\n      animation: va-progress-bar__overlay__indeterminate-start 2s ease-in infinite;\r\n      position: absolute;\r\n      height: inherit;\r\n    }\r\n\r\n    &__indeterminate-end {\r\n      animation: va-progress-bar__overlay__indeterminate-end 2s ease-out 1s infinite;\r\n      position: absolute;\r\n      height: inherit;\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes va-progress-bar__overlay__indeterminate-start {\r\n  0% {\r\n    width: 10%;\r\n    left: -10%;\r\n  }\r\n\r\n  50% {\r\n    width: 100%;\r\n    left: 100%;\r\n  }\r\n\r\n  100% {\r\n    width: 100%;\r\n    left: 100%;\r\n  }\r\n}\r\n\r\n@keyframes va-progress-bar__overlay__indeterminate-end {\r\n  0% {\r\n    width: 100%;\r\n    left: -100%;\r\n  }\r\n\r\n  50% {\r\n    width: 10%;\r\n    left: 100%;\r\n  }\r\n\r\n  100% {\r\n    width: 10%;\r\n    left: 100%;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-progress-circle\"\r\n    ref=\"progress\"\r\n    :style=\"computedStyle\"\r\n    :class=\"computedClass\"\r\n  >\r\n    <svg\r\n      class=\"va-progress-circle__wrapper\"\r\n      viewBox=\"0 0 40 40\"\r\n    >\r\n      <circle\r\n        class=\"va-progress-circle__overlay\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        :r=\"radius\"\r\n        fill=\"none\"\r\n        :stroke=\"colorComputed\"\r\n        :stroke-width=\"computedThickness\"\r\n        :stroke-dasharray=\"dasharray\"\r\n        :stroke-dashoffset=\"dashoffset\"\r\n      />\r\n    </svg>\r\n    <div\r\n      :style=\"computedStyles\"\r\n      class=\"va-progress-circle__info\"\r\n    >\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, Vue, prop } from 'vue-class-component'\r\n\r\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nclass ProgressCircleProps {\r\n  thickness = prop<number>({ type: Number, default: 0.06 })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst ProgressCirclePropsMixin = Vue.with(ProgressCircleProps)\r\n\r\n@Options({\r\n  name: 'VaProgressCircle',\r\n})\r\nexport default class VaProgressCircle extends mixins(\r\n  ProgressComponentMixin,\r\n  ColorMixin,\r\n  SizeMixin,\r\n  ProgressCirclePropsMixin,\r\n) {\r\n  get radius () {\r\n    return 20 - (20 * this.cappedThickness / 100)\r\n  }\r\n\r\n  get dasharray () {\r\n    return 2 * Math.PI * this.radius\r\n  }\r\n\r\n  get dashoffset () {\r\n    return this.dasharray * (1 - this.normalizedValue / 100)\r\n  }\r\n\r\n  get computedThickness () {\r\n    return `${this.cappedThickness}%`\r\n  }\r\n\r\n  get computedStyle () {\r\n    return { width: this.sizeComputed, height: this.sizeComputed }\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-progress-circle--indeterminate': this.indeterminate,\r\n    }\r\n  }\r\n\r\n  get computedStyles () {\r\n    return {\r\n      color: this.theme.getColor(this.color),\r\n    }\r\n  }\r\n\r\n  get cappedThickness () {\r\n    // value translated to percentage, divided in half, since final maximum value should be 50%\r\n    if (this.thickness <= 0) {\r\n      return 0\r\n    } else if (this.thickness >= 1) {\r\n      return 50\r\n    } else {\r\n      return this.thickness / 2 * 100\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n\r\n.va-progress-circle {\r\n  position: var(--va-progress-circle-position);\r\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\r\n\r\n  &__wrapper {\r\n    position: var(--va-progress-circle-wrapper-position);\r\n    top: var(--va-progress-circle-wrapper-top);\r\n    left: var(--va-progress-circle-wrapper-left);\r\n    bottom: var(--va-progress-circle-wrapper-bottom);\r\n    right: var(--va-progress-circle-wrapper-right);\r\n    margin: var(--va-progress-circle-wrapper-margin);\r\n    transform: var(--va-progress-circle-wrapper-transform);\r\n    width: var(--va-progress-circle-wrapper-width);\r\n    height: var(--va-progress-circle-wrapper-height);\r\n\r\n    @include flex-center();\r\n\r\n    @at-root {\r\n      .va-progress-circle--indeterminate & {\r\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__overlay {\r\n    transition: var(--va-progress-circle-overlay-transition);\r\n\r\n    @at-root {\r\n      .va-progress-circle--indeterminate & {\r\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    font-size: var(--va-progress-circle-info-font-size);\r\n    position: var(--va-progress-circle-info-position);\r\n    left: var(--va-progress-circle-info-left);\r\n    top: var(--va-progress-circle-info-top);\r\n    transform: var(--va-progress-circle-info-transform);\r\n  }\r\n}\r\n\r\n@keyframes va-progress-circle__wrapper--indeterminate {\r\n  100% {\r\n    transform: rotate(270deg);\r\n  }\r\n}\r\n\r\n@keyframes va-progress-circle__overlay--indeterminate {\r\n  0% {\r\n    stroke-dasharray: 1, 125;\r\n    stroke-dashoffset: 0;\r\n  }\r\n\r\n  50% {\r\n    stroke-dasharray: 125, 125;\r\n    stroke-dashoffset: -65px;\r\n  }\r\n\r\n  100% {\r\n    stroke-dasharray: 125, 125;\r\n    stroke-dashoffset: -125px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-progress-circle\"\r\n    ref=\"progress\"\r\n    :style=\"computedStyle\"\r\n    :class=\"computedClass\"\r\n  >\r\n    <svg\r\n      class=\"va-progress-circle__wrapper\"\r\n      viewBox=\"0 0 40 40\"\r\n    >\r\n      <circle\r\n        class=\"va-progress-circle__overlay\"\r\n        cx=\"50%\"\r\n        cy=\"50%\"\r\n        :r=\"radius\"\r\n        fill=\"none\"\r\n        :stroke=\"colorComputed\"\r\n        :stroke-width=\"computedThickness\"\r\n        :stroke-dasharray=\"dasharray\"\r\n        :stroke-dashoffset=\"dashoffset\"\r\n      />\r\n    </svg>\r\n    <div\r\n      :style=\"computedStyles\"\r\n      class=\"va-progress-circle__info\"\r\n    >\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, Vue, prop } from 'vue-class-component'\r\n\r\nimport { ProgressComponentMixin } from './ProgressComponentMixin'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nclass ProgressCircleProps {\r\n  thickness = prop<number>({ type: Number, default: 0.06 })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst ProgressCirclePropsMixin = Vue.with(ProgressCircleProps)\r\n\r\n@Options({\r\n  name: 'VaProgressCircle',\r\n})\r\nexport default class VaProgressCircle extends mixins(\r\n  ProgressComponentMixin,\r\n  ColorMixin,\r\n  SizeMixin,\r\n  ProgressCirclePropsMixin,\r\n) {\r\n  get radius () {\r\n    return 20 - (20 * this.cappedThickness / 100)\r\n  }\r\n\r\n  get dasharray () {\r\n    return 2 * Math.PI * this.radius\r\n  }\r\n\r\n  get dashoffset () {\r\n    return this.dasharray * (1 - this.normalizedValue / 100)\r\n  }\r\n\r\n  get computedThickness () {\r\n    return `${this.cappedThickness}%`\r\n  }\r\n\r\n  get computedStyle () {\r\n    return { width: this.sizeComputed, height: this.sizeComputed }\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-progress-circle--indeterminate': this.indeterminate,\r\n    }\r\n  }\r\n\r\n  get computedStyles () {\r\n    return {\r\n      color: this.theme.getColor(this.color),\r\n    }\r\n  }\r\n\r\n  get cappedThickness () {\r\n    // value translated to percentage, divided in half, since final maximum value should be 50%\r\n    if (this.thickness <= 0) {\r\n      return 0\r\n    } else if (this.thickness >= 1) {\r\n      return 50\r\n    } else {\r\n      return this.thickness / 2 * 100\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n\r\n.va-progress-circle {\r\n  position: var(--va-progress-circle-position);\r\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\r\n\r\n  &__wrapper {\r\n    position: var(--va-progress-circle-wrapper-position);\r\n    top: var(--va-progress-circle-wrapper-top);\r\n    left: var(--va-progress-circle-wrapper-left);\r\n    bottom: var(--va-progress-circle-wrapper-bottom);\r\n    right: var(--va-progress-circle-wrapper-right);\r\n    margin: var(--va-progress-circle-wrapper-margin);\r\n    transform: var(--va-progress-circle-wrapper-transform);\r\n    width: var(--va-progress-circle-wrapper-width);\r\n    height: var(--va-progress-circle-wrapper-height);\r\n\r\n    @include flex-center();\r\n\r\n    @at-root {\r\n      .va-progress-circle--indeterminate & {\r\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__overlay {\r\n    transition: var(--va-progress-circle-overlay-transition);\r\n\r\n    @at-root {\r\n      .va-progress-circle--indeterminate & {\r\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    font-size: var(--va-progress-circle-info-font-size);\r\n    position: var(--va-progress-circle-info-position);\r\n    left: var(--va-progress-circle-info-left);\r\n    top: var(--va-progress-circle-info-top);\r\n    transform: var(--va-progress-circle-info-transform);\r\n  }\r\n}\r\n\r\n@keyframes va-progress-circle__wrapper--indeterminate {\r\n  100% {\r\n    transform: rotate(270deg);\r\n  }\r\n}\r\n\r\n@keyframes va-progress-circle__overlay--indeterminate {\r\n  0% {\r\n    stroke-dasharray: 1, 125;\r\n    stroke-dashoffset: 0;\r\n  }\r\n\r\n  50% {\r\n    stroke-dasharray: 125, 125;\r\n    stroke-dashoffset: -65px;\r\n  }\r\n\r\n  100% {\r\n    stroke-dasharray: 125, 125;\r\n    stroke-dashoffset: -125px;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaProgressBarBase from './VaProgressBar.vue'\r\nimport VaProgressCircleBase from './VaProgressCircle.vue'\r\n\r\nexport const VaProgressBar = withConfigTransport(VaProgressBarBase)\r\nexport const VaProgressCircle = withConfigTransport(VaProgressCircleBase)\r\n"],"names":["ProgressPropsMixin","Vue","with","ProgressProps","constructor","this","prop","type","Number","default","String","Boolean","ProgressComponentMixin","mixins","normalizedValue","normalizeValue","modelValue","ProgressBarPropsMixin","ProgressBarProps","VaProgressBar","ColorMixin","SizeMixin","large","size","small","normalizedBuffer","indeterminate","buffer","computedClass","rounded","computedStyle","height","Options","name","class","_createElementBlock","_hoisted_1","_createElementVNode","style","_ctx","_renderSlot","ProgressCirclePropsMixin","ProgressCircleProps","VaProgressCircle","radius","cappedThickness","dasharray","Math","PI","dashoffset","computedThickness","width","sizeComputed","computedStyles","color","theme","getColor","thickness","viewBox","ref","cx","cy","r","fill","stroke","withConfigTransport","VaProgressBarBase","VaProgressCircleBase"],"mappings":"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"}