{"version":3,"file":"index32.js","sources":["../../src/utils/dom-utils.ts","../../src/utils/global-utils.ts","../../src/mixins/ClickOutsideMixin/ClickOutsideMixin.ts","../../src/mixins/ClickOutsideMixin/ClickOutsideMixin-utils.ts","../../src/components/va-modal/VaModal.vue","../../src/components/va-modal/VaModal.vue?vue&type=template&id=fb3de2a4&lang.js","../../src/components/va-modal/index.ts"],"sourcesContent":["export const clickedRootScrollbar = (event: MouseEvent) => {\r\n  return (\r\n    document.documentElement.clientWidth < event.clientX ||\r\n    document.documentElement.clientHeight < event.clientY\r\n  )\r\n}\r\n\r\nexport const ownerDocument = (node?: Element) => {\r\n  return (node && node.ownerDocument) || document\r\n}\r\n\r\nexport const isLeftClickEvent = (event: MouseEvent) => {\r\n  return event.button === 0\r\n}\r\n\r\nexport const isModifiedEvent = (event: MouseEvent) => {\r\n  return event.metaKey || event.altKey || event.ctrlKey || event.shiftKey\r\n}\r\n\r\n// https://github.com/react-bootstrap/dom-helpers/blob/master/src/contains.ts\r\n// HTML DOM and SVG DOM may have different support levels,\r\n// so we need to check on context instead of a document root element.\r\nexport const contains = (context: Element, node: Element) => {\r\n  if (context.contains) {\r\n    return context.contains(node)\r\n  }\r\n\r\n  if (context.compareDocumentPosition) {\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\r\n    // 16 - node is contained by the context\r\n    return context === node || !!(context.compareDocumentPosition(node) & 16)\r\n  }\r\n\r\n  return false\r\n}\r\n\r\ntype ListenOptions<K> = {\r\n  node: HTMLElement | Document | Window;\r\n  eventName: K extends keyof HTMLElementEventMap ? K : never;\r\n  handler: EventListenerOrEventListenerObject;\r\n  options?: boolean | AddEventListenerOptions;\r\n}\r\n\r\nexport const listen = ({\r\n  node,\r\n  eventName,\r\n  handler,\r\n  options,\r\n}: ListenOptions<keyof HTMLElementEventMap>) => {\r\n  node.addEventListener(eventName, handler, options)\r\n  return () => {\r\n    node.removeEventListener(eventName, handler, options)\r\n  }\r\n}\r\n","export const __DEV__ = process.env.NODE_ENV !== 'production'\r\n","// Most of the mixin's code was taken from:\r\n// 1/ https://github.com/react-bootstrap/react-overlays/blob/master/src/useRootClose.ts\r\n// 2/ https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ClickAwayListener/ClickAwayListener.js\r\n\r\nimport { noop } from 'lodash-es'\r\nimport { Vue } from 'vue-class-component'\r\n\r\nimport {\r\n  ownerDocument,\r\n  listen,\r\n  clickedRootScrollbar,\r\n} from '../../utils/dom-utils'\r\nimport { handleMouseCapture } from './ClickOutsideMixin-utils'\r\n\r\nexport type ClickOutsideOptions = {\r\n  disabled: boolean;\r\n  trigger: 'click' | 'mousedown' | 'mouseup';\r\n  onClickOutside: (e: Event | undefined) => void;\r\n}\r\n\r\nclass ClickOutsideMixin extends Vue {\r\n  // Set it `true` to prevent handling a bubbled event\r\n  // before handling a captured one for the first time\r\n  private preventMouseRootTrigger = true\r\n\r\n  handleMouse (e: MouseEvent, options: ClickOutsideOptions) {\r\n    if (!this.preventMouseRootTrigger) {\r\n      const { onClickOutside } = options\r\n      onClickOutside(e)\r\n    }\r\n  }\r\n\r\n  handleMouseCapture (e: MouseEvent, target: Element) {\r\n    // Behave like a blur listener.\r\n    if (clickedRootScrollbar(e)) {\r\n      return\r\n    }\r\n\r\n    this.preventMouseRootTrigger = handleMouseCapture(e as MouseEvent, target)\r\n  }\r\n\r\n  registerClickOutsideEvents (\r\n    target: Element | undefined,\r\n    options: ClickOutsideOptions,\r\n  ) {\r\n    const { trigger, disabled } = options\r\n\r\n    if (disabled || !target) {\r\n      return noop\r\n    }\r\n\r\n    const document = ownerDocument(target as Element)\r\n\r\n    // Use capture for this listener so it fires before Vue's listener, to\r\n    // avoid false positives in the contains() check below if the target DOM\r\n    // element is removed in the Vue mouse callback.\r\n    const removeMouseCaptureListener = listen({\r\n      node: document,\r\n      eventName: trigger,\r\n      handler: (e) => this.handleMouseCapture(e as MouseEvent, target),\r\n      options: true,\r\n    })\r\n\r\n    const removeMouseListener = listen({\r\n      node: document,\r\n      eventName: trigger,\r\n      handler: (e) => this.handleMouse(e as MouseEvent, options),\r\n    })\r\n\r\n    // Not sure if this is needed\r\n    // Should make clickable all the elements on body\r\n    // https://bugs.webkit.org/show_bug.cgi?id=153887\r\n    let mobileSafariHackListeners: any[] = []\r\n    if ('ontouchstart' in document.documentElement) {\r\n      mobileSafariHackListeners = [].slice\r\n        .call(document.body.children)\r\n        .map((el) =>\r\n          listen({ node: el, eventName: 'mousemove', handler: noop }),\r\n        )\r\n    }\r\n\r\n    return () => {\r\n      removeMouseCaptureListener()\r\n      removeMouseListener()\r\n      mobileSafariHackListeners.forEach((remove) => remove())\r\n      this.preventMouseRootTrigger = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default ClickOutsideMixin\r\n","// Most of the mixin's code was taken from:\r\n// 1/ https://github.com/react-bootstrap/react-overlays/blob/master/src/useRootClose.ts\r\n// 2/ https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/ClickAwayListener/ClickAwayListener.js\r\n\r\nimport {\r\n  ownerDocument,\r\n  contains,\r\n  isLeftClickEvent,\r\n  isModifiedEvent,\r\n} from '../../utils/dom-utils'\r\nimport { __DEV__ } from '../../utils/global-utils'\r\n\r\nexport const handleMouseCapture = (e: MouseEvent, target: Element): boolean => {\r\n  if (__DEV__) {\r\n    if (!target) {\r\n      throw new Error(\r\n        'ClickOutside captured a click event but does not have a target to compare it to.',\r\n      )\r\n    }\r\n  }\r\n\r\n  let insideDom\r\n\r\n  // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\r\n  if (e.composedPath) {\r\n    insideDom = e.composedPath().indexOf(target) > -1\r\n  } else {\r\n    const doc = ownerDocument(target)\r\n    // TODO remove dead logic https://caniuse.com/#search=composedPath.\r\n    // `doc.contains` works in modern browsers but isn't supported in IE 11:\r\n    // https://github.com/timmywil/panzoom/issues/450\r\n    // https://github.com/videojs/video.js/pull/5872\r\n    insideDom =\r\n      !(\r\n        doc.documentElement && doc.documentElement.contains(e.target as Node)\r\n      ) || contains(target, e.target as Element)\r\n  }\r\n\r\n  return !!(!target || isModifiedEvent(e) || !isLeftClickEvent(e) || insideDom)\r\n}\r\n","<template>\r\n  <div class=\"va-modal\">\r\n    <modal-element\r\n      name=\"va-modal__overlay--transition\"\r\n      :isTransition=\"!$props.withoutTransitions\"\r\n      appear\r\n    >\r\n      <div\r\n        v-if=\"valueComputed && $props.overlay\"\r\n        class=\"va-modal__overlay\"\r\n        :style=\"computedOverlayStyles\"\r\n      />\r\n    </modal-element>\r\n    <modal-element\r\n      name=\"va-modal__container--transition\"\r\n      :isTransition=\"!$props.withoutTransitions\"\r\n      appear\r\n      @beforeEnter=\"onBeforeEnterTransition\"\r\n      @afterEnter=\"onAfterEnterTransition\"\r\n      @beforeLeave=\"onBeforeLeaveTransition\"\r\n      @afterLeave=\"onAfterLeaveTransition\"\r\n    >\r\n      <div\r\n        v-if=\"valueComputed\"\r\n        class=\"va-modal__container\"\r\n        :style=\"computedModalContainerStyle\"\r\n      >\r\n        <div\r\n          class=\"va-modal__dialog\"\r\n          :class=\"computedClass\"\r\n          :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\r\n          ref=\"modal\"\r\n        >\r\n          <va-icon\r\n            v-if=\"$props.fullscreen\"\r\n            @click=\"cancel()\"\r\n            name=\"close\"\r\n            class=\"va-modal__close\"\r\n          />\r\n\r\n          <div\r\n            class=\"va-modal__inner\"\r\n            :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\r\n          >\r\n            <div\r\n              v-if=\"title\"\r\n              class=\"va-modal__title\"\r\n              :style=\"{ color: theme.getColor('primary') }\"\r\n            >\r\n              {{ $props.title }}\r\n            </div>\r\n            <div v-if=\"hasHeaderSlot\" class=\"va-modal__header\">\r\n              <slot name=\"header\" />\r\n            </div>\r\n            <div v-if=\"$props.message\" class=\"va-modal__message\">\r\n              {{ $props.message }}\r\n            </div>\r\n            <div v-if=\"hasContentSlot\" class=\"va-modal__message\">\r\n              <slot />\r\n            </div>\r\n            <div\r\n              v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\r\n              class=\"va-modal__footer\"\r\n            >\r\n              <va-button v-if=\"$props.cancelText\" color=\"gray\" class=\"mr-2\" flat @click=\"cancel\">\r\n                {{ $props.cancelText }}\r\n              </va-button>\r\n              <va-button @click=\"ok\">\r\n                {{ $props.okText }}\r\n              </va-button>\r\n            </div>\r\n            <div v-if=\"hasFooterSlot\" class=\"va-modal__footer\">\r\n              <slot name=\"footer\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </modal-element>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch, h, Transition } from 'vue'\r\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\r\nimport { noop } from 'lodash-es'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport ClickOutsideMixin, { ClickOutsideOptions } from '../../mixins/ClickOutsideMixin/ClickOutsideMixin'\r\nimport VaButton from '../va-button'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass ModalProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: false })\r\n  title = prop<string>({ type: String, default: '' })\r\n  message = prop<string>({ type: String, default: '' })\r\n  okText = prop<string>({ type: String, default: 'OK' })\r\n  cancelText = prop<string>({ type: String, default: 'Cancel' })\r\n  hideDefaultActions = prop<boolean>({ type: Boolean, default: false })\r\n  fullscreen = prop<boolean>({ type: Boolean, default: false })\r\n  mobileFullscreen = prop<boolean>({ type: Boolean, default: true })\r\n  noDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  noOutsideDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  noEscDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  maxWidth = prop<string>({ type: String, default: '' })\r\n  maxHeight = prop<string>({ type: String, default: '' })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (size: string) => {\r\n      return ['medium', 'small', 'large'].includes(size)\r\n    },\r\n  })\r\n\r\n  fixedLayout = prop<boolean>({ type: Boolean, default: false })\r\n  withoutTransitions = prop<boolean>({ type: Boolean, default: false })\r\n  overlay = prop<boolean>({ type: Boolean, default: true })\r\n  overlayOpacity = prop<number | string>({\r\n    type: [Number, String],\r\n    default: undefined,\r\n  })\r\n\r\n  zIndex = prop<number | string>({ type: [Number, String], default: undefined })\r\n}\r\n\r\nconst ModalPropsMixin = Vue.with(ModalProps)\r\n\r\nclass ModalElementProps {\r\n  isTransition = prop<boolean>({\r\n    type: Boolean,\r\n    default: true,\r\n  })\r\n}\r\n\r\n@Options({\r\n  name: 'ModalElement',\r\n})\r\nclass ModalElement extends Vue.with(ModalElementProps) {\r\n  render (): any {\r\n    const children = this.$slots.default ? this.$slots.default(this.$attrs) : null\r\n\r\n    return this.$props.isTransition\r\n      ? h(\r\n        Transition,\r\n        { ...this.$attrs },\r\n        this.$slots,\r\n      )\r\n      : children\r\n  }\r\n}\r\n\r\n@Options({\r\n  name: 'VaModal',\r\n  components: { VaButton, VaIcon, ModalElement },\r\n  emits: ['update:modelValue', 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],\r\n})\r\nexport default class VaModal extends mixins(\r\n  ColorMixin,\r\n  StatefulMixin,\r\n  ClickOutsideMixin,\r\n  ModalPropsMixin,\r\n) {\r\n  private clearClickOutsideEvents: () => void = noop\r\n\r\n  created () {\r\n    watch(() => this.valueComputed, (valueComputed: boolean) => {\r\n      if (valueComputed) {\r\n        window.addEventListener('keyup', this.listenKeyUp)\r\n\r\n        const options: ClickOutsideOptions = {\r\n          onClickOutside: () => {\r\n            this.$emit('click-outside')\r\n            this.cancel()\r\n          },\r\n          disabled: this.$props.noOutsideDismiss || this.$props.noDismiss || false,\r\n          trigger: 'mousedown',\r\n        }\r\n\r\n        this.$nextTick(() => {\r\n          const target = this.$refs.modal\r\n          this.clearClickOutsideEvents = this.registerClickOutsideEvents(\r\n            target as Element,\r\n            options,\r\n          )\r\n        })\r\n      } else {\r\n        this.clearClickOutsideEvents()\r\n        window.removeEventListener('keyup', this.listenKeyUp)\r\n      }\r\n    })\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-modal--fullscreen': this.$props.fullscreen,\r\n      'va-modal--mobile-fullscreen': this.$props.mobileFullscreen,\r\n      'va-modal--fixed-layout': this.$props.fixedLayout,\r\n      [`va-modal--size-${this.$props.size}`]: this.$props.size !== 'medium',\r\n    }\r\n  }\r\n\r\n  get computedOverlayStyles () {\r\n    // NOTE Not sure exactly what that does.\r\n    // Supposedly solves some case when background wasn't shown.\r\n    // As a side effect removes background from nested modals.\r\n\r\n    const moreThanOneModalIsOpen = !!document.querySelectorAll(\r\n      '.va-modal__overlay',\r\n    ).length\r\n\r\n    return moreThanOneModalIsOpen\r\n      ? {}\r\n      : {\r\n        'background-color': `rgba(0, 0, 0, ${this.$props.overlayOpacity || 0.6})`,\r\n        'z-index':\r\n          this.$props.zIndex != null ? parseInt(this.$props.zIndex as string) - 10 : undefined,\r\n      }\r\n  }\r\n\r\n  get computedModalContainerStyle () {\r\n    return {\r\n      'z-index': this.$props.zIndex,\r\n    }\r\n  }\r\n\r\n  get hasContentSlot () {\r\n    return this.$slots.default\r\n  }\r\n\r\n  get hasHeaderSlot () {\r\n    return this.$slots.header\r\n  }\r\n\r\n  get hasFooterSlot () {\r\n    return this.$slots.footer\r\n  }\r\n\r\n  show () {\r\n    this.valueComputed = true\r\n  }\r\n\r\n  hide () {\r\n    this.valueComputed = false\r\n  }\r\n\r\n  toggle () {\r\n    this.valueComputed = !this.valueComputed\r\n  }\r\n\r\n  cancel () {\r\n    this.hide()\r\n    this.$emit('cancel')\r\n  }\r\n\r\n  ok () {\r\n    this.hide()\r\n    this.$emit('ok')\r\n  }\r\n\r\n  listenKeyUp (e: KeyboardEvent) {\r\n    if (e.code === 'Escape' && !this.$props.noEscDismiss && !this.$props.noDismiss) {\r\n      this.cancel()\r\n    }\r\n  }\r\n\r\n  onBeforeEnterTransition (el: HTMLElement) {\r\n    this.$emit('before-open', el)\r\n  }\r\n\r\n  onAfterEnterTransition (el: HTMLElement) {\r\n    this.$emit('open', el)\r\n  }\r\n\r\n  onBeforeLeaveTransition (el: HTMLElement) {\r\n    this.$emit('before-close', el)\r\n  }\r\n\r\n  onAfterLeaveTransition (el: HTMLElement) {\r\n    this.$emit('close', el)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../styles/resources/resources';\r\n@import 'variables';\r\n\r\n.va-modal {\r\n  &__title {\r\n    margin-bottom: 1.5rem;\r\n\r\n    @include va-title();\r\n  }\r\n\r\n  &__container {\r\n    position: var(--va-modal-container-position);\r\n    top: var(--va-modal-container-top);\r\n    left: var(--va-modal-container-left);\r\n    z-index: var(--va-modal-container-z-index);\r\n    display: var(--va-modal-container-display);\r\n    width: var(--va-modal-container-width);\r\n    height: var(--va-modal-container-height);\r\n    align-items: var(--va-modal-container-align-items);\r\n    justify-content: var(--va-modal-container-justify-content);\r\n    overflow: var(--va-modal-container-overflow);\r\n    outline: var(--va-modal-container-outline);\r\n\r\n    &--transition {\r\n      @include va-modal-transition();\r\n    }\r\n  }\r\n\r\n  &__dialog {\r\n    background: var(--va-modal-dialog-background);\r\n    min-height: var(--va-modal-dialog-min-height);\r\n    height: var(--va-modal-dialog-height);\r\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\r\n    margin: var(--va-modal-dialog-margin);\r\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\r\n    max-width: var(--va-modal-dialog-max-width);\r\n    max-height: var(--va-modal-dialog-max-height);\r\n    position: var(--va-modal-dialog-position);\r\n    overflow: auto;\r\n  }\r\n\r\n  &__overlay {\r\n    position: var(--va-modal-overlay-position);\r\n    top: var(--va-modal-overlay-top);\r\n    left: var(--va-modal-overlay-left);\r\n    z-index: var(--va-modal-overlay-z-index);\r\n    width: var(--va-modal-overlay-width);\r\n    height: var(--va-modal-overlay-height);\r\n\r\n    &--transition {\r\n      @include va-modal-transition(true);\r\n    }\r\n  }\r\n\r\n  &--fullscreen {\r\n    min-width: 100vw !important;\r\n    min-height: 100vh !important;\r\n    border-radius: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  &--mobile-fullscreen {\r\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n      min-width: 100vw !important;\r\n      min-height: 100vh !important;\r\n      border-radius: 0;\r\n      position: fixed;\r\n      margin: 0 !important;\r\n    }\r\n  }\r\n\r\n  &--size {\r\n    &-small {\r\n      max-width: map_get($grid-breakpoints, sm);\r\n\r\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n        max-width: 100vw !important;\r\n      }\r\n\r\n      .va-modal__inner {\r\n        max-width: map_get($grid-breakpoints, sm);\r\n\r\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n          max-width: 100vw !important;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-large {\r\n      max-width: map-get($grid-breakpoints, lg);\r\n\r\n      .va-modal__inner {\r\n        max-width: map-get($grid-breakpoints, lg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &--fixed-layout {\r\n    .va-modal__inner {\r\n      overflow: hidden;\r\n      padding: $modal-padding-top 0 $modal-padding-bottom;\r\n      max-height: calc(100vh - 2rem);\r\n\r\n      .va-modal__header,\r\n      .va-modal__footer,\r\n      .va-modal__title {\r\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\r\n      }\r\n\r\n      .va-modal__message {\r\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\r\n        overflow: auto;\r\n      }\r\n    }\r\n\r\n    .va-modal__dialog {\r\n      overflow: hidden;\r\n    }\r\n  }\r\n\r\n  &__message {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  &__inner {\r\n    overflow: visible;\r\n    display: flex;\r\n    position: relative;\r\n    flex-flow: column;\r\n    padding: $modal-padding-top $modal-padding-right $modal-padding-bottom $modal-padding-left;\r\n    max-width: map_get($grid-breakpoints, md);\r\n    margin: auto;\r\n\r\n    > div:last-of-type {\r\n      margin-bottom: 0 !important;\r\n    }\r\n  }\r\n\r\n  &__close {\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    cursor: pointer;\r\n    font-size: 1.5rem !important;\r\n    font-style: normal !important;\r\n    color: $brand-secondary;\r\n    z-index: 1;\r\n  }\r\n\r\n  &__footer {\r\n    margin-top: auto;\r\n    min-height: fit-content;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    &:last-of-type {\r\n      margin-bottom: 0 !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"va-modal\">\r\n    <modal-element\r\n      name=\"va-modal__overlay--transition\"\r\n      :isTransition=\"!$props.withoutTransitions\"\r\n      appear\r\n    >\r\n      <div\r\n        v-if=\"valueComputed && $props.overlay\"\r\n        class=\"va-modal__overlay\"\r\n        :style=\"computedOverlayStyles\"\r\n      />\r\n    </modal-element>\r\n    <modal-element\r\n      name=\"va-modal__container--transition\"\r\n      :isTransition=\"!$props.withoutTransitions\"\r\n      appear\r\n      @beforeEnter=\"onBeforeEnterTransition\"\r\n      @afterEnter=\"onAfterEnterTransition\"\r\n      @beforeLeave=\"onBeforeLeaveTransition\"\r\n      @afterLeave=\"onAfterLeaveTransition\"\r\n    >\r\n      <div\r\n        v-if=\"valueComputed\"\r\n        class=\"va-modal__container\"\r\n        :style=\"computedModalContainerStyle\"\r\n      >\r\n        <div\r\n          class=\"va-modal__dialog\"\r\n          :class=\"computedClass\"\r\n          :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\r\n          ref=\"modal\"\r\n        >\r\n          <va-icon\r\n            v-if=\"$props.fullscreen\"\r\n            @click=\"cancel()\"\r\n            name=\"close\"\r\n            class=\"va-modal__close\"\r\n          />\r\n\r\n          <div\r\n            class=\"va-modal__inner\"\r\n            :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\r\n          >\r\n            <div\r\n              v-if=\"title\"\r\n              class=\"va-modal__title\"\r\n              :style=\"{ color: theme.getColor('primary') }\"\r\n            >\r\n              {{ $props.title }}\r\n            </div>\r\n            <div v-if=\"hasHeaderSlot\" class=\"va-modal__header\">\r\n              <slot name=\"header\" />\r\n            </div>\r\n            <div v-if=\"$props.message\" class=\"va-modal__message\">\r\n              {{ $props.message }}\r\n            </div>\r\n            <div v-if=\"hasContentSlot\" class=\"va-modal__message\">\r\n              <slot />\r\n            </div>\r\n            <div\r\n              v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\r\n              class=\"va-modal__footer\"\r\n            >\r\n              <va-button v-if=\"$props.cancelText\" color=\"gray\" class=\"mr-2\" flat @click=\"cancel\">\r\n                {{ $props.cancelText }}\r\n              </va-button>\r\n              <va-button @click=\"ok\">\r\n                {{ $props.okText }}\r\n              </va-button>\r\n            </div>\r\n            <div v-if=\"hasFooterSlot\" class=\"va-modal__footer\">\r\n              <slot name=\"footer\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </modal-element>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch, h, Transition } from 'vue'\r\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\r\nimport { noop } from 'lodash-es'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport ClickOutsideMixin, { ClickOutsideOptions } from '../../mixins/ClickOutsideMixin/ClickOutsideMixin'\r\nimport VaButton from '../va-button'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass ModalProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: false })\r\n  title = prop<string>({ type: String, default: '' })\r\n  message = prop<string>({ type: String, default: '' })\r\n  okText = prop<string>({ type: String, default: 'OK' })\r\n  cancelText = prop<string>({ type: String, default: 'Cancel' })\r\n  hideDefaultActions = prop<boolean>({ type: Boolean, default: false })\r\n  fullscreen = prop<boolean>({ type: Boolean, default: false })\r\n  mobileFullscreen = prop<boolean>({ type: Boolean, default: true })\r\n  noDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  noOutsideDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  noEscDismiss = prop<boolean>({ type: Boolean, default: false })\r\n  maxWidth = prop<string>({ type: String, default: '' })\r\n  maxHeight = prop<string>({ type: String, default: '' })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (size: string) => {\r\n      return ['medium', 'small', 'large'].includes(size)\r\n    },\r\n  })\r\n\r\n  fixedLayout = prop<boolean>({ type: Boolean, default: false })\r\n  withoutTransitions = prop<boolean>({ type: Boolean, default: false })\r\n  overlay = prop<boolean>({ type: Boolean, default: true })\r\n  overlayOpacity = prop<number | string>({\r\n    type: [Number, String],\r\n    default: undefined,\r\n  })\r\n\r\n  zIndex = prop<number | string>({ type: [Number, String], default: undefined })\r\n}\r\n\r\nconst ModalPropsMixin = Vue.with(ModalProps)\r\n\r\nclass ModalElementProps {\r\n  isTransition = prop<boolean>({\r\n    type: Boolean,\r\n    default: true,\r\n  })\r\n}\r\n\r\n@Options({\r\n  name: 'ModalElement',\r\n})\r\nclass ModalElement extends Vue.with(ModalElementProps) {\r\n  render (): any {\r\n    const children = this.$slots.default ? this.$slots.default(this.$attrs) : null\r\n\r\n    return this.$props.isTransition\r\n      ? h(\r\n        Transition,\r\n        { ...this.$attrs },\r\n        this.$slots,\r\n      )\r\n      : children\r\n  }\r\n}\r\n\r\n@Options({\r\n  name: 'VaModal',\r\n  components: { VaButton, VaIcon, ModalElement },\r\n  emits: ['update:modelValue', 'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside'],\r\n})\r\nexport default class VaModal extends mixins(\r\n  ColorMixin,\r\n  StatefulMixin,\r\n  ClickOutsideMixin,\r\n  ModalPropsMixin,\r\n) {\r\n  private clearClickOutsideEvents: () => void = noop\r\n\r\n  created () {\r\n    watch(() => this.valueComputed, (valueComputed: boolean) => {\r\n      if (valueComputed) {\r\n        window.addEventListener('keyup', this.listenKeyUp)\r\n\r\n        const options: ClickOutsideOptions = {\r\n          onClickOutside: () => {\r\n            this.$emit('click-outside')\r\n            this.cancel()\r\n          },\r\n          disabled: this.$props.noOutsideDismiss || this.$props.noDismiss || false,\r\n          trigger: 'mousedown',\r\n        }\r\n\r\n        this.$nextTick(() => {\r\n          const target = this.$refs.modal\r\n          this.clearClickOutsideEvents = this.registerClickOutsideEvents(\r\n            target as Element,\r\n            options,\r\n          )\r\n        })\r\n      } else {\r\n        this.clearClickOutsideEvents()\r\n        window.removeEventListener('keyup', this.listenKeyUp)\r\n      }\r\n    })\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-modal--fullscreen': this.$props.fullscreen,\r\n      'va-modal--mobile-fullscreen': this.$props.mobileFullscreen,\r\n      'va-modal--fixed-layout': this.$props.fixedLayout,\r\n      [`va-modal--size-${this.$props.size}`]: this.$props.size !== 'medium',\r\n    }\r\n  }\r\n\r\n  get computedOverlayStyles () {\r\n    // NOTE Not sure exactly what that does.\r\n    // Supposedly solves some case when background wasn't shown.\r\n    // As a side effect removes background from nested modals.\r\n\r\n    const moreThanOneModalIsOpen = !!document.querySelectorAll(\r\n      '.va-modal__overlay',\r\n    ).length\r\n\r\n    return moreThanOneModalIsOpen\r\n      ? {}\r\n      : {\r\n        'background-color': `rgba(0, 0, 0, ${this.$props.overlayOpacity || 0.6})`,\r\n        'z-index':\r\n          this.$props.zIndex != null ? parseInt(this.$props.zIndex as string) - 10 : undefined,\r\n      }\r\n  }\r\n\r\n  get computedModalContainerStyle () {\r\n    return {\r\n      'z-index': this.$props.zIndex,\r\n    }\r\n  }\r\n\r\n  get hasContentSlot () {\r\n    return this.$slots.default\r\n  }\r\n\r\n  get hasHeaderSlot () {\r\n    return this.$slots.header\r\n  }\r\n\r\n  get hasFooterSlot () {\r\n    return this.$slots.footer\r\n  }\r\n\r\n  show () {\r\n    this.valueComputed = true\r\n  }\r\n\r\n  hide () {\r\n    this.valueComputed = false\r\n  }\r\n\r\n  toggle () {\r\n    this.valueComputed = !this.valueComputed\r\n  }\r\n\r\n  cancel () {\r\n    this.hide()\r\n    this.$emit('cancel')\r\n  }\r\n\r\n  ok () {\r\n    this.hide()\r\n    this.$emit('ok')\r\n  }\r\n\r\n  listenKeyUp (e: KeyboardEvent) {\r\n    if (e.code === 'Escape' && !this.$props.noEscDismiss && !this.$props.noDismiss) {\r\n      this.cancel()\r\n    }\r\n  }\r\n\r\n  onBeforeEnterTransition (el: HTMLElement) {\r\n    this.$emit('before-open', el)\r\n  }\r\n\r\n  onAfterEnterTransition (el: HTMLElement) {\r\n    this.$emit('open', el)\r\n  }\r\n\r\n  onBeforeLeaveTransition (el: HTMLElement) {\r\n    this.$emit('before-close', el)\r\n  }\r\n\r\n  onAfterLeaveTransition (el: HTMLElement) {\r\n    this.$emit('close', el)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../styles/resources/resources';\r\n@import 'variables';\r\n\r\n.va-modal {\r\n  &__title {\r\n    margin-bottom: 1.5rem;\r\n\r\n    @include va-title();\r\n  }\r\n\r\n  &__container {\r\n    position: var(--va-modal-container-position);\r\n    top: var(--va-modal-container-top);\r\n    left: var(--va-modal-container-left);\r\n    z-index: var(--va-modal-container-z-index);\r\n    display: var(--va-modal-container-display);\r\n    width: var(--va-modal-container-width);\r\n    height: var(--va-modal-container-height);\r\n    align-items: var(--va-modal-container-align-items);\r\n    justify-content: var(--va-modal-container-justify-content);\r\n    overflow: var(--va-modal-container-overflow);\r\n    outline: var(--va-modal-container-outline);\r\n\r\n    &--transition {\r\n      @include va-modal-transition();\r\n    }\r\n  }\r\n\r\n  &__dialog {\r\n    background: var(--va-modal-dialog-background);\r\n    min-height: var(--va-modal-dialog-min-height);\r\n    height: var(--va-modal-dialog-height);\r\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\r\n    margin: var(--va-modal-dialog-margin);\r\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\r\n    max-width: var(--va-modal-dialog-max-width);\r\n    max-height: var(--va-modal-dialog-max-height);\r\n    position: var(--va-modal-dialog-position);\r\n    overflow: auto;\r\n  }\r\n\r\n  &__overlay {\r\n    position: var(--va-modal-overlay-position);\r\n    top: var(--va-modal-overlay-top);\r\n    left: var(--va-modal-overlay-left);\r\n    z-index: var(--va-modal-overlay-z-index);\r\n    width: var(--va-modal-overlay-width);\r\n    height: var(--va-modal-overlay-height);\r\n\r\n    &--transition {\r\n      @include va-modal-transition(true);\r\n    }\r\n  }\r\n\r\n  &--fullscreen {\r\n    min-width: 100vw !important;\r\n    min-height: 100vh !important;\r\n    border-radius: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  &--mobile-fullscreen {\r\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n      min-width: 100vw !important;\r\n      min-height: 100vh !important;\r\n      border-radius: 0;\r\n      position: fixed;\r\n      margin: 0 !important;\r\n    }\r\n  }\r\n\r\n  &--size {\r\n    &-small {\r\n      max-width: map_get($grid-breakpoints, sm);\r\n\r\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n        max-width: 100vw !important;\r\n      }\r\n\r\n      .va-modal__inner {\r\n        max-width: map_get($grid-breakpoints, sm);\r\n\r\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\r\n          max-width: 100vw !important;\r\n        }\r\n      }\r\n    }\r\n\r\n    &-large {\r\n      max-width: map-get($grid-breakpoints, lg);\r\n\r\n      .va-modal__inner {\r\n        max-width: map-get($grid-breakpoints, lg);\r\n      }\r\n    }\r\n  }\r\n\r\n  &--fixed-layout {\r\n    .va-modal__inner {\r\n      overflow: hidden;\r\n      padding: $modal-padding-top 0 $modal-padding-bottom;\r\n      max-height: calc(100vh - 2rem);\r\n\r\n      .va-modal__header,\r\n      .va-modal__footer,\r\n      .va-modal__title {\r\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\r\n      }\r\n\r\n      .va-modal__message {\r\n        padding: 0 $modal-padding-right 0 $modal-padding-left;\r\n        overflow: auto;\r\n      }\r\n    }\r\n\r\n    .va-modal__dialog {\r\n      overflow: hidden;\r\n    }\r\n  }\r\n\r\n  &__message {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n\r\n  &__inner {\r\n    overflow: visible;\r\n    display: flex;\r\n    position: relative;\r\n    flex-flow: column;\r\n    padding: $modal-padding-top $modal-padding-right $modal-padding-bottom $modal-padding-left;\r\n    max-width: map_get($grid-breakpoints, md);\r\n    margin: auto;\r\n\r\n    > div:last-of-type {\r\n      margin-bottom: 0 !important;\r\n    }\r\n  }\r\n\r\n  &__close {\r\n    position: absolute;\r\n    top: 1rem;\r\n    right: 1rem;\r\n    cursor: pointer;\r\n    font-size: 1.5rem !important;\r\n    font-style: normal !important;\r\n    color: $brand-secondary;\r\n    z-index: 1;\r\n  }\r\n\r\n  &__footer {\r\n    margin-top: auto;\r\n    min-height: fit-content;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    &:last-of-type {\r\n      margin-bottom: 0 !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaModal from './VaModal.vue'\r\n\r\nexport default withConfigTransport(VaModal)\r\n"],"names":["ownerDocument","node","document","listen","eventName","handler","options","addEventListener","removeEventListener","__DEV__","process","env","NODE_ENV","ClickOutsideMixin","Vue","constructor","this","handleMouse","e","preventMouseRootTrigger","onClickOutside","handleMouseCapture","target","event","documentElement","clientWidth","clientX","clientHeight","clientY","Error","insideDom","composedPath","indexOf","doc","contains","context","compareDocumentPosition","metaKey","altKey","ctrlKey","shiftKey","button","isLeftClickEvent","registerClickOutsideEvents","trigger","disabled","noop","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","slice","call","body","children","map","el","forEach","remove","ModalPropsMixin","with","ModalProps","prop","type","Boolean","default","String","validator","size","includes","Number","undefined","ModalElementProps","ModalElement","render","$slots","$attrs","$props","isTransition","h","Transition","Options","name","VaModal","mixins","ColorMixin","StatefulMixin","created","watch","valueComputed","window","listenKeyUp","$emit","cancel","noOutsideDismiss","noDismiss","$nextTick","$refs","modal","clearClickOutsideEvents","computedClass","fullscreen","mobileFullscreen","fixedLayout","computedOverlayStyles","querySelectorAll","length","overlayOpacity","zIndex","parseInt","computedModalContainerStyle","hasContentSlot","hasHeaderSlot","header","hasFooterSlot","footer","show","hide","toggle","ok","code","noEscDismiss","onBeforeEnterTransition","onAfterEnterTransition","onBeforeLeaveTransition","onAfterLeaveTransition","components","VaButton","VaIcon","emits","class","_createElementBlock","_hoisted_1","_createVNode","_ctx","withoutTransitions","appear","overlay","style","onBeforeEnter","onAfterEnter","onBeforeLeave","onAfterLeave","_createElementVNode","maxWidth","maxHeight","ref","_createBlock","onClick","getColor","title","_hoisted_2","_renderSlot","_hoisted_3","message","_hoisted_4","cancelText","okText","hideDefaultActions","_hoisted_5","color","flat","_hoisted_6","withConfigTransport"],"mappings":"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"}