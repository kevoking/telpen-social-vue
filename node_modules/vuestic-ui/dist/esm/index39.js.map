{"version":3,"file":"index39.js","sources":["../../src/components/va-rating/VaRating.types.ts","../../src/components/va-rating/VaRatingItem/VaRatingItem.vue","../../src/components/va-rating/VaRatingItem/VaRatingItem.vue?vue&type=template&id=63f57dc2&lang.js","../../src/components/va-rating/VaRatingItem/index.ts","../../src/components/va-rating/VaRating.vue","../../src/components/va-rating/VaRating.vue?vue&type=template&id=10f2d130&lang.js","../../src/components/va-rating/index.ts"],"sourcesContent":["export enum RatingValue {\r\n  EMPTY = 0,\r\n  HALF = 0.5,\r\n  FULL = 1\r\n}\r\n","<template>\r\n  <div\r\n    @mousemove=\"onHover\"\r\n    @mouseleave=\"removeHover()\"\r\n    @focus=\"onFocus()\"\r\n    @blur=\"onBlur()\"\r\n    :tabindex=\"$props.tabindex\"\r\n    class=\"va-rating-item\"\r\n    :class=\"{\r\n      'va-rating-item__isFocused': isFocused\r\n    }\"\r\n    @keyup.enter=\"onEnter\"\r\n  >\r\n    <slot :props=\"{\r\n      value: valueProxy, onClick\r\n    }\">\r\n      <va-icon\r\n        class=\"va-rating-item__wrapper\"\r\n        tabindex=\"-1\"\r\n        :name=\"computedIconName\"\r\n        :size=\"$props.size\"\r\n        tag=\"button\"\r\n        :color=\"computedColor\"\r\n        @click=\"onClick\"\r\n      />\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../../services/color-config/ColorMixin'\r\nimport { RatingValue } from '../VaRating.types'\r\nimport VaIcon from '../../va-icon'\r\n\r\nclass RatingItemProps {\r\n  modelValue = prop<number>({ type: Number, default: 0 })\r\n  filledIconName = prop<string>({ type: String, default: 'star' })\r\n  halfIconName = prop<string>({ type: String, default: 'star_half' })\r\n  emptyIconName = prop<string>({ type: String, default: 'star_empty' })\r\n  halves = prop<boolean>({ type: Boolean, default: false })\r\n  hover = prop<boolean>({ type: Boolean, default: false })\r\n  tabindex = prop<number>({ type: Number })\r\n  size = prop<string | number>({ type: [String, Number], default: 'medium' })\r\n  emptyIconColor = prop<string>({ type: String })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst RatingItemPropsMixin = Vue.with(RatingItemProps)\r\n\r\n@Options({\r\n  name: 'VaRatingItem',\r\n  components: { VaIcon },\r\n  emits: ['click', 'hover'],\r\n})\r\nexport default class VaRatingItem extends mixins(\r\n  ColorMixin,\r\n  RatingItemPropsMixin,\r\n) {\r\n  private isHovered = false\r\n  private isFocused = false\r\n  private shouldEmitClick = false\r\n  private hoveredValue: RatingValue = this.modelValue\r\n\r\n  created () {\r\n    watch(() => this.$props.modelValue, (newVal) => {\r\n      this.hoveredValue = newVal as RatingValue\r\n    })\r\n  }\r\n\r\n  get computedIconName (): string {\r\n    if (this.halves && this.valueProxy === RatingValue.HALF) {\r\n      return this.halfIconName\r\n    }\r\n    return this.valueProxy === RatingValue.EMPTY\r\n      ? this.emptyIconName\r\n      : this.filledIconName\r\n  }\r\n\r\n  private get computedColor () {\r\n    return this.valueProxy === RatingValue.EMPTY\r\n      ? this.emptyIconColor || this.colorComputed\r\n      : this.colorComputed\r\n  }\r\n\r\n  private set valueProxy (value: RatingValue) {\r\n    this.hoveredValue = value\r\n    if (this.shouldEmitClick) {\r\n      this.shouldEmitClick = false\r\n      this.$emit('click', value)\r\n    } else if (this.isHovered) {\r\n      this.$emit('hover', value)\r\n    }\r\n  }\r\n\r\n  private get valueProxy (): RatingValue {\r\n    return this.isHovered ? this.hoveredValue : this.modelValue\r\n  }\r\n\r\n  private onClick (cursorPosition: MouseEvent) {\r\n    this.shouldEmitClick = true\r\n    this.processCursorInput(this.$el.clientWidth, cursorPosition.offsetX)\r\n  }\r\n\r\n  private processCursorInput (iconSize: number, offsetX: number) {\r\n    this.valueProxy = this.halves && (offsetX / iconSize <= RatingValue.HALF)\r\n      ? RatingValue.HALF\r\n      : RatingValue.FULL\r\n  }\r\n\r\n  private onEnter () {\r\n    this.shouldEmitClick = true\r\n    this.valueProxy = RatingValue.FULL\r\n  }\r\n\r\n  private onHover (cursorPosition: MouseEvent) {\r\n    if (!this.hover) {\r\n      return\r\n    }\r\n    this.isHovered = true\r\n    this.processCursorInput(this.$el.clientWidth, cursorPosition.offsetX)\r\n  }\r\n\r\n  private onFocus () {\r\n    this.isFocused = true\r\n  }\r\n\r\n  private onBlur () {\r\n    this.isFocused = false\r\n  }\r\n\r\n  private removeHover () {\r\n    this.valueProxy = this.modelValue\r\n    this.isHovered = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../../styles/resources/resources\";\r\n\r\n.va-rating-item {\r\n  display: inline-block;\r\n\r\n  &__isFocused {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &__wrapper {\r\n    @include normalize-button();\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    @mousemove=\"onHover\"\r\n    @mouseleave=\"removeHover()\"\r\n    @focus=\"onFocus()\"\r\n    @blur=\"onBlur()\"\r\n    :tabindex=\"$props.tabindex\"\r\n    class=\"va-rating-item\"\r\n    :class=\"{\r\n      'va-rating-item__isFocused': isFocused\r\n    }\"\r\n    @keyup.enter=\"onEnter\"\r\n  >\r\n    <slot :props=\"{\r\n      value: valueProxy, onClick\r\n    }\">\r\n      <va-icon\r\n        class=\"va-rating-item__wrapper\"\r\n        tabindex=\"-1\"\r\n        :name=\"computedIconName\"\r\n        :size=\"$props.size\"\r\n        tag=\"button\"\r\n        :color=\"computedColor\"\r\n        @click=\"onClick\"\r\n      />\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, prop, Vue, mixins } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../../services/color-config/ColorMixin'\r\nimport { RatingValue } from '../VaRating.types'\r\nimport VaIcon from '../../va-icon'\r\n\r\nclass RatingItemProps {\r\n  modelValue = prop<number>({ type: Number, default: 0 })\r\n  filledIconName = prop<string>({ type: String, default: 'star' })\r\n  halfIconName = prop<string>({ type: String, default: 'star_half' })\r\n  emptyIconName = prop<string>({ type: String, default: 'star_empty' })\r\n  halves = prop<boolean>({ type: Boolean, default: false })\r\n  hover = prop<boolean>({ type: Boolean, default: false })\r\n  tabindex = prop<number>({ type: Number })\r\n  size = prop<string | number>({ type: [String, Number], default: 'medium' })\r\n  emptyIconColor = prop<string>({ type: String })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst RatingItemPropsMixin = Vue.with(RatingItemProps)\r\n\r\n@Options({\r\n  name: 'VaRatingItem',\r\n  components: { VaIcon },\r\n  emits: ['click', 'hover'],\r\n})\r\nexport default class VaRatingItem extends mixins(\r\n  ColorMixin,\r\n  RatingItemPropsMixin,\r\n) {\r\n  private isHovered = false\r\n  private isFocused = false\r\n  private shouldEmitClick = false\r\n  private hoveredValue: RatingValue = this.modelValue\r\n\r\n  created () {\r\n    watch(() => this.$props.modelValue, (newVal) => {\r\n      this.hoveredValue = newVal as RatingValue\r\n    })\r\n  }\r\n\r\n  get computedIconName (): string {\r\n    if (this.halves && this.valueProxy === RatingValue.HALF) {\r\n      return this.halfIconName\r\n    }\r\n    return this.valueProxy === RatingValue.EMPTY\r\n      ? this.emptyIconName\r\n      : this.filledIconName\r\n  }\r\n\r\n  private get computedColor () {\r\n    return this.valueProxy === RatingValue.EMPTY\r\n      ? this.emptyIconColor || this.colorComputed\r\n      : this.colorComputed\r\n  }\r\n\r\n  private set valueProxy (value: RatingValue) {\r\n    this.hoveredValue = value\r\n    if (this.shouldEmitClick) {\r\n      this.shouldEmitClick = false\r\n      this.$emit('click', value)\r\n    } else if (this.isHovered) {\r\n      this.$emit('hover', value)\r\n    }\r\n  }\r\n\r\n  private get valueProxy (): RatingValue {\r\n    return this.isHovered ? this.hoveredValue : this.modelValue\r\n  }\r\n\r\n  private onClick (cursorPosition: MouseEvent) {\r\n    this.shouldEmitClick = true\r\n    this.processCursorInput(this.$el.clientWidth, cursorPosition.offsetX)\r\n  }\r\n\r\n  private processCursorInput (iconSize: number, offsetX: number) {\r\n    this.valueProxy = this.halves && (offsetX / iconSize <= RatingValue.HALF)\r\n      ? RatingValue.HALF\r\n      : RatingValue.FULL\r\n  }\r\n\r\n  private onEnter () {\r\n    this.shouldEmitClick = true\r\n    this.valueProxy = RatingValue.FULL\r\n  }\r\n\r\n  private onHover (cursorPosition: MouseEvent) {\r\n    if (!this.hover) {\r\n      return\r\n    }\r\n    this.isHovered = true\r\n    this.processCursorInput(this.$el.clientWidth, cursorPosition.offsetX)\r\n  }\r\n\r\n  private onFocus () {\r\n    this.isFocused = true\r\n  }\r\n\r\n  private onBlur () {\r\n    this.isFocused = false\r\n  }\r\n\r\n  private removeHover () {\r\n    this.valueProxy = this.modelValue\r\n    this.isHovered = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../../styles/resources/resources\";\r\n\r\n.va-rating-item {\r\n  display: inline-block;\r\n\r\n  &__isFocused {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  &__wrapper {\r\n    @include normalize-button();\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaRatingItem from './VaRatingItem.vue'\r\n\r\nexport default withConfigTransport(VaRatingItem)\r\n","<template>\r\n  <div\r\n    class=\"va-rating\"\r\n    :class=\"classList\"\r\n  >\r\n    <div\r\n      @keyup.left=\"onArrow($event, -1)\"\r\n      @keyup.right=\"onArrow($event, 1)\"\r\n      @mouseenter=\"onMouseEnter\"\r\n      @mouseleave=\"onMouseLeave\"\r\n      class=\"va-rating__item-wrapper\"\r\n    >\r\n      <template\r\n        v-if=\"$props.numbers\"\r\n      >\r\n        <va-rating-item\r\n          v-for=\"number in $props.max\"\r\n          :key=\"number\"\r\n          class=\"va-rating__number-item\"\r\n          :halves=\"$props.halves\"\r\n          :hover=\"hoverEnabled\"\r\n          :size=\"$props.size\"\r\n          :color=\"$props.color\"\r\n          :empty-icon-color=\"$props.unselectedColor\"\r\n          :tabindex=\"tabIndex\"\r\n          :modelValue=\"getItemValue(number)\"\r\n          @hover=\"onHover(number, $event)\"\r\n          @click=\"onItemSelected(number, $event)\"\r\n        >\r\n          <template v-slot=\"{ props }\">\r\n            <button\r\n              @click=\"props.onClick\"\r\n              class=\"va-rating__number-item\"\r\n              tabindex=\"-1\"\r\n              :style=\" {\r\n                background: props.value === 0.5\r\n                  ? `linear-gradient(90deg, ${colorComputed} 50%, ${focusColor} 50%`\r\n                  : !props.value ? focusColor : colorComputed,\r\n                color: props.value ? '#fff' : colorComputed,\r\n                width: sizeComputed,\r\n                height: sizeComputed,\r\n                fontSize: fontSizeComputed,\r\n                borderRadius: `${SizeMixin_fontSize * 0.125}rem`,\r\n              }\"\r\n            > {{ number }} </button>\r\n          </template>\r\n        </va-rating-item>\r\n      </template>\r\n      <template v-else>\r\n        <va-rating-item\r\n          v-for=\"itemNumber in $props.max\"\r\n          :key=\"itemNumber\"\r\n          :halves=\"$props.halves\"\r\n          :hover=\"hoverEnabled\"\r\n          :filled-icon-name=\"$props.icon\"\r\n          :half-icon-name=\"$props.halfIcon\"\r\n          :empty-icon-name=\"$props.emptyIcon\"\r\n          :size=\"$props.size\"\r\n          :color=\"$props.color\"\r\n          :empty-icon-color=\"$props.unselectedColor\"\r\n          :tabindex=\"tabIndex\"\r\n          :modelValue=\"getItemValue(itemNumber)\"\r\n          @hover=\"onHover(itemNumber, $event)\"\r\n          @click=\"onItemSelected(itemNumber, $event)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <span class=\"va-rating__text-wrapper\" v-if=\"$props.texts.length === $props.max\" :style=\"{ color: computeColor($props.textColor) }\">\r\n      {{ $props.texts[Math.round(valueProxy) - 1] }}\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\nimport { ColorInput } from 'colortranslator/dist/@types'\r\n\r\nimport { getFocusColor } from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\nimport VaRatingItem from './VaRatingItem'\r\nimport { RatingValue } from './VaRating.types'\r\n\r\nclass RatingProps {\r\n  modelValue = prop<number>({ type: Number, default: 0 })\r\n  icon = prop<string>({ type: String, default: 'star' })\r\n  halfIcon = prop<string>({ type: String, default: 'star_half' })\r\n  emptyIcon = prop<string>({ type: String, default: 'star_outline' })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  numbers = prop<boolean>({ type: Boolean, default: false })\r\n  halves = prop<boolean>({ type: Boolean, default: false })\r\n  max = prop<number>({ type: Number, default: 5 })\r\n  clearable = prop<boolean>({ type: Boolean, default: false })\r\n  hover = prop<boolean>({ type: Boolean, default: false })\r\n  texts = prop<any[]>({ type: Array, default: () => [] })\r\n  textColor = prop<string>({ type: String })\r\n  unselectedColor = prop<string>({ type: String })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst RatingPropsMixin = Vue.with(RatingProps)\r\n\r\n@Options({\r\n  name: 'VaRating',\r\n  components: { VaRatingItem },\r\n})\r\nexport default class VaRating extends mixins(\r\n  ColorMixin,\r\n  SizeMixin,\r\n  StatefulMixin,\r\n  RatingPropsMixin,\r\n) {\r\n  isHovered = false\r\n  forceEmit = false\r\n  hoveredValue = RatingValue.EMPTY\r\n\r\n  mounted () {\r\n    this.hoveredValue = this.valueComputed\r\n  }\r\n\r\n  get valueProxy (): number {\r\n    return this.isHovered ? this.hoveredValue : this.valueComputed\r\n  }\r\n\r\n  set valueProxy (value: number) {\r\n    this.hoveredValue = value\r\n    if (this.forceEmit) {\r\n      this.valueComputed = value\r\n      this.forceEmit = false\r\n    }\r\n  }\r\n\r\n  get focusColor () {\r\n    return this.$props.unselectedColor\r\n      ? this.computeColor(this.$props.unselectedColor)\r\n      : getFocusColor(this.colorComputed as ColorInput)\r\n  }\r\n\r\n  get classList () {\r\n    return {\r\n      'va-rating--disabled': this.$props.disabled,\r\n      'va-rating--readonly': this.$props.readonly,\r\n    }\r\n  }\r\n\r\n  get interactionsEnabled () {\r\n    return !(this.$props.disabled || this.$props.readonly)\r\n  }\r\n\r\n  get hoverEnabled () {\r\n    return this.$props.hover && this.interactionsEnabled\r\n  }\r\n\r\n  get tabIndex () {\r\n    return this.interactionsEnabled ? 0 : undefined\r\n  }\r\n\r\n  getItemValue (itemNumber: number): RatingValue {\r\n    const diff = itemNumber - this.valueProxy\r\n    switch (true) {\r\n    case diff <= 0: return RatingValue.FULL\r\n    case diff === RatingValue.HALF && this.$props.halves: return RatingValue.HALF\r\n    default: return RatingValue.EMPTY\r\n    }\r\n  }\r\n\r\n  onHover (itemNumber: number, value: RatingValue): void {\r\n    this.valueProxy = value === RatingValue.FULL\r\n      ? itemNumber\r\n      : itemNumber - RatingValue.HALF\r\n  }\r\n\r\n  onMouseEnter () {\r\n    this.isHovered = (this.hoverEnabled as boolean) && true\r\n  }\r\n\r\n  onMouseLeave () {\r\n    this.isHovered = false\r\n  }\r\n\r\n  onArrow (event: KeyboardEvent, directon: 1 | -1) {\r\n    const currentValue = this.valueProxy || RatingValue.EMPTY\r\n    const step = this.$props.halves ? RatingValue.HALF : RatingValue.FULL\r\n    const nextValue = currentValue + (step * directon)\r\n    if (nextValue < 0 || nextValue > (this.$props.max as number)) { return }\r\n\r\n    this.forceEmit = true\r\n    this.valueProxy = nextValue\r\n  }\r\n\r\n  onItemSelected (itemNumber: number, value: RatingValue) {\r\n    if (!this.interactionsEnabled) { return }\r\n    const currentClickedValue = this.$props.halves\r\n      ? value === RatingValue.HALF ? itemNumber - RatingValue.HALF : itemNumber\r\n      : itemNumber\r\n    const valueToEmit = this.$props.clearable && this.valueComputed === currentClickedValue\r\n      ? RatingValue.EMPTY\r\n      : currentClickedValue\r\n\r\n    this.forceEmit = true\r\n    this.valueProxy = valueToEmit\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-rating {\r\n  display: var(--va-rating-display);\r\n\r\n  &__number-item {\r\n    @include normalize-button();\r\n\r\n    font-size: var(--va-rating-number-item-font-size);\r\n    margin: var(--va-rating-number-item-margin);\r\n    font-weight: var(--va-rating-number-item-font-weight);\r\n\r\n    @include flex-center();\r\n\r\n    cursor: pointer;\r\n\r\n    @at-root {\r\n      .va-rating--disabled & {\r\n        @include va-disabled();\r\n      }\r\n\r\n      .va-rating--readonly & {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__item-wrapper {\r\n    display: var(--va-rating-item-wrapper-display);\r\n    cursor: var(--va-rating-item-wrapper-cursor);\r\n\r\n    @at-root {\r\n      .va-rating--readonly &,\r\n      .va-rating--disabled & {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &-item {\r\n    display: var(--va-rating-item-display);\r\n\r\n    @include flex-center();\r\n\r\n    .va-rating--disabled & {\r\n      @include va-disabled();\r\n\r\n      &__wrapper {\r\n        cursor: initial !important;\r\n      }\r\n    }\r\n\r\n    .va-rating--readonly & &__wrapper {\r\n      cursor: initial !important;\r\n    }\r\n  }\r\n\r\n  &__text-wrapper {\r\n    padding-left: 10px;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-rating\"\r\n    :class=\"classList\"\r\n  >\r\n    <div\r\n      @keyup.left=\"onArrow($event, -1)\"\r\n      @keyup.right=\"onArrow($event, 1)\"\r\n      @mouseenter=\"onMouseEnter\"\r\n      @mouseleave=\"onMouseLeave\"\r\n      class=\"va-rating__item-wrapper\"\r\n    >\r\n      <template\r\n        v-if=\"$props.numbers\"\r\n      >\r\n        <va-rating-item\r\n          v-for=\"number in $props.max\"\r\n          :key=\"number\"\r\n          class=\"va-rating__number-item\"\r\n          :halves=\"$props.halves\"\r\n          :hover=\"hoverEnabled\"\r\n          :size=\"$props.size\"\r\n          :color=\"$props.color\"\r\n          :empty-icon-color=\"$props.unselectedColor\"\r\n          :tabindex=\"tabIndex\"\r\n          :modelValue=\"getItemValue(number)\"\r\n          @hover=\"onHover(number, $event)\"\r\n          @click=\"onItemSelected(number, $event)\"\r\n        >\r\n          <template v-slot=\"{ props }\">\r\n            <button\r\n              @click=\"props.onClick\"\r\n              class=\"va-rating__number-item\"\r\n              tabindex=\"-1\"\r\n              :style=\" {\r\n                background: props.value === 0.5\r\n                  ? `linear-gradient(90deg, ${colorComputed} 50%, ${focusColor} 50%`\r\n                  : !props.value ? focusColor : colorComputed,\r\n                color: props.value ? '#fff' : colorComputed,\r\n                width: sizeComputed,\r\n                height: sizeComputed,\r\n                fontSize: fontSizeComputed,\r\n                borderRadius: `${SizeMixin_fontSize * 0.125}rem`,\r\n              }\"\r\n            > {{ number }} </button>\r\n          </template>\r\n        </va-rating-item>\r\n      </template>\r\n      <template v-else>\r\n        <va-rating-item\r\n          v-for=\"itemNumber in $props.max\"\r\n          :key=\"itemNumber\"\r\n          :halves=\"$props.halves\"\r\n          :hover=\"hoverEnabled\"\r\n          :filled-icon-name=\"$props.icon\"\r\n          :half-icon-name=\"$props.halfIcon\"\r\n          :empty-icon-name=\"$props.emptyIcon\"\r\n          :size=\"$props.size\"\r\n          :color=\"$props.color\"\r\n          :empty-icon-color=\"$props.unselectedColor\"\r\n          :tabindex=\"tabIndex\"\r\n          :modelValue=\"getItemValue(itemNumber)\"\r\n          @hover=\"onHover(itemNumber, $event)\"\r\n          @click=\"onItemSelected(itemNumber, $event)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <span class=\"va-rating__text-wrapper\" v-if=\"$props.texts.length === $props.max\" :style=\"{ color: computeColor($props.textColor) }\">\r\n      {{ $props.texts[Math.round(valueProxy) - 1] }}\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\nimport { ColorInput } from 'colortranslator/dist/@types'\r\n\r\nimport { getFocusColor } from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\nimport VaRatingItem from './VaRatingItem'\r\nimport { RatingValue } from './VaRating.types'\r\n\r\nclass RatingProps {\r\n  modelValue = prop<number>({ type: Number, default: 0 })\r\n  icon = prop<string>({ type: String, default: 'star' })\r\n  halfIcon = prop<string>({ type: String, default: 'star_half' })\r\n  emptyIcon = prop<string>({ type: String, default: 'star_outline' })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  numbers = prop<boolean>({ type: Boolean, default: false })\r\n  halves = prop<boolean>({ type: Boolean, default: false })\r\n  max = prop<number>({ type: Number, default: 5 })\r\n  clearable = prop<boolean>({ type: Boolean, default: false })\r\n  hover = prop<boolean>({ type: Boolean, default: false })\r\n  texts = prop<any[]>({ type: Array, default: () => [] })\r\n  textColor = prop<string>({ type: String })\r\n  unselectedColor = prop<string>({ type: String })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n}\r\n\r\nconst RatingPropsMixin = Vue.with(RatingProps)\r\n\r\n@Options({\r\n  name: 'VaRating',\r\n  components: { VaRatingItem },\r\n})\r\nexport default class VaRating extends mixins(\r\n  ColorMixin,\r\n  SizeMixin,\r\n  StatefulMixin,\r\n  RatingPropsMixin,\r\n) {\r\n  isHovered = false\r\n  forceEmit = false\r\n  hoveredValue = RatingValue.EMPTY\r\n\r\n  mounted () {\r\n    this.hoveredValue = this.valueComputed\r\n  }\r\n\r\n  get valueProxy (): number {\r\n    return this.isHovered ? this.hoveredValue : this.valueComputed\r\n  }\r\n\r\n  set valueProxy (value: number) {\r\n    this.hoveredValue = value\r\n    if (this.forceEmit) {\r\n      this.valueComputed = value\r\n      this.forceEmit = false\r\n    }\r\n  }\r\n\r\n  get focusColor () {\r\n    return this.$props.unselectedColor\r\n      ? this.computeColor(this.$props.unselectedColor)\r\n      : getFocusColor(this.colorComputed as ColorInput)\r\n  }\r\n\r\n  get classList () {\r\n    return {\r\n      'va-rating--disabled': this.$props.disabled,\r\n      'va-rating--readonly': this.$props.readonly,\r\n    }\r\n  }\r\n\r\n  get interactionsEnabled () {\r\n    return !(this.$props.disabled || this.$props.readonly)\r\n  }\r\n\r\n  get hoverEnabled () {\r\n    return this.$props.hover && this.interactionsEnabled\r\n  }\r\n\r\n  get tabIndex () {\r\n    return this.interactionsEnabled ? 0 : undefined\r\n  }\r\n\r\n  getItemValue (itemNumber: number): RatingValue {\r\n    const diff = itemNumber - this.valueProxy\r\n    switch (true) {\r\n    case diff <= 0: return RatingValue.FULL\r\n    case diff === RatingValue.HALF && this.$props.halves: return RatingValue.HALF\r\n    default: return RatingValue.EMPTY\r\n    }\r\n  }\r\n\r\n  onHover (itemNumber: number, value: RatingValue): void {\r\n    this.valueProxy = value === RatingValue.FULL\r\n      ? itemNumber\r\n      : itemNumber - RatingValue.HALF\r\n  }\r\n\r\n  onMouseEnter () {\r\n    this.isHovered = (this.hoverEnabled as boolean) && true\r\n  }\r\n\r\n  onMouseLeave () {\r\n    this.isHovered = false\r\n  }\r\n\r\n  onArrow (event: KeyboardEvent, directon: 1 | -1) {\r\n    const currentValue = this.valueProxy || RatingValue.EMPTY\r\n    const step = this.$props.halves ? RatingValue.HALF : RatingValue.FULL\r\n    const nextValue = currentValue + (step * directon)\r\n    if (nextValue < 0 || nextValue > (this.$props.max as number)) { return }\r\n\r\n    this.forceEmit = true\r\n    this.valueProxy = nextValue\r\n  }\r\n\r\n  onItemSelected (itemNumber: number, value: RatingValue) {\r\n    if (!this.interactionsEnabled) { return }\r\n    const currentClickedValue = this.$props.halves\r\n      ? value === RatingValue.HALF ? itemNumber - RatingValue.HALF : itemNumber\r\n      : itemNumber\r\n    const valueToEmit = this.$props.clearable && this.valueComputed === currentClickedValue\r\n      ? RatingValue.EMPTY\r\n      : currentClickedValue\r\n\r\n    this.forceEmit = true\r\n    this.valueProxy = valueToEmit\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-rating {\r\n  display: var(--va-rating-display);\r\n\r\n  &__number-item {\r\n    @include normalize-button();\r\n\r\n    font-size: var(--va-rating-number-item-font-size);\r\n    margin: var(--va-rating-number-item-margin);\r\n    font-weight: var(--va-rating-number-item-font-weight);\r\n\r\n    @include flex-center();\r\n\r\n    cursor: pointer;\r\n\r\n    @at-root {\r\n      .va-rating--disabled & {\r\n        @include va-disabled();\r\n      }\r\n\r\n      .va-rating--readonly & {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__item-wrapper {\r\n    display: var(--va-rating-item-wrapper-display);\r\n    cursor: var(--va-rating-item-wrapper-cursor);\r\n\r\n    @at-root {\r\n      .va-rating--readonly &,\r\n      .va-rating--disabled & {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &-item {\r\n    display: var(--va-rating-item-display);\r\n\r\n    @include flex-center();\r\n\r\n    .va-rating--disabled & {\r\n      @include va-disabled();\r\n\r\n      &__wrapper {\r\n        cursor: initial !important;\r\n      }\r\n    }\r\n\r\n    .va-rating--readonly & &__wrapper {\r\n      cursor: initial !important;\r\n    }\r\n  }\r\n\r\n  &__text-wrapper {\r\n    padding-left: 10px;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaRating from './VaRating.vue'\r\nexport { default as VaRatingItem } from './VaRatingItem'\r\n\r\nexport default withConfigTransport(VaRating)\r\n"],"names":["RatingValue","RatingItemPropsMixin","Vue","with","RatingItemProps","constructor","this","prop","type","Number","default","String","Boolean","VaRatingItem","mixins","ColorMixin","modelValue","created","watch","$props","newVal","hoveredValue","computedIconName","halves","valueProxy","HALF","halfIconName","EMPTY","emptyIconName","filledIconName","computedColor","emptyIconColor","colorComputed","value","shouldEmitClick","$emit","isHovered","onClick","cursorPosition","processCursorInput","$el","clientWidth","offsetX","iconSize","FULL","onEnter","onHover","hover","onFocus","isFocused","onBlur","removeHover","Options","name","components","VaIcon","emits","_createElementBlock","onMousemove","_ctx","onMouseleave","tabindex","class","onKeyup","_renderSlot","props","_createVNode","size","tag","color","withConfigTransport","RatingPropsMixin","RatingProps","Array","VaRating","SizeMixin","StatefulMixin","mounted","valueComputed","forceEmit","focusColor","unselectedColor","computeColor","getFocusColor","classList","disabled","readonly","interactionsEnabled","hoverEnabled","tabIndex","undefined","getItemValue","itemNumber","diff","onMouseEnter","onMouseLeave","onArrow","event","directon","nextValue","max","onItemSelected","currentClickedValue","valueToEmit","clearable","_createElementVNode","$event","onMouseenter","number","_createBlock","key","style","icon","halfIcon","emptyIcon","texts","length","textColor","Math","round"],"mappings":"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"}