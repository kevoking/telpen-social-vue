{"version":3,"file":"index17.js","sources":["../../src/components/va-color-indicator/VaColorIndicator.vue","../../src/components/va-color-indicator/VaColorIndicator.vue?vue&type=template&id=3a5f09c3&lang.js","../../src/components/va-color-indicator/index.ts"],"sourcesContent":["<template>\r\n   <div\r\n    class=\"color-indicator\"\r\n    @click=\"ctx.valueComputed = !ctx.valueComputed\"\r\n    :class=\"computedClass\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div\r\n      class=\"color-indicator__core\"\r\n      :style=\"{'background-color': colorComputed, 'border-radius': square ? 0 : '50%'}\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { getColor } from '../../services/color-config/color-config'\r\nimport { Vue, Options, prop, setup } from 'vue-class-component'\r\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\r\n\r\nclass ColorIndicatorProps {\r\n  color = prop<string>({\r\n    type: String,\r\n    default: '',\r\n  })\r\n\r\n  square = prop<boolean>({\r\n    type: Boolean,\r\n    default: false,\r\n  })\r\n}\r\n\r\nconst ColorIndicatorPropsMixin = Vue.with(ColorIndicatorProps)\r\n\r\n@Options({\r\n  name: 'VaColorIndicator',\r\n  ...statefulComponentOptions,\r\n})\r\nexport default class VaColorIndicator extends ColorIndicatorPropsMixin {\r\n  ctx = setup(() => useStateful(this.$props, this.$emit))\r\n\r\n  get colorComputed () {\r\n    return getColor(this.color)\r\n  }\r\n\r\n  get computedStyle () {\r\n    return { 'border-radius': this.square ? 0 : '50%' }\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'color-indicator--selected': this.ctx.valueComputed,\r\n      'color-indicator--hoverable': this.ctx.valueComputed !== undefined,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../styles/resources/resources\";\r\n\r\n.color-indicator {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  background-color: #d8dadd;\r\n  border: 0.125rem solid #d8dadd;\r\n\r\n  &--selected {\r\n    background-color: $vue-darkest-blue;\r\n    border-color: $vue-darkest-blue;\r\n  }\r\n\r\n  &--hoverable &__core:hover {\r\n    transform: scale(1.1);\r\n    transition: transform 0.1s linear;\r\n  }\r\n\r\n  &__core {\r\n    transition: transform 0.1s linear;\r\n    vertical-align: baseline;\r\n    border-radius: 50%;\r\n    width: 1rem;\r\n    height: 1rem;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n   <div\r\n    class=\"color-indicator\"\r\n    @click=\"ctx.valueComputed = !ctx.valueComputed\"\r\n    :class=\"computedClass\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div\r\n      class=\"color-indicator__core\"\r\n      :style=\"{'background-color': colorComputed, 'border-radius': square ? 0 : '50%'}\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { getColor } from '../../services/color-config/color-config'\r\nimport { Vue, Options, prop, setup } from 'vue-class-component'\r\nimport { useStateful, statefulComponentOptions } from '../../mixins/StatefulMixin/cStatefulMixin'\r\n\r\nclass ColorIndicatorProps {\r\n  color = prop<string>({\r\n    type: String,\r\n    default: '',\r\n  })\r\n\r\n  square = prop<boolean>({\r\n    type: Boolean,\r\n    default: false,\r\n  })\r\n}\r\n\r\nconst ColorIndicatorPropsMixin = Vue.with(ColorIndicatorProps)\r\n\r\n@Options({\r\n  name: 'VaColorIndicator',\r\n  ...statefulComponentOptions,\r\n})\r\nexport default class VaColorIndicator extends ColorIndicatorPropsMixin {\r\n  ctx = setup(() => useStateful(this.$props, this.$emit))\r\n\r\n  get colorComputed () {\r\n    return getColor(this.color)\r\n  }\r\n\r\n  get computedStyle () {\r\n    return { 'border-radius': this.square ? 0 : '50%' }\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'color-indicator--selected': this.ctx.valueComputed,\r\n      'color-indicator--hoverable': this.ctx.valueComputed !== undefined,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../styles/resources/resources\";\r\n\r\n.color-indicator {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  background-color: #d8dadd;\r\n  border: 0.125rem solid #d8dadd;\r\n\r\n  &--selected {\r\n    background-color: $vue-darkest-blue;\r\n    border-color: $vue-darkest-blue;\r\n  }\r\n\r\n  &--hoverable &__core:hover {\r\n    transform: scale(1.1);\r\n    transition: transform 0.1s linear;\r\n  }\r\n\r\n  &__core {\r\n    transition: transform 0.1s linear;\r\n    vertical-align: baseline;\r\n    border-radius: 50%;\r\n    width: 1rem;\r\n    height: 1rem;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\n\r\nimport VaColorIndicatorComponent from './VaColorIndicator.vue'\r\n\r\nconst VaColorIndicator = withConfigTransport(VaColorIndicatorComponent)\r\nexport default VaColorIndicator\r\n"],"names":["ColorIndicatorPropsMixin","Vue","with","ColorIndicatorProps","constructor","this","prop","type","String","default","Boolean","VaColorIndicator","setup","useStateful","$props","$emit","colorComputed","getColor","color","computedStyle","square","computedClass","ctx","valueComputed","undefined","Options","name","statefulComponentOptions","_createElementBlock","class","_ctx","onClick","style","_createElementVNode","withConfigTransport","VaColorIndicatorComponent"],"mappings":"odA+BA,MAAMA,EAA2BC,EAAIC,KAZrC,MAAMC,oBAANC,cACEC,WAAQC,EAAa,CACnBC,KAAMC,OACNC,QAAS,KAGXJ,YAASC,EAAc,CACrBC,KAAMG,QACND,SAAS,OAUb,IAAqBE,EAArB,MAAqBA,yBAAyBX,EAA9CI,kCACEC,SAAMO,GAAM,IAAMC,EAAYR,KAAKS,OAAQT,KAAKU,SAEhDC,oBACE,OAAOC,EAASZ,KAAKa,OAGvBC,oBACE,MAAO,CAAE,gBAAiBd,KAAKe,OAAS,EAAI,OAG9CC,oBACE,MAAO,CACL,4BAA6BhB,KAAKiB,IAAIC,cACtC,kCAAyDC,IAA3BnB,KAAKiB,IAAIC,iBAdxBZ,KAJpBc,EAAQ,CACPC,KAAM,sBACHC,KAEgBhB,SAAAA,4oFCpClBiB,SACCC,SAAM,kBAEEC,kBADPC,uBAAOD,MAAIP,eAAiBO,MAAIP,eAEhCS,QAAOF,mBAERG,SACEJ,MAAM,wBACLG,4BAA4BF,gCAAgCA,uICL7DnB,EAAmBuB,EAAoBC"}