{"version":3,"file":"index15.js","sources":["../../src/components/va-chip/VaChip.vue","../../src/components/va-chip/VaChip.vue?vue&type=template&id=7e7002c8&lang.js","../../src/components/va-chip/index.ts"],"sourcesContent":["<template>\r\n  <component\r\n    v-if=\"valueComputed\"\r\n    class=\"va-chip\"\r\n    :is=\"tagComputed\"\r\n    :href=\"hrefComputed\"\r\n    :target=\"target\"\r\n    :to=\"to\"\r\n    :replace=\"replace\"\r\n    :exact=\"exact\"\r\n    :active-class=\"activeClass\"\r\n    :exact-active-class=\"exactActiveClass\"\r\n    :class=\"computedClass\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div\r\n      class=\"va-chip__inner\"\r\n      v-on=\"SetupContext.keyboardFocusListeners\"\r\n      @focus=\"$emit('focus')\"\r\n      @mouseenter=\"updateHoverState(true)\"\r\n      @mouseleave=\"updateHoverState(false)\"\r\n      :tabindex=\"indexComputed\"\r\n    >\r\n      <va-icon\r\n        v-if=\"icon\"\r\n        class=\"va-chip__icon\"\r\n        :name=\"icon\"\r\n        :size=\"iconSize\"\r\n      />\r\n      <span class=\"va-chip__content\">\r\n        <slot></slot>\r\n      </span>\r\n      <va-icon\r\n        v-if=\"closeable\"\r\n        class=\"va-chip__close-icon\"\r\n        name=\"close\"\r\n        :size=\"iconSize\"\r\n        @click.stop=\"close()\"\r\n      />\r\n    </div>\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, prop, mixins, setup, Vue } from 'vue-class-component'\r\n\r\nimport {\r\n  getBoxShadowColor,\r\n  getHoverColor,\r\n  getFocusColor, getTextColor,\r\n} from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { RouterLinkMixin } from '../../mixins/RouterLinkMixin/RouterLinkMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass ChipProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: true })\r\n  closeable = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  flat = prop<boolean>({ type: Boolean, default: false })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  square = prop<boolean>({ type: Boolean, default: false })\r\n  tag = prop<string>({ type: String, default: 'span' })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value: string) => {\r\n      return ['medium', 'small', 'large'].includes(value)\r\n    },\r\n  })\r\n  shadow = prop<boolean>({ type: Boolean, default: false })\r\n}\r\n\r\nconst ChipPropsMixin = Vue.with(ChipProps)\r\n\r\n@Options({\r\n  name: 'VaChip',\r\n  components: { VaIcon },\r\n  emits: ['focus'],\r\n})\r\nexport default class VaChip extends mixins(\r\n  RouterLinkMixin,\r\n  StatefulMixin,\r\n  ColorMixin,\r\n  ChipPropsMixin,\r\n) {\r\n  SetupContext = setup(() => {\r\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\r\n\r\n    return {\r\n      hasKeyboardFocus,\r\n      keyboardFocusListeners,\r\n    }\r\n  })\r\n\r\n  hoverState = false\r\n  focusState = false\r\n\r\n  created () {\r\n    watch(() => this.hoverState, (value) => {\r\n      this.updateHoverState(value)\r\n    })\r\n  }\r\n\r\n  get iconSize () {\r\n    const size: any = {\r\n      small: '0.875rem',\r\n      medium: '1rem',\r\n      large: '1.25rem',\r\n    }\r\n    return size[this.size]\r\n  }\r\n\r\n  get indexComputed () {\r\n    return this.disabled ? -1 : 0\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-chip--small': this.size === 'small',\r\n      'va-chip--large': this.size === 'large',\r\n      'va-chip--square': this.square,\r\n      'va-chip--disabled': this.disabled,\r\n    }\r\n  }\r\n\r\n  get shadowStyle () {\r\n    if (!this.shadow || this.flat || this.outline || this.disabled || this.SetupContext.hasKeyboardFocus) {\r\n      return\r\n    }\r\n    return '0 0.125rem 0.19rem 0 ' + getBoxShadowColor(this.colorComputed)\r\n  }\r\n\r\n  get computedStyle () {\r\n    const borderColor = this.outline ? this.colorComputed : ''\r\n    const computedStyle = {\r\n      color: this.colorComputed,\r\n      borderColor,\r\n      background: '',\r\n      boxShadow: this.shadowStyle,\r\n    }\r\n\r\n    if (this.outline || this.flat) {\r\n      if (this.SetupContext.hasKeyboardFocus) {\r\n        computedStyle.background = getFocusColor(this.colorComputed)\r\n      } else if (this.hoverState) {\r\n        computedStyle.background = getHoverColor(this.colorComputed)\r\n      }\r\n    } else {\r\n      computedStyle.color = getTextColor(this.colorComputed)\r\n      computedStyle.background = this.colorComputed\r\n    }\r\n    return computedStyle\r\n  }\r\n\r\n  updateHoverState (isHover: boolean) {\r\n    this.hoverState = isHover\r\n  }\r\n\r\n  close () {\r\n    if (!this.disabled) {\r\n      this.valueComputed = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-chip {\r\n  display: var(--va-chip-display);\r\n  border: var(--va-chip-border, var(--va-control-border));\r\n  position: var(--va-chip-position);\r\n  border-radius: var(--va-chip-border-radius);\r\n  width: var(--va-chip-width);\r\n  height: var(--va-chip-height);\r\n  min-width: var(--va-chip-min-width);\r\n  min-height: var(--va-chip-min-height);\r\n  padding: var(--va-chip-padding);\r\n  color: var(--va-chip-color);\r\n  cursor: var(--va-chip-cursor);\r\n  font-size: var(--va-chip-font-size);\r\n\r\n  &__inner {\r\n    display: var(--va-chip-inner-display);\r\n    align-items: var(--va-chip-inner-align-items);\r\n    width: var(--va-chip-inner-width);\r\n  }\r\n\r\n  &:hover {\r\n    opacity: var(--va-chip-hover-opacity);\r\n  }\r\n\r\n  &__content {\r\n    display: var(--va-chip-content-display);\r\n    justify-content: var(--va-chip-content-justify-content);\r\n    align-items: var(--va-chip-content-align-items);\r\n    padding: var(--va-chip-content-padding);\r\n    line-height: var(--va-chip-content-line-height);\r\n    width: var(--va-chip-content-width);\r\n  }\r\n\r\n  &__close-icon {\r\n    cursor: pointer;\r\n\r\n    /* z-index: 500; */\r\n\r\n    @at-root {\r\n      .va-chip--disabled {\r\n        .va-chip__close-icon {\r\n          cursor: default !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &--square {\r\n    border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\r\n  }\r\n\r\n  &--small {\r\n    height: var(--va-sm-chip-height);\r\n    font-size: var(--va-sm-chip-font-size);\r\n  }\r\n\r\n  &--large {\r\n    height: var(--va-lg-chip-height);\r\n    font-size: var(--va-lg-chip-font-size);\r\n  }\r\n\r\n  &.va-chip--disabled {\r\n    @include va-disabled;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <component\r\n    v-if=\"valueComputed\"\r\n    class=\"va-chip\"\r\n    :is=\"tagComputed\"\r\n    :href=\"hrefComputed\"\r\n    :target=\"target\"\r\n    :to=\"to\"\r\n    :replace=\"replace\"\r\n    :exact=\"exact\"\r\n    :active-class=\"activeClass\"\r\n    :exact-active-class=\"exactActiveClass\"\r\n    :class=\"computedClass\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div\r\n      class=\"va-chip__inner\"\r\n      v-on=\"SetupContext.keyboardFocusListeners\"\r\n      @focus=\"$emit('focus')\"\r\n      @mouseenter=\"updateHoverState(true)\"\r\n      @mouseleave=\"updateHoverState(false)\"\r\n      :tabindex=\"indexComputed\"\r\n    >\r\n      <va-icon\r\n        v-if=\"icon\"\r\n        class=\"va-chip__icon\"\r\n        :name=\"icon\"\r\n        :size=\"iconSize\"\r\n      />\r\n      <span class=\"va-chip__content\">\r\n        <slot></slot>\r\n      </span>\r\n      <va-icon\r\n        v-if=\"closeable\"\r\n        class=\"va-chip__close-icon\"\r\n        name=\"close\"\r\n        :size=\"iconSize\"\r\n        @click.stop=\"close()\"\r\n      />\r\n    </div>\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, prop, mixins, setup, Vue } from 'vue-class-component'\r\n\r\nimport {\r\n  getBoxShadowColor,\r\n  getHoverColor,\r\n  getFocusColor, getTextColor,\r\n} from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { RouterLinkMixin } from '../../mixins/RouterLinkMixin/RouterLinkMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass ChipProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: true })\r\n  closeable = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  flat = prop<boolean>({ type: Boolean, default: false })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  square = prop<boolean>({ type: Boolean, default: false })\r\n  tag = prop<string>({ type: String, default: 'span' })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value: string) => {\r\n      return ['medium', 'small', 'large'].includes(value)\r\n    },\r\n  })\r\n  shadow = prop<boolean>({ type: Boolean, default: false })\r\n}\r\n\r\nconst ChipPropsMixin = Vue.with(ChipProps)\r\n\r\n@Options({\r\n  name: 'VaChip',\r\n  components: { VaIcon },\r\n  emits: ['focus'],\r\n})\r\nexport default class VaChip extends mixins(\r\n  RouterLinkMixin,\r\n  StatefulMixin,\r\n  ColorMixin,\r\n  ChipPropsMixin,\r\n) {\r\n  SetupContext = setup(() => {\r\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\r\n\r\n    return {\r\n      hasKeyboardFocus,\r\n      keyboardFocusListeners,\r\n    }\r\n  })\r\n\r\n  hoverState = false\r\n  focusState = false\r\n\r\n  created () {\r\n    watch(() => this.hoverState, (value) => {\r\n      this.updateHoverState(value)\r\n    })\r\n  }\r\n\r\n  get iconSize () {\r\n    const size: any = {\r\n      small: '0.875rem',\r\n      medium: '1rem',\r\n      large: '1.25rem',\r\n    }\r\n    return size[this.size]\r\n  }\r\n\r\n  get indexComputed () {\r\n    return this.disabled ? -1 : 0\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-chip--small': this.size === 'small',\r\n      'va-chip--large': this.size === 'large',\r\n      'va-chip--square': this.square,\r\n      'va-chip--disabled': this.disabled,\r\n    }\r\n  }\r\n\r\n  get shadowStyle () {\r\n    if (!this.shadow || this.flat || this.outline || this.disabled || this.SetupContext.hasKeyboardFocus) {\r\n      return\r\n    }\r\n    return '0 0.125rem 0.19rem 0 ' + getBoxShadowColor(this.colorComputed)\r\n  }\r\n\r\n  get computedStyle () {\r\n    const borderColor = this.outline ? this.colorComputed : ''\r\n    const computedStyle = {\r\n      color: this.colorComputed,\r\n      borderColor,\r\n      background: '',\r\n      boxShadow: this.shadowStyle,\r\n    }\r\n\r\n    if (this.outline || this.flat) {\r\n      if (this.SetupContext.hasKeyboardFocus) {\r\n        computedStyle.background = getFocusColor(this.colorComputed)\r\n      } else if (this.hoverState) {\r\n        computedStyle.background = getHoverColor(this.colorComputed)\r\n      }\r\n    } else {\r\n      computedStyle.color = getTextColor(this.colorComputed)\r\n      computedStyle.background = this.colorComputed\r\n    }\r\n    return computedStyle\r\n  }\r\n\r\n  updateHoverState (isHover: boolean) {\r\n    this.hoverState = isHover\r\n  }\r\n\r\n  close () {\r\n    if (!this.disabled) {\r\n      this.valueComputed = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-chip {\r\n  display: var(--va-chip-display);\r\n  border: var(--va-chip-border, var(--va-control-border));\r\n  position: var(--va-chip-position);\r\n  border-radius: var(--va-chip-border-radius);\r\n  width: var(--va-chip-width);\r\n  height: var(--va-chip-height);\r\n  min-width: var(--va-chip-min-width);\r\n  min-height: var(--va-chip-min-height);\r\n  padding: var(--va-chip-padding);\r\n  color: var(--va-chip-color);\r\n  cursor: var(--va-chip-cursor);\r\n  font-size: var(--va-chip-font-size);\r\n\r\n  &__inner {\r\n    display: var(--va-chip-inner-display);\r\n    align-items: var(--va-chip-inner-align-items);\r\n    width: var(--va-chip-inner-width);\r\n  }\r\n\r\n  &:hover {\r\n    opacity: var(--va-chip-hover-opacity);\r\n  }\r\n\r\n  &__content {\r\n    display: var(--va-chip-content-display);\r\n    justify-content: var(--va-chip-content-justify-content);\r\n    align-items: var(--va-chip-content-align-items);\r\n    padding: var(--va-chip-content-padding);\r\n    line-height: var(--va-chip-content-line-height);\r\n    width: var(--va-chip-content-width);\r\n  }\r\n\r\n  &__close-icon {\r\n    cursor: pointer;\r\n\r\n    /* z-index: 500; */\r\n\r\n    @at-root {\r\n      .va-chip--disabled {\r\n        .va-chip__close-icon {\r\n          cursor: default !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &--square {\r\n    border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\r\n  }\r\n\r\n  &--small {\r\n    height: var(--va-sm-chip-height);\r\n    font-size: var(--va-sm-chip-font-size);\r\n  }\r\n\r\n  &--large {\r\n    height: var(--va-lg-chip-height);\r\n    font-size: var(--va-lg-chip-font-size);\r\n  }\r\n\r\n  &.va-chip--disabled {\r\n    @include va-disabled;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaChip from './VaChip.vue'\r\n\r\nexport default withConfigTransport(VaChip)\r\n"],"names":["ChipPropsMixin","Vue","with","ChipProps","constructor","this","prop","type","Boolean","default","String","validator","value","includes","VaChip","mixins","RouterLinkMixin","StatefulMixin","ColorMixin","setup","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","created","watch","hoverState","updateHoverState","iconSize","small","medium","large","size","indexComputed","disabled","computedClass","square","shadowStyle","shadow","flat","outline","SetupContext","getBoxShadowColor","colorComputed","computedStyle","borderColor","color","background","boxShadow","getFocusColor","getHoverColor","getTextColor","isHover","close","valueComputed","Options","name","components","VaIcon","emits","class","_ctx","_createBlock","href","target","to","replace","exact","style","_createElementVNode","_mergeProps","_toHandlers","onFocus","onMouseenter","onMouseleave","tabindex","_hoisted_2","_renderSlot","onClick","withConfigTransport"],"mappings":"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"}