{"version":3,"file":"index43.js","sources":["../../src/components/va-slider/validateSlider.ts","../../src/components/va-slider/VaSlider.vue","../../src/components/va-slider/VaSlider.vue?vue&type=template&id=ad237830&lang.js","../../src/components/va-slider/index.ts"],"sourcesContent":["import { warn } from '../../services/utils'\r\n\r\nexport const validateSlider = (value: number | number[], step: number, min: number, max: number) => {\r\n  if (max < min) {\r\n    warn('The maximum value can not be less than the minimum value.')\r\n  }\r\n\r\n  if (min > max) {\r\n    warn('The minimum value can not be greater than the maximum value.')\r\n  }\r\n\r\n  if ((max - min) % step !== 0) {\r\n    warn('Step is illegal. Slider is nondivisible.')\r\n  }\r\n\r\n  const inRange = (v: number) => {\r\n    if (v < min) {\r\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`)\r\n    } else if (v > max) {\r\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`)\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    value.map((v) => inRange(v))\r\n  } else {\r\n    inRange(value)\r\n  }\r\n\r\n  return true\r\n}\r\n","<template>\r\n  <div\r\n    class=\"va-slider\"\r\n    :class=\"sliderClass\"\r\n  >\r\n    <div\r\n      class=\"va-slider__input-wrapper\"\r\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\r\n    >\r\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\r\n    </div>\r\n    <span\r\n      v-if=\"($slots.label || label) && !invertLabel\"\r\n      :style=\"labelStyles\"\r\n      class=\"va-input__label\"\r\n    >\r\n      <slot name=\"label\">\r\n        {{ label }}\r\n      </slot>\r\n    </span>\r\n    <span\r\n      v-if=\"vertical ? iconAppend : iconPrepend\"\r\n      class=\"va-input__label\"\r\n    >\r\n      <va-icon\r\n        :name=\"vertical ? iconAppend : iconPrepend\"\r\n        :color=\"colorComputed\"\r\n        :size=\"16\"\r\n      />\r\n    </span>\r\n    <div\r\n      class=\"va-slider__container\"\r\n      ref=\"sliderContainer\"\r\n      @mousedown=\"clickOnContainer\"\r\n      @mouseup=\"hasMouseDown = false\"\r\n    >\r\n      <div\r\n        class=\"va-slider__track\"\r\n        :style=\"trackStyles\"\r\n      />\r\n      <template v-if=\"pins\">\r\n        <div\r\n          v-for=\"(pin, key) in pinsCol\"\r\n          :key=\"key\"\r\n          class=\"va-slider__mark\"\r\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\r\n          :style=\"getPinStyles(pin)\"\r\n        />\r\n      </template>\r\n      <template v-if=\"isRange\">\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__track va-slider__track--selected\"\r\n          :class=\"{'va-slider__track--active': isFocused}\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, null)\"\r\n        />\r\n        <div\r\n          v-for=\"order in (this.vertical ? [1, 0] : [0, 1])\"\r\n          :key=\"'dot' + order\"\r\n          :ref=\"'dot' + order\"\r\n          class=\"va-slider__handler\"\r\n          :class=\"dotClass[order]\"\r\n          :style=\"dottedStyles[order]\"\r\n          @mousedown=\"(moveStart($event, order), setMouseDown($event, order + 1))\"\r\n          @touchstart=\"moveStart($event, order)\"\r\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\r\n          @blur=\"isFocused = false\"\r\n          :tabindex=\"(!disabled && !readonly) && 0\"\r\n        >\r\n          <div\r\n            v-if=\"isActiveDot(order)\"\r\n            :style=\"{ backgroundColor: colorComputed }\"\r\n            class=\"va-slider__handler__dot--focus\"\r\n          />\r\n          <div\r\n            v-if=\"trackLabelVisible\"\r\n            :style=\"labelStyles\"\r\n            class=\"va-slider__handler__dot--value\"\r\n          >\r\n            {{ val[order] }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-else>\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__track va-slider__track--selected\"\r\n          :class=\"{'va-slider__track--active': isFocused}\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, 0)\"\r\n        />\r\n        <div\r\n          ref=\"dot\"\r\n          class=\"va-slider__handler\"\r\n          :class=\"dotClass\"\r\n          :style=\"dottedStyles\"\r\n          @mousedown=\"(moveStart($event), setMouseDown($event))\"\r\n          @touchstart=\"(moveStart($event), setMouseDown($event))\"\r\n          @focus=\"isFocused = true\"\r\n          @blur=\"isFocused = false\"\r\n          :tabindex=\"(!this.disabled && !this.readonly) && 0\"\r\n        >\r\n          <div\r\n            v-if=\"isActiveDot(0)\"\r\n            class=\"va-slider__handler__dot--focus\"\r\n            :style=\"{ backgroundColor: colorComputed }\"\r\n          />\r\n          <div\r\n            v-if=\"trackLabelVisible\"\r\n            :style=\"labelStyles\"\r\n            class=\"va-slider__handler__dot--value\"\r\n          >\r\n            {{ trackLabel || val }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <span\r\n      v-if=\"vertical ? iconPrepend : iconAppend\"\r\n      class=\"va-input__label--inverse\"\r\n    >\r\n      <va-icon\r\n        :name=\"vertical ? iconPrepend : iconAppend\"\r\n        :color=\"colorComputed\"\r\n        :size=\"16\"\r\n      />\r\n    </span>\r\n    <span\r\n      v-if=\"($slots.label || label) && invertLabel\"\r\n      :style=\"labelStyles\"\r\n      class=\"va-input__label va-input__label--inverse\"\r\n    >\r\n      <slot name=\"label\">\r\n        {{ label }}\r\n      </slot>\r\n    </span>\r\n    <div\r\n      class=\"va-slider__input-wrapper\"\r\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\r\n    >\r\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, mixins, Vue, prop, setup } from 'vue-class-component'\r\n\r\nimport { Ref } from '../../utils/decorators'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { getHoverColor } from '../../services/color-config/color-functions'\r\nimport { validateSlider } from './validateSlider'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass SliderProps {\r\n  range = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<number | number[]>({\r\n    type: [Number, Array],\r\n    default: () => [],\r\n  })\r\n  trackLabel = prop<string>({ type: String, default: '' })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  trackColor = prop<string>({ type: String, default: '' })\r\n  labelColor = prop<string>({ type: String, default: '' })\r\n  trackLabelVisible = prop<boolean>({ type: Boolean, default: false })\r\n  min = prop<number>({ type: Number, default: 0 })\r\n  max = prop<number>({ type: Number, default: 100 })\r\n  step = prop<number>({ type: Number, default: 1 })\r\n  label = prop<string>({ type: String, default: '' })\r\n  invertLabel = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  pins = prop<boolean>({ type: Boolean, default: false })\r\n  iconPrepend = prop<string>({ type: String, default: '' })\r\n  iconAppend = prop<string>({ type: String, default: '' })\r\n  vertical = prop<boolean>({ type: Boolean, default: false })\r\n  showTrack = prop<boolean>({ type: Boolean, default: true })\r\n}\r\n\r\nconst SliderPropsMixin = Vue.with(SliderProps)\r\n\r\n@Options({\r\n  name: 'VaSlider',\r\n  components: { VaIcon },\r\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\r\n})\r\nexport default class VaSlider extends mixins(\r\n  ColorMixin,\r\n  SliderPropsMixin,\r\n) {\r\n  @Ref('dot') readonly dot!: HTMLElement\r\n  @Ref('dot0') readonly dot0!: HTMLElement\r\n  @Ref('dot1') readonly dot1!: HTMLElement\r\n  @Ref('sliderContainer') readonly sliderContainer!: HTMLElement\r\n\r\n  isFocused = false\r\n  flag = false\r\n  size = 0\r\n  currentValue = this.modelValue\r\n  currentSliderDotIndex = 0\r\n  isComponentExists = false\r\n  hasMouseDown = false\r\n\r\n  context = setup(() => {\r\n    watch([\r\n      () => this.val,\r\n      () => this.$props.step,\r\n      () => this.$props.min,\r\n      () => this.$props.max,\r\n    ], ([value, step, min, max]) => {\r\n      // @ts-ignore\r\n      validateSlider(value, step, min, max)\r\n    })\r\n\r\n    watch(() => this.hasMouseDown, (hasMouseDown) => {\r\n      if (hasMouseDown) {\r\n        document.documentElement.style.cursor = 'grabbing'\r\n      } else {\r\n        document.documentElement.style.cursor = ''\r\n      }\r\n    })\r\n\r\n    return {}\r\n  })\r\n\r\n  get pinPositionStyle (): 'bottom' | 'left' {\r\n    return this.vertical ? 'bottom' : 'left'\r\n  }\r\n\r\n  get trackSizeStyle (): 'height' | 'width' {\r\n    return this.vertical ? 'height' : 'width'\r\n  }\r\n\r\n  get moreToLess () {\r\n    // @ts-ignore\r\n    return this.val[1] - this.step < this.val[0]\r\n  }\r\n\r\n  get lessToMore () {\r\n    // @ts-ignore\r\n    return this.val[0] + this.step > this.val[1]\r\n  }\r\n\r\n  get sliderClass () {\r\n    return {\r\n      'va-slider--active': this.isFocused,\r\n      'va-slider--disabled': this.disabled,\r\n      'va-slider--readonly': this.readonly,\r\n      'va-slider--horizontal': !this.vertical,\r\n      'va-slider--vertical': this.vertical,\r\n    }\r\n  }\r\n\r\n  get dotClass () {\r\n    if (this.range) {\r\n      return [\r\n        { 'va-slider__handler--inactive': !this.isFocused },\r\n        { 'va-slider__handler--inactive': !this.isFocused },\r\n      ]\r\n    }\r\n\r\n    return {\r\n      'va-slider__handler--on-focus': !this.range && (this.flag || this.isFocused),\r\n      'va-slider__handler--inactive': !this.isFocused,\r\n    }\r\n  }\r\n\r\n  get labelStyles () {\r\n    return {\r\n      color: this.labelColor ? this.computeColor(this.labelColor) : this.colorComputed,\r\n    }\r\n  }\r\n\r\n  get trackStyles () {\r\n    return {\r\n      backgroundColor: this.trackColor\r\n        ? this.computeColor(this.trackColor)\r\n        : getHoverColor(this.colorComputed),\r\n    }\r\n  }\r\n\r\n  get processedStyles () {\r\n    const validatedValue = this.limitValue(this.modelValue)\r\n\r\n    if (this.range) {\r\n      const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n      const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.pinPositionStyle]: `${val0}%`,\r\n        [this.trackSizeStyle]: `${val1 - val0}%`,\r\n        backgroundColor: this.colorComputed,\r\n        visibility: this.showTrack ? 'visible' : 'hidden',\r\n      }\r\n    } else {\r\n      const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.trackSizeStyle]: `${val}%`,\r\n        backgroundColor: this.colorComputed,\r\n        visibility: this.showTrack ? 'visible' : 'hidden',\r\n      }\r\n    }\r\n  }\r\n\r\n  get dottedStyles () {\r\n    const validatedValue = this.limitValue(this.modelValue)\r\n\r\n    if (this.range) {\r\n      const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n      const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n      return [\r\n        {\r\n          [this.pinPositionStyle]: `${val0}%`,\r\n          backgroundColor: this.isActiveDot(0) ? this.colorComputed : '#ffffff',\r\n          borderColor: this.colorComputed,\r\n        },\r\n        {\r\n          [this.pinPositionStyle]: `${val1}%`,\r\n          backgroundColor: this.isActiveDot(1) ? this.colorComputed : '#ffffff',\r\n          borderColor: this.colorComputed,\r\n        },\r\n      ]\r\n    } else {\r\n      const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.pinPositionStyle]: `${val}%`,\r\n        backgroundColor: this.isActiveDot(0) ? this.colorComputed : '#ffffff',\r\n        borderColor: this.colorComputed,\r\n      }\r\n    }\r\n  }\r\n\r\n  get val ():any {\r\n    return this.$props.modelValue\r\n  }\r\n\r\n  set val (val) {\r\n    if (!this.range) {\r\n      val = this.limitValue(val)\r\n    }\r\n    if (!this.flag) {\r\n      this.$emit('change', val)\r\n    }\r\n    this.$emit('update:modelValue', val)\r\n  }\r\n\r\n  get total () {\r\n    return (this.max - this.min) / this.step\r\n  }\r\n\r\n  get gap () {\r\n    return this.size / this.total\r\n  }\r\n\r\n  get multiple () {\r\n    const decimals = `${this.step}`.split('.')[1]\r\n    return decimals ? Math.pow(10, decimals.length) : 1\r\n  }\r\n\r\n  get interval () {\r\n    // @ts-ignore\r\n    return this.modelValue[1] - this.modelValue[0]\r\n  }\r\n\r\n  get pinsCol () {\r\n    return (this.max / this.step) - 1\r\n  }\r\n\r\n  get position (): any {\r\n    // @ts-ignore\r\n    return this.isRange ? [(this.modelValue[0] - this.min) / this.step * this.gap, (this.modelValue[1] - this.min) / this.step * this.gap] : ((this.modelValue - this.min) / this.step * this.gap)\r\n  }\r\n\r\n  get limit () {\r\n    return [0, this.size]\r\n  }\r\n\r\n  get valueLimit () {\r\n    return [this.min, this.max]\r\n  }\r\n\r\n  get isRange () {\r\n    return Array.isArray(this.modelValue)\r\n  }\r\n\r\n  get propsForValidation () {\r\n    return {\r\n      value: this.val,\r\n      step: this.step,\r\n      min: this.min,\r\n      max: this.max,\r\n    }\r\n  }\r\n\r\n  bindEvents () {\r\n    document.addEventListener('mousemove', this.moving)\r\n    document.addEventListener('touchmove', this.moving)\r\n    document.addEventListener('mouseup', this.moveEnd)\r\n    document.addEventListener('mouseleave', this.moveEnd)\r\n    document.addEventListener('touchcancel', this.moveEnd)\r\n    document.addEventListener('touchend', this.moveEnd)\r\n    document.addEventListener('keydown', this.moveWithKeys)\r\n  }\r\n\r\n  unbindEvents () {\r\n    document.removeEventListener('mousemove', this.moving)\r\n    document.removeEventListener('touchmove', this.moving)\r\n    document.removeEventListener('mouseup', this.moveEnd)\r\n    document.removeEventListener('mouseleave', this.moveEnd)\r\n    document.removeEventListener('touchcancel', this.moveEnd)\r\n    document.removeEventListener('touchend', this.moveEnd)\r\n    document.removeEventListener('keydown', this.moveWithKeys)\r\n  }\r\n\r\n  isActiveDot (index: number) {\r\n    if ((!this.isFocused && !this.flag) || this.disabled || this.readonly) {\r\n      return false\r\n    }\r\n\r\n    return this.range ? this.currentSliderDotIndex === index : this.currentSliderDotIndex === 0\r\n  }\r\n\r\n  setMouseDown (e: Event, index: number = this.currentSliderDotIndex) {\r\n    if (!this.readonly && !this.disabled) {\r\n      this.hasMouseDown = Boolean(index) || true\r\n    }\r\n  }\r\n\r\n  moveStart (e: Event, index: number = this.currentSliderDotIndex) {\r\n    if (!index) {\r\n      if (!this.range) {\r\n        index = 0\r\n      } else {\r\n        const pos = this.getPos(e)\r\n        index = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n      }\r\n    }\r\n\r\n    if (this.isRange) {\r\n      this.currentSliderDotIndex = index\r\n    }\r\n\r\n    this.flag = true\r\n    this.$emit('drag-start')\r\n  }\r\n\r\n  moving (e: any) {\r\n    if (!this.hasMouseDown) {\r\n      return\r\n    }\r\n    if (!this.disabled && !this.readonly) {\r\n      if (!this.flag) {\r\n        return false\r\n      }\r\n\r\n      if (e.type === 'touchmove') {\r\n        this.setValueOnPos(this.getPos(e.touches[0]))\r\n      } else {\r\n        e.preventDefault()\r\n        this.setValueOnPos(this.getPos(e))\r\n      }\r\n    }\r\n  }\r\n\r\n  moveEnd () {\r\n    if (!this.disabled && !this.readonly) {\r\n      if (this.flag) {\r\n        this.$emit('drag-end')\r\n        // @ts-ignore\r\n        this.$emit('change', this.range ? Array.from(this.modelValue) : this.modelValue)\r\n      } else {\r\n        return false\r\n      }\r\n      this.flag = false\r\n      this.hasMouseDown = false\r\n    }\r\n  }\r\n\r\n  moveWithKeys (event: any) {\r\n    // don't do anything if a dot isn't focused or if the slider's disabled or readonly\r\n    // @ts-ignore\r\n    if (![this.dot0, this.dot1, this.dot].includes(document.activeElement as any)) {\r\n      return\r\n    }\r\n    if (this.disabled || this.readonly) {\r\n      return\r\n    }\r\n\r\n    /*\r\n      where: where to move\r\n        0 - to left\r\n        1 - to right\r\n\r\n      which: which dot to move (only makes sense when isRange is true)\r\n        0 - left dot\r\n        1 - right dot\r\n      */\r\n    const moveDot = (isRange: boolean, where: number, which: number) => {\r\n      if (isRange) {\r\n        // @ts-ignore\r\n        if (!this.pins) {\r\n          return this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n        }\r\n\r\n        // how many value units one pin occupies\r\n        const onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n        // how many full pins are to the left of the dot now\r\n        // @ts-ignore\r\n        const fullPinsNow = this.val[which] / onePinInterval | 0\r\n        // the value of the nearest pin\r\n        let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n        // @ts-ignore\r\n        if (this.val[which] !== nearestPinVal) { // if the dot's not pinned already\r\n          nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n          // @ts-ignore\r\n          this.val.splice(which, 1, nearestPinVal)\r\n        } else {\r\n          // @ts-ignore\r\n          this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n        }\r\n      } else {\r\n        if (!this.pins) {\r\n          // @ts-ignore\r\n          this.val += where ? this.step : -this.step\r\n          return\r\n        }\r\n\r\n        // how many value units one pin occupies\r\n        const onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n        // how many full pins are to the left of the dot now\r\n        // @ts-ignore\r\n        const fullPinsNow = this.val / onePinInterval | 0\r\n        // the value of the nearest pin\r\n        let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n        if (this.val !== nearestPinVal) { // if the dot's not pinned already\r\n          nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n          this.val = nearestPinVal\r\n        } else {\r\n          this.val += where ? this.step : -this.step\r\n        }\r\n      }\r\n    }\r\n\r\n    const arrowKeyCodes = [37, 38, 39, 40] // LEFT, UP, RIGHT, DOWN\r\n    const [CODE_LEFT, CODE_UP, CODE_RIGHT, CODE_DOWN] = arrowKeyCodes\r\n    // prevent page scroll\r\n    if (arrowKeyCodes.indexOf(event.keyCode) !== -1) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    if (this.range) {\r\n      const isVerticalDot0More = (event: any) =>\r\n        this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_UP\r\n      const isVerticalDot0Less = (event: any) => this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_DOWN\r\n      const isVerticalDot1More = (event: any) => this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_UP\r\n      const isVerticalDot1Less = (event: any) => this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_DOWN\r\n      const isHorizontalDot0Less = (event: any) =>\r\n        !this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_LEFT\r\n      const isHorizontalDot0More = (event: any) =>\r\n        !this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_RIGHT\r\n      const isHorizontalDot1Less = (event: any) =>\r\n        !this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_LEFT\r\n      const isHorizontalDot1More = (event: any) =>\r\n        !this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_RIGHT\r\n\r\n      switch (true) {\r\n        // @ts-ignore\r\n      case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && this.moreToLess && this.val[0] !== this.min:\r\n          // @ts-ignore\r\n        this.dot0.focus()\r\n        moveDot(true, 0, 0)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && this.lessToMore && this.val[1] !== this.max:\r\n          // @ts-ignore\r\n        this.dot0.focus()\r\n        moveDot(true, 1, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && this.val[0] !== this.min:\r\n        moveDot(true, 0, 0)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && this.val[1] !== this.max:\r\n        moveDot(true, 1, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && this.val[1] !== this.min:\r\n        moveDot(true, 0, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && this.val[0] !== this.max:\r\n        moveDot(true, 1, 0)\r\n        break\r\n      default:\r\n        break\r\n      }\r\n    } else {\r\n      if (this.vertical) {\r\n        if (event.keyCode === CODE_DOWN) {\r\n          moveDot(false, 0, 0)\r\n        }\r\n        if (event.keyCode === CODE_UP) {\r\n          moveDot(false, 1, 0)\r\n        }\r\n      } else {\r\n        if (event.keyCode === CODE_LEFT) {\r\n          moveDot(false, 0, 0)\r\n        }\r\n        if (event.keyCode === CODE_RIGHT) {\r\n          moveDot(false, 1, 0)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // wrapClick (e) {\r\n  //   if (!this.disabled && !this.readonly && !this.flag) {\r\n  //     const pos = this.getPos(e)\r\n  //     if (this.isRange) {\r\n  //       this.currentSliderDotIndex = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n  //     }\r\n  //     this.setValueOnPos(pos)\r\n  //     if (this.pins) {\r\n  //       if (this.isRange) {\r\n  //         if (this.currentValue[0] % this.step !== 0) {\r\n  //           this.currentValue[0] = this.normalizeValue(this.currentValue[0])\r\n  //           this.val = [this.currentValue[0], this.val[1]]\r\n  //         }\r\n  //         if (this.currentValue[1] % this.step !== 0) {\r\n  //           this.currentValue[1] = this.normalizeValue(this.currentValue[1])\r\n  //           this.val = [this.val[0], this.currentValue[1]]\r\n  //         }\r\n  //       } else {\r\n  //         this.currentValue = this.normalizeValue(this.currentValue)\r\n  //         this.val = this.currentValue\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // },\r\n\r\n  checkActivePin (pin: number) {\r\n    if (this.isRange) {\r\n      // @ts-ignore\r\n      return pin * this.step > this.val[0] && pin * this.step < this.val[1]\r\n    } else {\r\n      // @ts-ignore\r\n      return pin * this.step < this.val\r\n    }\r\n  }\r\n\r\n  getPinStyles (pin: number) {\r\n    return {\r\n      backgroundColor: this.checkActivePin(pin) ? this.colorComputed : getHoverColor(this.colorComputed),\r\n      [this.pinPositionStyle]: `${pin * this.step}%`,\r\n      transition: this.hasMouseDown ? 'none' : 'background-color .3s ease-out .1s',\r\n    }\r\n  }\r\n\r\n  getPos (e: any) {\r\n    this.getStaticData()\r\n    // @ts-ignore\r\n    return this.vertical ? this.offset - e.clientY : e.clientX - this.offset\r\n  }\r\n\r\n  getStaticData () {\r\n    if (this.sliderContainer) {\r\n      this.size = this.sliderContainer[this.vertical ? 'offsetHeight' : 'offsetWidth']\r\n      // @ts-ignore\r\n      this.offset = (this.sliderContainer.getBoundingClientRect() as Record<string, any>)[this.pinPositionStyle]\r\n    }\r\n  }\r\n\r\n  getValueByIndex (index: number) {\r\n    return ((this.step * this.multiple) * index + (this.min * this.multiple)) / this.multiple\r\n  }\r\n\r\n  setCurrentValue (val: any) {\r\n    const slider = this.currentSliderDotIndex\r\n    if (this.isRange) {\r\n      // @ts-ignore\r\n      if (this.isDiff(this.currentValue[slider], val)) {\r\n        // @ts-ignore\r\n        this.currentValue.splice(slider, 1, val)\r\n        if (slider === 0) {\r\n          // @ts-ignore\r\n          this.val = [this.currentValue.splice(slider, 1, val)[0], this.modelValue[1]]\r\n          this.currentValue = [...this.val]\r\n        } else {\r\n          // @ts-ignore\r\n          this.val = [this.modelValue[0], this.currentValue.splice(slider, 1, val)[0]]\r\n          this.currentValue = [...this.val]\r\n        }\r\n      }\r\n    } else {\r\n      if (val < this.min || val > this.max) {\r\n        return false\r\n      }\r\n      if (this.isDiff(this.currentValue, val)) {\r\n        this.currentValue = val\r\n        this.val = val\r\n      }\r\n    }\r\n  }\r\n\r\n  setValueOnPos (pixelPosition: any) {\r\n    const range = this.limit\r\n    const valueRange = this.valueLimit\r\n\r\n    // this.setTransform()\r\n\r\n    // set focus on current thumb\r\n    const dotToFocus = this.isRange ? (this.currentSliderDotIndex ? this.dot1 : this.dot0) : this.dot\r\n    dotToFocus.focus()\r\n\r\n    if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\r\n      if (this.currentSliderDotIndex) {\r\n        if (pixelPosition <= this.position[0]) {\r\n          // @ts-ignore\r\n          this.val[1] = this.val[0]\r\n          this.currentSliderDotIndex = 0\r\n        }\r\n        const v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n        this.setCurrentValue(v)\r\n      } else {\r\n        if (pixelPosition >= this.position[1]) {\r\n          // @ts-ignore\r\n          this.val[0] = this.val[1]\r\n          this.currentSliderDotIndex = 1\r\n        }\r\n        const v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n        this.setCurrentValue(v)\r\n      }\r\n    } else if (pixelPosition < range[0]) {\r\n      this.setCurrentValue(valueRange[0])\r\n    } else {\r\n      this.setCurrentValue(valueRange[1])\r\n    }\r\n  }\r\n\r\n  // setTransform () {\r\n  //   if (this.isRange) {\r\n  //     const slider = this.currentSliderDotIndex\r\n  //     const difference = 100 / (this.max - this.min)\r\n  //     const val0 = (this.value[0] - this.min) * difference\r\n  //     const processPosition = `${val0}%`\r\n\r\n  //     if (slider === 0) {\r\n  //       this.dot0.style[this.pinPositionStyle] = `calc(${processPosition} - 8px)`\r\n  //       this.dot0.focus()\r\n  //     } else {\r\n  //       this.dot1.style[this.pinPositionStyle] = `calc(${processPosition} - 8px)`\r\n  //       this.dot1.focus()\r\n  //     }\r\n  //   } else {\r\n  //     const val = ((this.value - this.min) / (this.max - this.min)) * 100\r\n\r\n  //     this.dot.style[this.pinPositionStyle] = `calc(${val} - 8px)`\r\n  //     this.dot.focus()\r\n  //   }\r\n  // }\r\n\r\n  // normalizeValue (value: any) {\r\n  //   const currentRest = value % this.step\r\n  //   if ((currentRest / this.step) >= 0.5) {\r\n  //     value = value + (this.step - currentRest)\r\n  //   } else {\r\n  //     value = value - currentRest\r\n  //   }\r\n  //   return value\r\n  // }\r\n\r\n  limitValue (val: any) {\r\n    const inRange = (v: any) => {\r\n      if (v < this.min) {\r\n        return this.min\r\n      } else if (v > this.max) {\r\n        return this.max\r\n      }\r\n      return v\r\n    }\r\n\r\n    if (this.isRange) {\r\n      if (val[0] >= val[1] && this.currentSliderDotIndex === 0) {\r\n        const v = inRange(val[1])\r\n        return [v, v]\r\n      }\r\n      if (val[0] >= val[1] && this.currentSliderDotIndex === 1) {\r\n        const v = inRange(val[0])\r\n        return [v, v]\r\n      }\r\n      return val.map((v: any) => inRange(v))\r\n    } else {\r\n      return inRange(val)\r\n    }\r\n  }\r\n\r\n  isDiff (a: any, b: any) {\r\n    return JSON.stringify(a) !== JSON.stringify(b)\r\n  }\r\n\r\n  clickOnContainer (e: any) {\r\n    if (this.disabled || this.readonly) {\r\n      return\r\n    }\r\n    const pos = this.getPos(e)\r\n    if (this.isRange) {\r\n      this.currentSliderDotIndex = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n    }\r\n    this.setMouseDown(e, this.currentSliderDotIndex)\r\n    this.setValueOnPos(pos)\r\n    this.moveStart(e, this.currentSliderDotIndex)\r\n  }\r\n\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      if (validateSlider(this.modelValue, this.step, this.min, this.max)) {\r\n        this.getStaticData()\r\n        this.bindEvents()\r\n      }\r\n    })\r\n  }\r\n\r\n  beforeUnmount () {\r\n    this.unbindEvents()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-slider {\r\n  display: var(--va-slider-display);\r\n  align-items: var(--va-slider-align-items);\r\n\r\n  &__input-wrapper {\r\n    position: var(--va-slider-input-wrapper-position);\r\n    display: var(--va-slider-input-wrapper-display);\r\n  }\r\n\r\n  &__container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: grab;\r\n  }\r\n\r\n  &__track {\r\n    position: var(--va-slider-track-position);\r\n    border-radius: var(--va-slider-track-border-radius);\r\n    transition: var(--va-slider-track-transition);\r\n    opacity: var(--va-slider-track-opacity);\r\n\r\n    &--active {\r\n      transition: 0s;\r\n    }\r\n  }\r\n\r\n  &__track--selected {\r\n    opacity: 1;\r\n  }\r\n\r\n  &__handler {\r\n    position: var(--va-slider-handler-position);\r\n    width: var(--va-slider-handler-width);\r\n    height: var(--va-slider-handler-height);\r\n    background: var(--va-slider-handler-background);\r\n    border: var(--va-slider-handler-border);\r\n    border-radius: var(--va-slider-handler-border-radius);\r\n    outline: var(--va-slider-handler-outline);\r\n    left: var(--va-slider-handler-left);\r\n    transition: var(--va-slider-handler-transition);\r\n\r\n    &__dot--focus {\r\n      transform: var(--va-slider-dot-transform);\r\n      display: var(--va-slider-dot-display);\r\n      width: var(--va-slider-dot-width);\r\n      height: var(--va-slider-dot-height);\r\n      position: var(--va-slider-dot-position);\r\n      border-radius: var(--va-slider-dot-border-radius);\r\n      opacity: var(--va-slider-dot-opacity);\r\n      pointer-events: var(--va-slider-dot-pointer-events);\r\n    }\r\n\r\n    &__dot--value {\r\n      transform: var(--va-slider-dot-value-transform);\r\n      user-select: var(--va-slider-dot-value-user-select);\r\n      font-size: var(--va-slider-dot-value-font-size);\r\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\r\n      line-height: var(--va-slider-dot-value-line-height);\r\n      font-weight: var(--va-slider-dot-value-font-weight);\r\n      text-transform: var(--va-slider-dot-value-text-transform);\r\n    }\r\n  }\r\n\r\n  .va-input__label {\r\n    user-select: var(--va-slider-input-label-user-select);\r\n    font-size: var(--va-slider-input-label-font-size);\r\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\r\n    line-height: var(--va-slider-input-label-line-height);\r\n    font-weight: var(--va-slider-input-label-font-weight);\r\n    text-transform: var(--va-slider-input-label-text-transform);\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    user-select: var(--va-slider-input-label-inverse-user-select);\r\n    font-size: var(--va-slider-input-label-inverse-font-size);\r\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\r\n    line-height: var(--va-slider-input-label-inverse-line-height);\r\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\r\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\r\n  }\r\n\r\n  &--active {\r\n    .va-slider__container {\r\n      cursor: grabbing;\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    @include va-disabled;\r\n\r\n    .va-slider__container {\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  &--readonly {\r\n    .va-slider__container {\r\n      cursor: default;\r\n    }\r\n  }\r\n}\r\n\r\n.va-slider--horizontal {\r\n  .va-slider__input-wrapper {\r\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\r\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\r\n    max-width: var(--va-slider-horizontal-input-wrapper-max-width);\r\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\r\n    min-width: var(--va-slider-horizontal-input-wrapper-min-width);\r\n\r\n    &:last-of-type {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n\r\n  .va-slider {\r\n    &__container {\r\n      width: 100%;\r\n      height: 1.5rem;\r\n    }\r\n\r\n    &__track {\r\n      height: var(--va-slider-horizontal-track-height);\r\n      width: var(--va-slider-horizontal-track-width);\r\n    }\r\n\r\n    &__mark {\r\n      position: absolute;\r\n      width: 0.125rem;\r\n      height: 0.75rem;\r\n    }\r\n\r\n    &__handler {\r\n      transform: var(--va-slider-horizontal-handler-transform);\r\n\r\n      &--inactive {\r\n        transition: left 0.5s ease-out;\r\n      }\r\n\r\n      &__dot--value {\r\n        position: var(--va-slider-horizontal-dot-value-position);\r\n        top: var(--va-slider-horizontal-dot-value-top);\r\n        left: var(--va-slider-horizontal-dot-value-left);\r\n      }\r\n    }\r\n  }\r\n\r\n  .va-input__label {\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    margin-left: 1rem;\r\n  }\r\n}\r\n\r\n.va-slider--vertical {\r\n  height: var(--va-slider-vertical-height);\r\n  padding: var(--va-slider-vertical-padding);\r\n  flex-direction: var(--va-slider-vertical-flex-direction);\r\n  align-items: var(--va-slider-vertical-align-items);\r\n\r\n  .va-input__label {\r\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    left: var(--va-slider-vertical-label-inverse-left);\r\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\r\n  }\r\n\r\n  .va-slider {\r\n    &__input-wrapper {\r\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\r\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\r\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\r\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\r\n      position: var(--va-slider-vertical-input-wrapper-position);\r\n      display: var(--va-slider-vertical-input-wrapper-display);\r\n\r\n      &:last-of-type {\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n\r\n    &__container {\r\n      height: 100%;\r\n      width: 0.5rem;\r\n    }\r\n\r\n    &__track {\r\n      height: var(--va-slider-vertical-track-height);\r\n      width: var(--va-slider-vertical-track-width);\r\n      bottom: var(--va-slider-vertical-track-bottom);\r\n    }\r\n\r\n    &__mark {\r\n      position: absolute;\r\n      width: 0.75rem;\r\n      height: 0.125rem;\r\n      left: -2px;\r\n    }\r\n\r\n    &__handler {\r\n      transform: var(--va-slider-vertical-handler-transform);\r\n\r\n      &--inactive {\r\n        transition: bottom 0.5s ease-out;\r\n      }\r\n\r\n      &__dot--value {\r\n        position: var(--va-slider-vertical-dot-value-position);\r\n        top: var(--va-slider-vertical-dot-value-top);\r\n        left: var(--va-slider-vertical-dot-value-left);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-slider\"\r\n    :class=\"sliderClass\"\r\n  >\r\n    <div\r\n      class=\"va-slider__input-wrapper\"\r\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\r\n    >\r\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\r\n    </div>\r\n    <span\r\n      v-if=\"($slots.label || label) && !invertLabel\"\r\n      :style=\"labelStyles\"\r\n      class=\"va-input__label\"\r\n    >\r\n      <slot name=\"label\">\r\n        {{ label }}\r\n      </slot>\r\n    </span>\r\n    <span\r\n      v-if=\"vertical ? iconAppend : iconPrepend\"\r\n      class=\"va-input__label\"\r\n    >\r\n      <va-icon\r\n        :name=\"vertical ? iconAppend : iconPrepend\"\r\n        :color=\"colorComputed\"\r\n        :size=\"16\"\r\n      />\r\n    </span>\r\n    <div\r\n      class=\"va-slider__container\"\r\n      ref=\"sliderContainer\"\r\n      @mousedown=\"clickOnContainer\"\r\n      @mouseup=\"hasMouseDown = false\"\r\n    >\r\n      <div\r\n        class=\"va-slider__track\"\r\n        :style=\"trackStyles\"\r\n      />\r\n      <template v-if=\"pins\">\r\n        <div\r\n          v-for=\"(pin, key) in pinsCol\"\r\n          :key=\"key\"\r\n          class=\"va-slider__mark\"\r\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\r\n          :style=\"getPinStyles(pin)\"\r\n        />\r\n      </template>\r\n      <template v-if=\"isRange\">\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__track va-slider__track--selected\"\r\n          :class=\"{'va-slider__track--active': isFocused}\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, null)\"\r\n        />\r\n        <div\r\n          v-for=\"order in (this.vertical ? [1, 0] : [0, 1])\"\r\n          :key=\"'dot' + order\"\r\n          :ref=\"'dot' + order\"\r\n          class=\"va-slider__handler\"\r\n          :class=\"dotClass[order]\"\r\n          :style=\"dottedStyles[order]\"\r\n          @mousedown=\"(moveStart($event, order), setMouseDown($event, order + 1))\"\r\n          @touchstart=\"moveStart($event, order)\"\r\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\r\n          @blur=\"isFocused = false\"\r\n          :tabindex=\"(!disabled && !readonly) && 0\"\r\n        >\r\n          <div\r\n            v-if=\"isActiveDot(order)\"\r\n            :style=\"{ backgroundColor: colorComputed }\"\r\n            class=\"va-slider__handler__dot--focus\"\r\n          />\r\n          <div\r\n            v-if=\"trackLabelVisible\"\r\n            :style=\"labelStyles\"\r\n            class=\"va-slider__handler__dot--value\"\r\n          >\r\n            {{ val[order] }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-else>\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__track va-slider__track--selected\"\r\n          :class=\"{'va-slider__track--active': isFocused}\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, 0)\"\r\n        />\r\n        <div\r\n          ref=\"dot\"\r\n          class=\"va-slider__handler\"\r\n          :class=\"dotClass\"\r\n          :style=\"dottedStyles\"\r\n          @mousedown=\"(moveStart($event), setMouseDown($event))\"\r\n          @touchstart=\"(moveStart($event), setMouseDown($event))\"\r\n          @focus=\"isFocused = true\"\r\n          @blur=\"isFocused = false\"\r\n          :tabindex=\"(!this.disabled && !this.readonly) && 0\"\r\n        >\r\n          <div\r\n            v-if=\"isActiveDot(0)\"\r\n            class=\"va-slider__handler__dot--focus\"\r\n            :style=\"{ backgroundColor: colorComputed }\"\r\n          />\r\n          <div\r\n            v-if=\"trackLabelVisible\"\r\n            :style=\"labelStyles\"\r\n            class=\"va-slider__handler__dot--value\"\r\n          >\r\n            {{ trackLabel || val }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <span\r\n      v-if=\"vertical ? iconPrepend : iconAppend\"\r\n      class=\"va-input__label--inverse\"\r\n    >\r\n      <va-icon\r\n        :name=\"vertical ? iconPrepend : iconAppend\"\r\n        :color=\"colorComputed\"\r\n        :size=\"16\"\r\n      />\r\n    </span>\r\n    <span\r\n      v-if=\"($slots.label || label) && invertLabel\"\r\n      :style=\"labelStyles\"\r\n      class=\"va-input__label va-input__label--inverse\"\r\n    >\r\n      <slot name=\"label\">\r\n        {{ label }}\r\n      </slot>\r\n    </span>\r\n    <div\r\n      class=\"va-slider__input-wrapper\"\r\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\r\n    >\r\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, mixins, Vue, prop, setup } from 'vue-class-component'\r\n\r\nimport { Ref } from '../../utils/decorators'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { getHoverColor } from '../../services/color-config/color-functions'\r\nimport { validateSlider } from './validateSlider'\r\nimport VaIcon from '../va-icon'\r\n\r\nclass SliderProps {\r\n  range = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<number | number[]>({\r\n    type: [Number, Array],\r\n    default: () => [],\r\n  })\r\n  trackLabel = prop<string>({ type: String, default: '' })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  trackColor = prop<string>({ type: String, default: '' })\r\n  labelColor = prop<string>({ type: String, default: '' })\r\n  trackLabelVisible = prop<boolean>({ type: Boolean, default: false })\r\n  min = prop<number>({ type: Number, default: 0 })\r\n  max = prop<number>({ type: Number, default: 100 })\r\n  step = prop<number>({ type: Number, default: 1 })\r\n  label = prop<string>({ type: String, default: '' })\r\n  invertLabel = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  readonly = prop<boolean>({ type: Boolean, default: false })\r\n  pins = prop<boolean>({ type: Boolean, default: false })\r\n  iconPrepend = prop<string>({ type: String, default: '' })\r\n  iconAppend = prop<string>({ type: String, default: '' })\r\n  vertical = prop<boolean>({ type: Boolean, default: false })\r\n  showTrack = prop<boolean>({ type: Boolean, default: true })\r\n}\r\n\r\nconst SliderPropsMixin = Vue.with(SliderProps)\r\n\r\n@Options({\r\n  name: 'VaSlider',\r\n  components: { VaIcon },\r\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\r\n})\r\nexport default class VaSlider extends mixins(\r\n  ColorMixin,\r\n  SliderPropsMixin,\r\n) {\r\n  @Ref('dot') readonly dot!: HTMLElement\r\n  @Ref('dot0') readonly dot0!: HTMLElement\r\n  @Ref('dot1') readonly dot1!: HTMLElement\r\n  @Ref('sliderContainer') readonly sliderContainer!: HTMLElement\r\n\r\n  isFocused = false\r\n  flag = false\r\n  size = 0\r\n  currentValue = this.modelValue\r\n  currentSliderDotIndex = 0\r\n  isComponentExists = false\r\n  hasMouseDown = false\r\n\r\n  context = setup(() => {\r\n    watch([\r\n      () => this.val,\r\n      () => this.$props.step,\r\n      () => this.$props.min,\r\n      () => this.$props.max,\r\n    ], ([value, step, min, max]) => {\r\n      // @ts-ignore\r\n      validateSlider(value, step, min, max)\r\n    })\r\n\r\n    watch(() => this.hasMouseDown, (hasMouseDown) => {\r\n      if (hasMouseDown) {\r\n        document.documentElement.style.cursor = 'grabbing'\r\n      } else {\r\n        document.documentElement.style.cursor = ''\r\n      }\r\n    })\r\n\r\n    return {}\r\n  })\r\n\r\n  get pinPositionStyle (): 'bottom' | 'left' {\r\n    return this.vertical ? 'bottom' : 'left'\r\n  }\r\n\r\n  get trackSizeStyle (): 'height' | 'width' {\r\n    return this.vertical ? 'height' : 'width'\r\n  }\r\n\r\n  get moreToLess () {\r\n    // @ts-ignore\r\n    return this.val[1] - this.step < this.val[0]\r\n  }\r\n\r\n  get lessToMore () {\r\n    // @ts-ignore\r\n    return this.val[0] + this.step > this.val[1]\r\n  }\r\n\r\n  get sliderClass () {\r\n    return {\r\n      'va-slider--active': this.isFocused,\r\n      'va-slider--disabled': this.disabled,\r\n      'va-slider--readonly': this.readonly,\r\n      'va-slider--horizontal': !this.vertical,\r\n      'va-slider--vertical': this.vertical,\r\n    }\r\n  }\r\n\r\n  get dotClass () {\r\n    if (this.range) {\r\n      return [\r\n        { 'va-slider__handler--inactive': !this.isFocused },\r\n        { 'va-slider__handler--inactive': !this.isFocused },\r\n      ]\r\n    }\r\n\r\n    return {\r\n      'va-slider__handler--on-focus': !this.range && (this.flag || this.isFocused),\r\n      'va-slider__handler--inactive': !this.isFocused,\r\n    }\r\n  }\r\n\r\n  get labelStyles () {\r\n    return {\r\n      color: this.labelColor ? this.computeColor(this.labelColor) : this.colorComputed,\r\n    }\r\n  }\r\n\r\n  get trackStyles () {\r\n    return {\r\n      backgroundColor: this.trackColor\r\n        ? this.computeColor(this.trackColor)\r\n        : getHoverColor(this.colorComputed),\r\n    }\r\n  }\r\n\r\n  get processedStyles () {\r\n    const validatedValue = this.limitValue(this.modelValue)\r\n\r\n    if (this.range) {\r\n      const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n      const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.pinPositionStyle]: `${val0}%`,\r\n        [this.trackSizeStyle]: `${val1 - val0}%`,\r\n        backgroundColor: this.colorComputed,\r\n        visibility: this.showTrack ? 'visible' : 'hidden',\r\n      }\r\n    } else {\r\n      const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.trackSizeStyle]: `${val}%`,\r\n        backgroundColor: this.colorComputed,\r\n        visibility: this.showTrack ? 'visible' : 'hidden',\r\n      }\r\n    }\r\n  }\r\n\r\n  get dottedStyles () {\r\n    const validatedValue = this.limitValue(this.modelValue)\r\n\r\n    if (this.range) {\r\n      const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n      const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n      return [\r\n        {\r\n          [this.pinPositionStyle]: `${val0}%`,\r\n          backgroundColor: this.isActiveDot(0) ? this.colorComputed : '#ffffff',\r\n          borderColor: this.colorComputed,\r\n        },\r\n        {\r\n          [this.pinPositionStyle]: `${val1}%`,\r\n          backgroundColor: this.isActiveDot(1) ? this.colorComputed : '#ffffff',\r\n          borderColor: this.colorComputed,\r\n        },\r\n      ]\r\n    } else {\r\n      const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n      return {\r\n        [this.pinPositionStyle]: `${val}%`,\r\n        backgroundColor: this.isActiveDot(0) ? this.colorComputed : '#ffffff',\r\n        borderColor: this.colorComputed,\r\n      }\r\n    }\r\n  }\r\n\r\n  get val ():any {\r\n    return this.$props.modelValue\r\n  }\r\n\r\n  set val (val) {\r\n    if (!this.range) {\r\n      val = this.limitValue(val)\r\n    }\r\n    if (!this.flag) {\r\n      this.$emit('change', val)\r\n    }\r\n    this.$emit('update:modelValue', val)\r\n  }\r\n\r\n  get total () {\r\n    return (this.max - this.min) / this.step\r\n  }\r\n\r\n  get gap () {\r\n    return this.size / this.total\r\n  }\r\n\r\n  get multiple () {\r\n    const decimals = `${this.step}`.split('.')[1]\r\n    return decimals ? Math.pow(10, decimals.length) : 1\r\n  }\r\n\r\n  get interval () {\r\n    // @ts-ignore\r\n    return this.modelValue[1] - this.modelValue[0]\r\n  }\r\n\r\n  get pinsCol () {\r\n    return (this.max / this.step) - 1\r\n  }\r\n\r\n  get position (): any {\r\n    // @ts-ignore\r\n    return this.isRange ? [(this.modelValue[0] - this.min) / this.step * this.gap, (this.modelValue[1] - this.min) / this.step * this.gap] : ((this.modelValue - this.min) / this.step * this.gap)\r\n  }\r\n\r\n  get limit () {\r\n    return [0, this.size]\r\n  }\r\n\r\n  get valueLimit () {\r\n    return [this.min, this.max]\r\n  }\r\n\r\n  get isRange () {\r\n    return Array.isArray(this.modelValue)\r\n  }\r\n\r\n  get propsForValidation () {\r\n    return {\r\n      value: this.val,\r\n      step: this.step,\r\n      min: this.min,\r\n      max: this.max,\r\n    }\r\n  }\r\n\r\n  bindEvents () {\r\n    document.addEventListener('mousemove', this.moving)\r\n    document.addEventListener('touchmove', this.moving)\r\n    document.addEventListener('mouseup', this.moveEnd)\r\n    document.addEventListener('mouseleave', this.moveEnd)\r\n    document.addEventListener('touchcancel', this.moveEnd)\r\n    document.addEventListener('touchend', this.moveEnd)\r\n    document.addEventListener('keydown', this.moveWithKeys)\r\n  }\r\n\r\n  unbindEvents () {\r\n    document.removeEventListener('mousemove', this.moving)\r\n    document.removeEventListener('touchmove', this.moving)\r\n    document.removeEventListener('mouseup', this.moveEnd)\r\n    document.removeEventListener('mouseleave', this.moveEnd)\r\n    document.removeEventListener('touchcancel', this.moveEnd)\r\n    document.removeEventListener('touchend', this.moveEnd)\r\n    document.removeEventListener('keydown', this.moveWithKeys)\r\n  }\r\n\r\n  isActiveDot (index: number) {\r\n    if ((!this.isFocused && !this.flag) || this.disabled || this.readonly) {\r\n      return false\r\n    }\r\n\r\n    return this.range ? this.currentSliderDotIndex === index : this.currentSliderDotIndex === 0\r\n  }\r\n\r\n  setMouseDown (e: Event, index: number = this.currentSliderDotIndex) {\r\n    if (!this.readonly && !this.disabled) {\r\n      this.hasMouseDown = Boolean(index) || true\r\n    }\r\n  }\r\n\r\n  moveStart (e: Event, index: number = this.currentSliderDotIndex) {\r\n    if (!index) {\r\n      if (!this.range) {\r\n        index = 0\r\n      } else {\r\n        const pos = this.getPos(e)\r\n        index = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n      }\r\n    }\r\n\r\n    if (this.isRange) {\r\n      this.currentSliderDotIndex = index\r\n    }\r\n\r\n    this.flag = true\r\n    this.$emit('drag-start')\r\n  }\r\n\r\n  moving (e: any) {\r\n    if (!this.hasMouseDown) {\r\n      return\r\n    }\r\n    if (!this.disabled && !this.readonly) {\r\n      if (!this.flag) {\r\n        return false\r\n      }\r\n\r\n      if (e.type === 'touchmove') {\r\n        this.setValueOnPos(this.getPos(e.touches[0]))\r\n      } else {\r\n        e.preventDefault()\r\n        this.setValueOnPos(this.getPos(e))\r\n      }\r\n    }\r\n  }\r\n\r\n  moveEnd () {\r\n    if (!this.disabled && !this.readonly) {\r\n      if (this.flag) {\r\n        this.$emit('drag-end')\r\n        // @ts-ignore\r\n        this.$emit('change', this.range ? Array.from(this.modelValue) : this.modelValue)\r\n      } else {\r\n        return false\r\n      }\r\n      this.flag = false\r\n      this.hasMouseDown = false\r\n    }\r\n  }\r\n\r\n  moveWithKeys (event: any) {\r\n    // don't do anything if a dot isn't focused or if the slider's disabled or readonly\r\n    // @ts-ignore\r\n    if (![this.dot0, this.dot1, this.dot].includes(document.activeElement as any)) {\r\n      return\r\n    }\r\n    if (this.disabled || this.readonly) {\r\n      return\r\n    }\r\n\r\n    /*\r\n      where: where to move\r\n        0 - to left\r\n        1 - to right\r\n\r\n      which: which dot to move (only makes sense when isRange is true)\r\n        0 - left dot\r\n        1 - right dot\r\n      */\r\n    const moveDot = (isRange: boolean, where: number, which: number) => {\r\n      if (isRange) {\r\n        // @ts-ignore\r\n        if (!this.pins) {\r\n          return this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n        }\r\n\r\n        // how many value units one pin occupies\r\n        const onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n        // how many full pins are to the left of the dot now\r\n        // @ts-ignore\r\n        const fullPinsNow = this.val[which] / onePinInterval | 0\r\n        // the value of the nearest pin\r\n        let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n        // @ts-ignore\r\n        if (this.val[which] !== nearestPinVal) { // if the dot's not pinned already\r\n          nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n          // @ts-ignore\r\n          this.val.splice(which, 1, nearestPinVal)\r\n        } else {\r\n          // @ts-ignore\r\n          this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n        }\r\n      } else {\r\n        if (!this.pins) {\r\n          // @ts-ignore\r\n          this.val += where ? this.step : -this.step\r\n          return\r\n        }\r\n\r\n        // how many value units one pin occupies\r\n        const onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n        // how many full pins are to the left of the dot now\r\n        // @ts-ignore\r\n        const fullPinsNow = this.val / onePinInterval | 0\r\n        // the value of the nearest pin\r\n        let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n        if (this.val !== nearestPinVal) { // if the dot's not pinned already\r\n          nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n          this.val = nearestPinVal\r\n        } else {\r\n          this.val += where ? this.step : -this.step\r\n        }\r\n      }\r\n    }\r\n\r\n    const arrowKeyCodes = [37, 38, 39, 40] // LEFT, UP, RIGHT, DOWN\r\n    const [CODE_LEFT, CODE_UP, CODE_RIGHT, CODE_DOWN] = arrowKeyCodes\r\n    // prevent page scroll\r\n    if (arrowKeyCodes.indexOf(event.keyCode) !== -1) {\r\n      event.preventDefault()\r\n    }\r\n\r\n    if (this.range) {\r\n      const isVerticalDot0More = (event: any) =>\r\n        this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_UP\r\n      const isVerticalDot0Less = (event: any) => this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_DOWN\r\n      const isVerticalDot1More = (event: any) => this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_UP\r\n      const isVerticalDot1Less = (event: any) => this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_DOWN\r\n      const isHorizontalDot0Less = (event: any) =>\r\n        !this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_LEFT\r\n      const isHorizontalDot0More = (event: any) =>\r\n        !this.vertical && this.dot0 === document.activeElement && event.keyCode === CODE_RIGHT\r\n      const isHorizontalDot1Less = (event: any) =>\r\n        !this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_LEFT\r\n      const isHorizontalDot1More = (event: any) =>\r\n        !this.vertical && this.dot1 === document.activeElement && event.keyCode === CODE_RIGHT\r\n\r\n      switch (true) {\r\n        // @ts-ignore\r\n      case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && this.moreToLess && this.val[0] !== this.min:\r\n          // @ts-ignore\r\n        this.dot0.focus()\r\n        moveDot(true, 0, 0)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && this.lessToMore && this.val[1] !== this.max:\r\n          // @ts-ignore\r\n        this.dot0.focus()\r\n        moveDot(true, 1, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && this.val[0] !== this.min:\r\n        moveDot(true, 0, 0)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && this.val[1] !== this.max:\r\n        moveDot(true, 1, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && this.val[1] !== this.min:\r\n        moveDot(true, 0, 1)\r\n        break\r\n        // @ts-ignore\r\n      case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && this.val[0] !== this.max:\r\n        moveDot(true, 1, 0)\r\n        break\r\n      default:\r\n        break\r\n      }\r\n    } else {\r\n      if (this.vertical) {\r\n        if (event.keyCode === CODE_DOWN) {\r\n          moveDot(false, 0, 0)\r\n        }\r\n        if (event.keyCode === CODE_UP) {\r\n          moveDot(false, 1, 0)\r\n        }\r\n      } else {\r\n        if (event.keyCode === CODE_LEFT) {\r\n          moveDot(false, 0, 0)\r\n        }\r\n        if (event.keyCode === CODE_RIGHT) {\r\n          moveDot(false, 1, 0)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // wrapClick (e) {\r\n  //   if (!this.disabled && !this.readonly && !this.flag) {\r\n  //     const pos = this.getPos(e)\r\n  //     if (this.isRange) {\r\n  //       this.currentSliderDotIndex = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n  //     }\r\n  //     this.setValueOnPos(pos)\r\n  //     if (this.pins) {\r\n  //       if (this.isRange) {\r\n  //         if (this.currentValue[0] % this.step !== 0) {\r\n  //           this.currentValue[0] = this.normalizeValue(this.currentValue[0])\r\n  //           this.val = [this.currentValue[0], this.val[1]]\r\n  //         }\r\n  //         if (this.currentValue[1] % this.step !== 0) {\r\n  //           this.currentValue[1] = this.normalizeValue(this.currentValue[1])\r\n  //           this.val = [this.val[0], this.currentValue[1]]\r\n  //         }\r\n  //       } else {\r\n  //         this.currentValue = this.normalizeValue(this.currentValue)\r\n  //         this.val = this.currentValue\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // },\r\n\r\n  checkActivePin (pin: number) {\r\n    if (this.isRange) {\r\n      // @ts-ignore\r\n      return pin * this.step > this.val[0] && pin * this.step < this.val[1]\r\n    } else {\r\n      // @ts-ignore\r\n      return pin * this.step < this.val\r\n    }\r\n  }\r\n\r\n  getPinStyles (pin: number) {\r\n    return {\r\n      backgroundColor: this.checkActivePin(pin) ? this.colorComputed : getHoverColor(this.colorComputed),\r\n      [this.pinPositionStyle]: `${pin * this.step}%`,\r\n      transition: this.hasMouseDown ? 'none' : 'background-color .3s ease-out .1s',\r\n    }\r\n  }\r\n\r\n  getPos (e: any) {\r\n    this.getStaticData()\r\n    // @ts-ignore\r\n    return this.vertical ? this.offset - e.clientY : e.clientX - this.offset\r\n  }\r\n\r\n  getStaticData () {\r\n    if (this.sliderContainer) {\r\n      this.size = this.sliderContainer[this.vertical ? 'offsetHeight' : 'offsetWidth']\r\n      // @ts-ignore\r\n      this.offset = (this.sliderContainer.getBoundingClientRect() as Record<string, any>)[this.pinPositionStyle]\r\n    }\r\n  }\r\n\r\n  getValueByIndex (index: number) {\r\n    return ((this.step * this.multiple) * index + (this.min * this.multiple)) / this.multiple\r\n  }\r\n\r\n  setCurrentValue (val: any) {\r\n    const slider = this.currentSliderDotIndex\r\n    if (this.isRange) {\r\n      // @ts-ignore\r\n      if (this.isDiff(this.currentValue[slider], val)) {\r\n        // @ts-ignore\r\n        this.currentValue.splice(slider, 1, val)\r\n        if (slider === 0) {\r\n          // @ts-ignore\r\n          this.val = [this.currentValue.splice(slider, 1, val)[0], this.modelValue[1]]\r\n          this.currentValue = [...this.val]\r\n        } else {\r\n          // @ts-ignore\r\n          this.val = [this.modelValue[0], this.currentValue.splice(slider, 1, val)[0]]\r\n          this.currentValue = [...this.val]\r\n        }\r\n      }\r\n    } else {\r\n      if (val < this.min || val > this.max) {\r\n        return false\r\n      }\r\n      if (this.isDiff(this.currentValue, val)) {\r\n        this.currentValue = val\r\n        this.val = val\r\n      }\r\n    }\r\n  }\r\n\r\n  setValueOnPos (pixelPosition: any) {\r\n    const range = this.limit\r\n    const valueRange = this.valueLimit\r\n\r\n    // this.setTransform()\r\n\r\n    // set focus on current thumb\r\n    const dotToFocus = this.isRange ? (this.currentSliderDotIndex ? this.dot1 : this.dot0) : this.dot\r\n    dotToFocus.focus()\r\n\r\n    if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\r\n      if (this.currentSliderDotIndex) {\r\n        if (pixelPosition <= this.position[0]) {\r\n          // @ts-ignore\r\n          this.val[1] = this.val[0]\r\n          this.currentSliderDotIndex = 0\r\n        }\r\n        const v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n        this.setCurrentValue(v)\r\n      } else {\r\n        if (pixelPosition >= this.position[1]) {\r\n          // @ts-ignore\r\n          this.val[0] = this.val[1]\r\n          this.currentSliderDotIndex = 1\r\n        }\r\n        const v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n        this.setCurrentValue(v)\r\n      }\r\n    } else if (pixelPosition < range[0]) {\r\n      this.setCurrentValue(valueRange[0])\r\n    } else {\r\n      this.setCurrentValue(valueRange[1])\r\n    }\r\n  }\r\n\r\n  // setTransform () {\r\n  //   if (this.isRange) {\r\n  //     const slider = this.currentSliderDotIndex\r\n  //     const difference = 100 / (this.max - this.min)\r\n  //     const val0 = (this.value[0] - this.min) * difference\r\n  //     const processPosition = `${val0}%`\r\n\r\n  //     if (slider === 0) {\r\n  //       this.dot0.style[this.pinPositionStyle] = `calc(${processPosition} - 8px)`\r\n  //       this.dot0.focus()\r\n  //     } else {\r\n  //       this.dot1.style[this.pinPositionStyle] = `calc(${processPosition} - 8px)`\r\n  //       this.dot1.focus()\r\n  //     }\r\n  //   } else {\r\n  //     const val = ((this.value - this.min) / (this.max - this.min)) * 100\r\n\r\n  //     this.dot.style[this.pinPositionStyle] = `calc(${val} - 8px)`\r\n  //     this.dot.focus()\r\n  //   }\r\n  // }\r\n\r\n  // normalizeValue (value: any) {\r\n  //   const currentRest = value % this.step\r\n  //   if ((currentRest / this.step) >= 0.5) {\r\n  //     value = value + (this.step - currentRest)\r\n  //   } else {\r\n  //     value = value - currentRest\r\n  //   }\r\n  //   return value\r\n  // }\r\n\r\n  limitValue (val: any) {\r\n    const inRange = (v: any) => {\r\n      if (v < this.min) {\r\n        return this.min\r\n      } else if (v > this.max) {\r\n        return this.max\r\n      }\r\n      return v\r\n    }\r\n\r\n    if (this.isRange) {\r\n      if (val[0] >= val[1] && this.currentSliderDotIndex === 0) {\r\n        const v = inRange(val[1])\r\n        return [v, v]\r\n      }\r\n      if (val[0] >= val[1] && this.currentSliderDotIndex === 1) {\r\n        const v = inRange(val[0])\r\n        return [v, v]\r\n      }\r\n      return val.map((v: any) => inRange(v))\r\n    } else {\r\n      return inRange(val)\r\n    }\r\n  }\r\n\r\n  isDiff (a: any, b: any) {\r\n    return JSON.stringify(a) !== JSON.stringify(b)\r\n  }\r\n\r\n  clickOnContainer (e: any) {\r\n    if (this.disabled || this.readonly) {\r\n      return\r\n    }\r\n    const pos = this.getPos(e)\r\n    if (this.isRange) {\r\n      this.currentSliderDotIndex = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n    }\r\n    this.setMouseDown(e, this.currentSliderDotIndex)\r\n    this.setValueOnPos(pos)\r\n    this.moveStart(e, this.currentSliderDotIndex)\r\n  }\r\n\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      if (validateSlider(this.modelValue, this.step, this.min, this.max)) {\r\n        this.getStaticData()\r\n        this.bindEvents()\r\n      }\r\n    })\r\n  }\r\n\r\n  beforeUnmount () {\r\n    this.unbindEvents()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-slider {\r\n  display: var(--va-slider-display);\r\n  align-items: var(--va-slider-align-items);\r\n\r\n  &__input-wrapper {\r\n    position: var(--va-slider-input-wrapper-position);\r\n    display: var(--va-slider-input-wrapper-display);\r\n  }\r\n\r\n  &__container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: grab;\r\n  }\r\n\r\n  &__track {\r\n    position: var(--va-slider-track-position);\r\n    border-radius: var(--va-slider-track-border-radius);\r\n    transition: var(--va-slider-track-transition);\r\n    opacity: var(--va-slider-track-opacity);\r\n\r\n    &--active {\r\n      transition: 0s;\r\n    }\r\n  }\r\n\r\n  &__track--selected {\r\n    opacity: 1;\r\n  }\r\n\r\n  &__handler {\r\n    position: var(--va-slider-handler-position);\r\n    width: var(--va-slider-handler-width);\r\n    height: var(--va-slider-handler-height);\r\n    background: var(--va-slider-handler-background);\r\n    border: var(--va-slider-handler-border);\r\n    border-radius: var(--va-slider-handler-border-radius);\r\n    outline: var(--va-slider-handler-outline);\r\n    left: var(--va-slider-handler-left);\r\n    transition: var(--va-slider-handler-transition);\r\n\r\n    &__dot--focus {\r\n      transform: var(--va-slider-dot-transform);\r\n      display: var(--va-slider-dot-display);\r\n      width: var(--va-slider-dot-width);\r\n      height: var(--va-slider-dot-height);\r\n      position: var(--va-slider-dot-position);\r\n      border-radius: var(--va-slider-dot-border-radius);\r\n      opacity: var(--va-slider-dot-opacity);\r\n      pointer-events: var(--va-slider-dot-pointer-events);\r\n    }\r\n\r\n    &__dot--value {\r\n      transform: var(--va-slider-dot-value-transform);\r\n      user-select: var(--va-slider-dot-value-user-select);\r\n      font-size: var(--va-slider-dot-value-font-size);\r\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\r\n      line-height: var(--va-slider-dot-value-line-height);\r\n      font-weight: var(--va-slider-dot-value-font-weight);\r\n      text-transform: var(--va-slider-dot-value-text-transform);\r\n    }\r\n  }\r\n\r\n  .va-input__label {\r\n    user-select: var(--va-slider-input-label-user-select);\r\n    font-size: var(--va-slider-input-label-font-size);\r\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\r\n    line-height: var(--va-slider-input-label-line-height);\r\n    font-weight: var(--va-slider-input-label-font-weight);\r\n    text-transform: var(--va-slider-input-label-text-transform);\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    user-select: var(--va-slider-input-label-inverse-user-select);\r\n    font-size: var(--va-slider-input-label-inverse-font-size);\r\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\r\n    line-height: var(--va-slider-input-label-inverse-line-height);\r\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\r\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\r\n  }\r\n\r\n  &--active {\r\n    .va-slider__container {\r\n      cursor: grabbing;\r\n    }\r\n  }\r\n\r\n  &--disabled {\r\n    @include va-disabled;\r\n\r\n    .va-slider__container {\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  &--readonly {\r\n    .va-slider__container {\r\n      cursor: default;\r\n    }\r\n  }\r\n}\r\n\r\n.va-slider--horizontal {\r\n  .va-slider__input-wrapper {\r\n    flex-basis: var(--va-slider-horizontal-input-wrapper-flex-basis);\r\n    flex-grow: var(--va-slider-horizontal-input-wrapper-flex-grow);\r\n    max-width: var(--va-slider-horizontal-input-wrapper-max-width);\r\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\r\n    min-width: var(--va-slider-horizontal-input-wrapper-min-width);\r\n\r\n    &:last-of-type {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n\r\n  .va-slider {\r\n    &__container {\r\n      width: 100%;\r\n      height: 1.5rem;\r\n    }\r\n\r\n    &__track {\r\n      height: var(--va-slider-horizontal-track-height);\r\n      width: var(--va-slider-horizontal-track-width);\r\n    }\r\n\r\n    &__mark {\r\n      position: absolute;\r\n      width: 0.125rem;\r\n      height: 0.75rem;\r\n    }\r\n\r\n    &__handler {\r\n      transform: var(--va-slider-horizontal-handler-transform);\r\n\r\n      &--inactive {\r\n        transition: left 0.5s ease-out;\r\n      }\r\n\r\n      &__dot--value {\r\n        position: var(--va-slider-horizontal-dot-value-position);\r\n        top: var(--va-slider-horizontal-dot-value-top);\r\n        left: var(--va-slider-horizontal-dot-value-left);\r\n      }\r\n    }\r\n  }\r\n\r\n  .va-input__label {\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    margin-left: 1rem;\r\n  }\r\n}\r\n\r\n.va-slider--vertical {\r\n  height: var(--va-slider-vertical-height);\r\n  padding: var(--va-slider-vertical-padding);\r\n  flex-direction: var(--va-slider-vertical-flex-direction);\r\n  align-items: var(--va-slider-vertical-align-items);\r\n\r\n  .va-input__label {\r\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\r\n  }\r\n\r\n  .va-input__label--inverse {\r\n    left: var(--va-slider-vertical-label-inverse-left);\r\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\r\n  }\r\n\r\n  .va-slider {\r\n    &__input-wrapper {\r\n      flex-basis: var(--va-slider-vertical-input-wrapper-flex-basis);\r\n      flex-grow: var(--va-slider-vertical-input-wrapper-flex-grow);\r\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\r\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\r\n      position: var(--va-slider-vertical-input-wrapper-position);\r\n      display: var(--va-slider-vertical-input-wrapper-display);\r\n\r\n      &:last-of-type {\r\n        margin-top: 1rem;\r\n      }\r\n    }\r\n\r\n    &__container {\r\n      height: 100%;\r\n      width: 0.5rem;\r\n    }\r\n\r\n    &__track {\r\n      height: var(--va-slider-vertical-track-height);\r\n      width: var(--va-slider-vertical-track-width);\r\n      bottom: var(--va-slider-vertical-track-bottom);\r\n    }\r\n\r\n    &__mark {\r\n      position: absolute;\r\n      width: 0.75rem;\r\n      height: 0.125rem;\r\n      left: -2px;\r\n    }\r\n\r\n    &__handler {\r\n      transform: var(--va-slider-vertical-handler-transform);\r\n\r\n      &--inactive {\r\n        transition: bottom 0.5s ease-out;\r\n      }\r\n\r\n      &__dot--value {\r\n        position: var(--va-slider-vertical-dot-value-position);\r\n        top: var(--va-slider-vertical-dot-value-top);\r\n        left: var(--va-slider-vertical-dot-value-left);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaSlider from './VaSlider.vue'\r\n\r\nexport default withConfigTransport(VaSlider)\r\n"],"names":["validateSlider","value","step","min","max","warn","inRange","v","Array","isArray","map","SliderPropsMixin","Vue","with","SliderProps","constructor","this","prop","type","Boolean","default","Number","String","VaSlider","mixins","ColorMixin","modelValue","setup","watch","val","$props","hasMouseDown","document","documentElement","style","cursor","pinPositionStyle","vertical","trackSizeStyle","moreToLess","lessToMore","sliderClass","isFocused","disabled","readonly","dotClass","range","flag","labelStyles","color","labelColor","computeColor","colorComputed","trackStyles","backgroundColor","trackColor","getHoverColor","processedStyles","validatedValue","limitValue","val0","val1","visibility","showTrack","dottedStyles","isActiveDot","borderColor","$emit","total","gap","size","multiple","decimals","split","Math","pow","length","interval","pinsCol","position","isRange","limit","valueLimit","propsForValidation","bindEvents","addEventListener","moving","moveEnd","moveWithKeys","unbindEvents","removeEventListener","index","currentSliderDotIndex","setMouseDown","e","moveStart","getPos","setValueOnPos","touches","preventDefault","from","event","dot0","dot1","dot","includes","activeElement","moveDot","where","which","pins","splice","onePinInterval","nearestPinVal","arrowKeyCodes","CODE_LEFT","CODE_UP","CODE_RIGHT","CODE_DOWN","indexOf","keyCode","isVerticalDot0More","isVerticalDot0Less","isVerticalDot1More","isVerticalDot1Less","isHorizontalDot0Less","isHorizontalDot0More","isHorizontalDot1Less","isHorizontalDot1More","focus","checkActivePin","pin","getPinStyles","transition","getStaticData","offset","clientY","clientX","sliderContainer","getBoundingClientRect","getValueByIndex","setCurrentValue","slider","isDiff","currentValue","pixelPosition","valueRange","round","a","b","JSON","stringify","clickOnContainer","pos","mounted","$nextTick","beforeUnmount","__decorate","Ref","HTMLElement","Options","name","components","VaIcon","emits","class","_createElementBlock","_ctx","append","prepend","_hoisted_1","_renderSlot","label","_hoisted_2","_createVNode","_createElementVNode","ref","onMousedown","onMouseup","key","$event","order","onTouchstart","onFocus","onBlur","tabindex","_hoisted_5","_hoisted_6","withConfigTransport"],"mappings":"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"}