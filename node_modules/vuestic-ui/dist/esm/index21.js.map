{"version":3,"file":"index21.js","sources":["../../src/components/va-divider/VaDivider.vue","../../src/components/va-divider/VaDivider.vue?vue&type=template&id=c088ae74&lang.js","../../src/components/va-divider/index.ts"],"sourcesContent":["<template>\r\n  <div\r\n    :class=\"classComputed\"\r\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\r\n  >\r\n    <div\r\n      v-if=\"hasSlot && !vertical\"\r\n      :class=\"slotClassComputed\"\r\n      role=\"separator\"\r\n    >\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nconst prefixClass = 'va-divider'\r\n\r\nclass DividerProps {\r\n  vertical = prop<boolean>({ type: Boolean, default: false })\r\n  dashed = prop<boolean>({ type: Boolean, default: false })\r\n  inset = prop<boolean>({ type: Boolean, default: false })\r\n  orientation = prop<string>({\r\n    type: String,\r\n    default: 'center',\r\n    validator (value: string) {\r\n      return ['left', 'right', 'center'].includes(value)\r\n    },\r\n  })\r\n}\r\n\r\nconst DividerPropsMixin = Vue.with(DividerProps)\r\n\r\n@Options({\r\n  name: 'VaDivider',\r\n})\r\nexport default class VaDivider extends mixins(\r\n  DividerPropsMixin,\r\n) {\r\n  get hasSlot () {\r\n    return !!this.$slots.default\r\n  }\r\n\r\n  get classComputed () {\r\n    return [\r\n      `${prefixClass}`,\r\n      {\r\n        [`${prefixClass}--vertical`]: this.vertical,\r\n        [`${prefixClass}--inset`]: this.inset,\r\n        [`${prefixClass}--${this.orientation}`]: this.orientation && !this.vertical,\r\n        [`${prefixClass}--dashed`]: this.dashed,\r\n      },\r\n    ]\r\n  }\r\n\r\n  get slotClassComputed () {\r\n    return `${prefixClass}__text`\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-divider {\r\n  display: var(--va-divider-display);\r\n  margin: var(--va-divider-margin);\r\n\r\n  &--vertical {\r\n    margin: var(--va-divider-vertical-margin);\r\n    border-top: var(--va-divider-vertical-border-top);\r\n    border-right-width: var(--va-divider-vertical-border-right-width);\r\n    border-right-style: var(--va-divider-vertical-border-right-style);\r\n    border-right-color: var(--va-divider-vertical-border-right-color);\r\n    display: var(--va-divider-vertical-display);\r\n    width: var();\r\n\r\n    &.va-divider--dashed {\r\n      border-right-style: dashed;\r\n    }\r\n  }\r\n\r\n  &--inset {\r\n    margin: var(--va-divider-inset-margin);\r\n\r\n    &.va-divider--vertical {\r\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\r\n    }\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    border-top-width: var(--va-divider-line-width);\r\n    border-top-style: var(--va-divider-border-top-style);\r\n    border-top-color: var(--va-divider-border-top-color);\r\n  }\r\n\r\n  &--dashed {\r\n    &::before,\r\n    &::after {\r\n      border-top-style: var(--va-divider-dashed-border-top-style);\r\n    }\r\n  }\r\n\r\n  &--left {\r\n    &::before {\r\n      flex: 0 var(--va-divider-text-horizontal-offset);\r\n    }\r\n  }\r\n\r\n  &--right {\r\n    &::after {\r\n      flex: 0 var(--va-divider-text-horizontal-offset);\r\n    }\r\n  }\r\n\r\n  &__text {\r\n    font-size: var(--va-divider-text-font-size);\r\n    line-height: var(--va-divider-text-line-height);\r\n    height: var(--va-divider-text-height);\r\n    vertical-align: var(--va-divider-text-vertical-align);\r\n    transform: var(--va-divider-text-transform);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    :class=\"classComputed\"\r\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\r\n  >\r\n    <div\r\n      v-if=\"hasSlot && !vertical\"\r\n      :class=\"slotClassComputed\"\r\n      role=\"separator\"\r\n    >\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nconst prefixClass = 'va-divider'\r\n\r\nclass DividerProps {\r\n  vertical = prop<boolean>({ type: Boolean, default: false })\r\n  dashed = prop<boolean>({ type: Boolean, default: false })\r\n  inset = prop<boolean>({ type: Boolean, default: false })\r\n  orientation = prop<string>({\r\n    type: String,\r\n    default: 'center',\r\n    validator (value: string) {\r\n      return ['left', 'right', 'center'].includes(value)\r\n    },\r\n  })\r\n}\r\n\r\nconst DividerPropsMixin = Vue.with(DividerProps)\r\n\r\n@Options({\r\n  name: 'VaDivider',\r\n})\r\nexport default class VaDivider extends mixins(\r\n  DividerPropsMixin,\r\n) {\r\n  get hasSlot () {\r\n    return !!this.$slots.default\r\n  }\r\n\r\n  get classComputed () {\r\n    return [\r\n      `${prefixClass}`,\r\n      {\r\n        [`${prefixClass}--vertical`]: this.vertical,\r\n        [`${prefixClass}--inset`]: this.inset,\r\n        [`${prefixClass}--${this.orientation}`]: this.orientation && !this.vertical,\r\n        [`${prefixClass}--dashed`]: this.dashed,\r\n      },\r\n    ]\r\n  }\r\n\r\n  get slotClassComputed () {\r\n    return `${prefixClass}__text`\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-divider {\r\n  display: var(--va-divider-display);\r\n  margin: var(--va-divider-margin);\r\n\r\n  &--vertical {\r\n    margin: var(--va-divider-vertical-margin);\r\n    border-top: var(--va-divider-vertical-border-top);\r\n    border-right-width: var(--va-divider-vertical-border-right-width);\r\n    border-right-style: var(--va-divider-vertical-border-right-style);\r\n    border-right-color: var(--va-divider-vertical-border-right-color);\r\n    display: var(--va-divider-vertical-display);\r\n    width: var();\r\n\r\n    &.va-divider--dashed {\r\n      border-right-style: dashed;\r\n    }\r\n  }\r\n\r\n  &--inset {\r\n    margin: var(--va-divider-inset-margin);\r\n\r\n    &.va-divider--vertical {\r\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\r\n    }\r\n  }\r\n\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    flex: 1;\r\n    border-top-width: var(--va-divider-line-width);\r\n    border-top-style: var(--va-divider-border-top-style);\r\n    border-top-color: var(--va-divider-border-top-color);\r\n  }\r\n\r\n  &--dashed {\r\n    &::before,\r\n    &::after {\r\n      border-top-style: var(--va-divider-dashed-border-top-style);\r\n    }\r\n  }\r\n\r\n  &--left {\r\n    &::before {\r\n      flex: 0 var(--va-divider-text-horizontal-offset);\r\n    }\r\n  }\r\n\r\n  &--right {\r\n    &::after {\r\n      flex: 0 var(--va-divider-text-horizontal-offset);\r\n    }\r\n  }\r\n\r\n  &__text {\r\n    font-size: var(--va-divider-text-font-size);\r\n    line-height: var(--va-divider-text-line-height);\r\n    height: var(--va-divider-text-height);\r\n    vertical-align: var(--va-divider-text-vertical-align);\r\n    transform: var(--va-divider-text-transform);\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaDivider from './VaDivider.vue'\r\n\r\nexport default withConfigTransport(VaDivider)\r\n"],"names":["DividerPropsMixin","Vue","with","DividerProps","constructor","this","prop","type","Boolean","default","String","validator","value","includes","VaDivider","mixins","hasSlot","$slots","classComputed","vertical","inset","orientation","dashed","slotClassComputed","Options","name","_createElementBlock","class","_ctx","role","_renderSlot","withConfigTransport"],"mappings":"mWAiCA,MAAMA,EAAoBC,EAAIC,KAb9B,MAAMC,aAANC,cACEC,cAAWC,EAAc,CAAEC,KAAMC,QAASC,SAAS,IACnDJ,YAASC,EAAc,CAAEC,KAAMC,QAASC,SAAS,IACjDJ,WAAQC,EAAc,CAAEC,KAAMC,QAASC,SAAS,IAChDJ,iBAAcC,EAAa,CACzBC,KAAMG,OACND,QAAS,SACTE,UAAWC,GACF,CAAC,OAAQ,QAAS,UAAUC,SAASD,QAUlD,IAAqBE,EAArB,MAAqBA,kBAAkBC,EACrCf,IAEAgB,cACE,QAASX,KAAKY,OAAOR,QAGvBS,oBACE,MAAO,CACL,aACA,CACE,uBAA8Bb,KAAKc,SACnC,oBAA2Bd,KAAKe,MAChC,CAAC,eAAmBf,KAAKgB,eAAgBhB,KAAKgB,cAAgBhB,KAAKc,SACnE,qBAA4Bd,KAAKiB,SAKvCC,wBACE,MAAO,qBApBUT,KAHpBU,EAAQ,CACPC,KAAM,eAEaX,SAAAA,goICrCnBY,SACGC,QAAOC,iBACP,mBAAkBA,qCAGXA,YAAYA,gBADpBF,eAEGC,QAAOC,qBACRC,KAAK,cAELC,mGCPN,MAAeC,EAAoBjB"}