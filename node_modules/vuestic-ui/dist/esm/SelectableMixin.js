import{__decorate as e}from"tslib";import{V as t,m as i,O as a,p as s}from"./vue-class-component.esm-bundler.js";import{C as l}from"./ColorMixin.js";import{F as r}from"./index55.js";import{S as u}from"./StatefulMixin.js";import{L as h}from"./LoadingMixin.js";const o=t.with(class Props{constructor(){this.arrayValue=s({type:[String,Object],default:""}),this.label=s({type:String,default:""}),this.leftLabel=s({type:Boolean,default:!1}),this.trueValue=s({default:!0}),this.falseValue=s({default:!1}),this.indeterminate=s({type:Boolean,default:!1}),this.indeterminateValue=s({type:[Boolean,Array,String,Object],default:null})}});let n=class SelectableMixin extends(i(l,u,r,h,o)){created(){this.isSelectableComponent=!0,this.checkDuplicates()}get isChecked(){return this.modelIsArray?this.modelValue&&this.modelValue.includes(this.arrayValue):this.valueComputed===this.trueValue}get isIndeterminate(){return this.valueComputed===this.indeterminateValue}get modelIsArray(){return!!this.arrayValue}reset(){this.$emit("update:modelValue",!1)}checkDuplicates(){const e=[this.falseValue,this.trueValue];this.indeterminate&&e.push(this.indeterminateValue);if(new Set(e).size!==e.length)throw new Error("falseValue, trueValue, indeterminateValue props should have strictly different values, which is not the case.")}onFocus(e){this.$emit("focus",e)}onBlur(e){this.$refs.input!==e.target||this.isElementRelated(e.relatedTarget)||(this.ValidateMixin_onBlur(),this.$emit("blur",e))}isElementRelated(e){return[this.$refs.label,this.$refs.container].includes(e)}onWrapperClick(){this.toggleSelection()}toggleSelection(){this.readonly||this.disabled||this.loading||(this.modelIsArray?this.modelValue?this.modelValue.includes(this.arrayValue)?this.$emit("update:modelValue",this.modelValue.filter((e=>e!==this.arrayValue))):this.$emit("update:modelValue",this.modelValue.concat(this.arrayValue)):this.$emit("update:modelValue",[this.arrayValue]):this.indeterminate?this.isIndeterminate?this.valueComputed=this.trueValue:this.isChecked?this.valueComputed=this.falseValue:this.valueComputed=this.indeterminateValue:this.isChecked?this.valueComputed=this.falseValue:this.valueComputed=this.trueValue)}};n=e([a({emits:["update:modelValue","focus","blur"]})],n);export{n as S};
//# sourceMappingURL=SelectableMixin.js.map
