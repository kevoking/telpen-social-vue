import{s,g as o}from"./withConfigTransport.js";import{ColorTranslator as t}from"colortranslator";const colorToRgba=(s,o)=>new t(s).setA(o).RGBA,getTextColor=(s,o="inherit",r="#ffffff")=>{const{R:e,G:a,B:l}=new t(s);return Math.sqrt(e*e*.241+a*a*.691+l*l*.068)>130?o:r},getBoxShadowColor=s=>new t(s).setA(.4).RGBA,getHoverColor=s=>new t(s).setA(.2).RGBA,getFocusColor=s=>new t(s).setA(.3).RGBA,shiftHSLAColor=(s,o)=>{const r=new t(s);return o.h&&r.setH(r.H+o.h),o.s&&r.setS(r.S+o.s),o.l&&r.setL(r.L+o.l),o.a&&r.setA(r.A+o.a),r.HSLA},setHSLAColor=(s,o)=>{const r=new t(s);return void 0!==o.h&&r.setH(o.h),void 0!==o.s&&r.setS(o.s),void 0!==o.l&&r.setL(o.l),void 0!==o.a&&r.setA(o.a),r.HSLA},getGradientBackground=s=>`linear-gradient(to right, ${(s=>{const o=t.toHSLA(s,!1);if(o.s<10)return shiftHSLAColor(o,{h:2,s:5,l:10});if(o.s<30)return shiftHSLAColor(o,{s:-14,l:11});if(o.h>=0&&o.h<44||o.h>=285)return shiftHSLAColor(o,{h:11,s:27,l:8});if(o.h>=44&&o.h<85)return shiftHSLAColor(o,{h:3,l:9});if(o.h>=85&&o.h<165)return shiftHSLAColor(o,{h:16,l:14});if(o.h>=165&&o.h<285)return shiftHSLAColor(o,{h:-15,s:3,l:2});throw new Error("This method should handle all colors. But it didn't for some reason.")})(s)}, ${t.toHSLA(s)})`,setColors=o=>{s((s=>({...s,colors:{...s.colors,...o}})))},getColors=()=>o().colors||{},getColor=(s,o="#000000")=>{const t=getColors();return s||(s=o),t[s]?t[s]:/^#([\da-f]{3}){1,2}$|^#([\da-f]{4}){1,2}$|(rgb|hsl)a?\((\s*-?\d+%?\s*,){2}(\s*-?\d+%?\s*,?\s*\)?)(,\s*(0?\.\d+)?|1)?\)/.test(s.toLocaleLowerCase())?s:o},colorsToCSSVariable=(s,o="va")=>Object.keys(s).filter((o=>void 0!==s[o])).reduce(((t,r)=>(t[`--${o}-${r}`]=getColor(s[r]),t)),{}),useColors=()=>({setColors:setColors,getColors:getColors,getColor:getColor,getBoxShadowColor:getBoxShadowColor,getHoverColor:getHoverColor,getFocusColor:getFocusColor,getGradientBackground:getGradientBackground,getTextColor:getTextColor,shiftHSLAColor:shiftHSLAColor,setHSLAColor:setHSLAColor,colorsToCSSVariable:colorsToCSSVariable});export{getColors as a,getTextColor as b,getBoxShadowColor as c,getGradientBackground as d,shiftHSLAColor as e,getFocusColor as f,getColor as g,getHoverColor as h,colorToRgba as i,setColors as s,useColors as u};
//# sourceMappingURL=color-config.js.map
