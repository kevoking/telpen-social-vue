{"version":3,"file":"withConfigTransport.js","sources":["../../src/services/global-config/config-default/index.ts","../../src/services/icon-config/presets/fonts.ts","../../src/services/icon-config/presets/vuestic-aliases.ts","../../src/services/icon-config/icon-config-helpers.ts","../../src/services/global-config/global-config.ts","../../src/services/color-config/color-theme-presets.ts","../../src/services/utils.ts","../../src/services/config-transport/withConfigTransport.ts","../../src/services/config-transport/createConfigValueGetter.ts"],"sourcesContent":["import { ComponentConfig } from '../../component-config/component-config'\r\n\r\nexport const getComponentsDefaultConfig = (): ComponentConfig => {\r\n  // TODO: Should be hanled in size service\r\n  return {\r\n    VaIcon: {\r\n      sizesConfig: {\r\n        defaultSize: 24,\r\n        sizes: {\r\n          small: 16,\r\n          medium: 24,\r\n          large: 32,\r\n        },\r\n      },\r\n    },\r\n    VaRating: {\r\n      sizesConfig: {\r\n        defaultSize: 24,\r\n        sizes: {\r\n          small: 16,\r\n          medium: 24,\r\n          large: 32,\r\n        },\r\n      },\r\n    },\r\n  }\r\n}\r\n","import { IconConfig } from './../types'\r\n\r\nexport const VuesticIconFonts: IconConfig = [\r\n  {\r\n    name: '{icon}',\r\n    class: 'material-icons',\r\n    resolve: ({ icon }) => ({ content: icon }),\r\n  },\r\n]\r\n","import { IconConfiguration } from './../types'\r\n\r\nexport const VuesticIconAliases: IconConfiguration[] = [\r\n  {\r\n    name: 'arrow_back_ios',\r\n    to: 'arrow_back_ios',\r\n  },\r\n  {\r\n    name: 'arrow_forward_ios',\r\n    to: 'arrow_forward_ios',\r\n  },\r\n  {\r\n    name: 'first_page',\r\n    to: 'first_page',\r\n  },\r\n  {\r\n    name: 'last_page',\r\n    to: 'last_page',\r\n  },\r\n  {\r\n    name: 'chevron_right',\r\n    to: 'chevron_right',\r\n  },\r\n  {\r\n    name: 'chevron_left',\r\n    to: 'chevron_left',\r\n  },\r\n  {\r\n    name: 'expand_more',\r\n    to: 'expand_more',\r\n  },\r\n  {\r\n    name: 'expand_less',\r\n    to: 'expand_less',\r\n  },\r\n  {\r\n    name: 'arrow_drop_down',\r\n    to: 'arrow_drop_down',\r\n  },\r\n  {\r\n    name: 'arrow_drop_up',\r\n    to: 'arrow_drop_up',\r\n  },\r\n  {\r\n    name: 'calendar_today',\r\n    to: 'calendar_today',\r\n  },\r\n  {\r\n    name: 'delete_outline',\r\n    to: 'delete_outline',\r\n  },\r\n  {\r\n    name: 'clear',\r\n    to: 'clear',\r\n  },\r\n  {\r\n    name: 'check',\r\n    to: 'check',\r\n  },\r\n  {\r\n    name: 'warning',\r\n    to: 'warning',\r\n  },\r\n  {\r\n    name: 'highlight_off',\r\n    to: 'highlight_off',\r\n  },\r\n  {\r\n    name: 'close',\r\n    to: 'close',\r\n  },\r\n  {\r\n    name: 'done',\r\n    to: 'done',\r\n  },\r\n  {\r\n    name: 'cancel',\r\n    to: 'cancel',\r\n  },\r\n  {\r\n    name: 'loop',\r\n    to: 'loop',\r\n  },\r\n]\r\n","import { IconConfig, IconConfiguration } from './types'\r\nimport { VuesticIconAliases, VuesticIconFonts } from './presets'\r\n\r\n/**\r\n * Helper allow you to create icons config with Vuestic defaults.\r\n * Alias should have `to` property which is the name of font.\r\n */\r\nexport const createIconsConfig = (config: {\r\n  aliases?: IconConfiguration[],\r\n  fonts?: IconConfiguration[],\r\n}): IconConfig => {\r\n  config.aliases = config.aliases || []\r\n  config.fonts = config.fonts || []\r\n\r\n  return [\r\n    ...config.aliases,\r\n    ...VuesticIconAliases,\r\n    ...config.fonts,\r\n    ...VuesticIconFonts,\r\n  ]\r\n}\r\n","import { merge, cloneDeep } from 'lodash-es'\r\nimport { ref } from 'vue'\r\nimport { GlobalConfig, GlobalConfigUpdater } from './types'\r\nimport { getComponentsDefaultConfig } from './config-default'\r\nimport { createIconsConfig } from '../icon-config/icon-config-helpers'\r\nimport { colorsPresets } from '../color-config/color-theme-presets'\r\n\r\nconst globalConfigRef = ref<GlobalConfig>({\r\n  colors: colorsPresets.default,\r\n  icons: createIconsConfig({}),\r\n  components: getComponentsDefaultConfig(),\r\n})\r\n\r\nexport function setGlobalConfig (updater: GlobalConfig | GlobalConfigUpdater) {\r\n  const config = typeof updater === 'function' ? updater(globalConfigRef.value) : updater\r\n  globalConfigRef.value = cloneDeep(config)\r\n}\r\n\r\n/** Merge current config with new value */\r\nexport function mergeGlobalConfig (updater: GlobalConfig | GlobalConfigUpdater) {\r\n  const config = typeof updater === 'function' ? updater(globalConfigRef.value) : updater\r\n  globalConfigRef.value = merge(cloneDeep(globalConfigRef.value), config)\r\n}\r\n\r\nexport function getGlobalConfig (): GlobalConfig {\r\n  return globalConfigRef.value\r\n}\r\n\r\nexport function useGlobalConfig () {\r\n  return { setGlobalConfig, getGlobalConfig, mergeGlobalConfig, globalConfig: globalConfigRef }\r\n}\r\n\r\nexport * from './types'\r\n","import { CssColor } from './color-config'\r\n\r\ntype VuesticColorsPreset = {\r\n  primary: CssColor,\r\n  secondary: CssColor,\r\n  success: CssColor,\r\n  info: CssColor,\r\n  danger: CssColor,\r\n  warning: CssColor,\r\n  gray: CssColor,\r\n  dark: CssColor,\r\n  background: CssColor,\r\n  divider: CssColor,\r\n}\r\n\r\nexport const colorsPresets: Record<string, VuesticColorsPreset> = {\r\n  default: {\r\n    primary: '#154EC1',\r\n    secondary: '#767C88',\r\n    success: '#3D9209',\r\n    info: '#1E9CE3',\r\n    danger: '#E42222',\r\n    warning: '#FFD43A',\r\n    background: '#F5F9FB',\r\n    divider: '#E1E9F8',\r\n    gray: '#babfc2',\r\n    dark: '#262824',\r\n  },\r\n}\r\n","//  @ts-nocheck\r\n\r\nimport { isObject } from 'lodash-es'\r\n\r\nexport const sleep = (ms = 0) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms))\r\n}\r\n\r\nexport const normalizeValue = (value, minValue = 0, maxValue = 100) => {\r\n  if (value <= minValue) {\r\n    return minValue\r\n  }\r\n\r\n  if (value >= maxValue) {\r\n    return maxValue\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n// Taken from vuetify pretty much.\r\nexport const deepEqual = (a, b) => {\r\n  if (a === b) { return true }\r\n\r\n  // If the values aren't objects, they were already checked for equality\r\n  if (a !== Object(a) || b !== Object(b)) {\r\n    return false\r\n  }\r\n\r\n  // Handle dates as a special case\r\n  if (a instanceof Date && b instanceof Date) {\r\n    if (a.getTime() !== b.getTime()) { return false }\r\n  }\r\n\r\n  const props = Object.keys(a)\r\n\r\n  // Different number of props, don't bother to check\r\n  if (props.length !== Object.keys(b).length) {\r\n    return false\r\n  }\r\n\r\n  return props.every(p => deepEqual(a[p], b[p]))\r\n}\r\n\r\n// vuestic-ui warn, currently is mostly a placeholder, but later might provide ability to disable warns etc.\r\nexport const warn = (...attrs) => {\r\n  // eslint-disable-next-line  no-console\r\n  console.warn(...attrs)\r\n  return false\r\n}\r\n\r\nexport const hasOwnProperty = (object, key) => {\r\n  // See https://eslint.org/docs/rules/no-prototype-builtins for explanation\r\n  // on why we don't use object.hasOwnProperty directly.\r\n  return Object.prototype.hasOwnProperty.call(object, key)\r\n}\r\n\r\n// Find value in the object with an array of keys\r\nexport const getNestedValue = (option, propsArray) => {\r\n  if (propsArray.length === 0) { return option }\r\n\r\n  const nestedItem = option[propsArray[0]]\r\n  if (!isObject(nestedItem)) {\r\n    if (propsArray.length === 1) {\r\n      return nestedItem\r\n    }\r\n    return undefined\r\n  }\r\n  return getNestedValue(nestedItem, propsArray.slice(1))\r\n}\r\n\r\n/**\r\n * Finds value in the object using string with dots 'key.key.key'\r\n *\r\n * @param option\r\n * @param prop\r\n */\r\nexport const getValueByPath = <T extends Record<string, unknown>>(option: T, prop: string | keyof T) => {\r\n  if (prop in option) {\r\n    return option[prop]\r\n  }\r\n  prop = prop.replace(/^\\./, '') // remove first point symbol\r\n  return getNestedValue(option, prop.split('.'))\r\n}\r\n\r\n/**\r\n * Finds value of nested property inside of an object.\r\n *\r\n * @param option - Object to look properties inside\r\n * @param prop - string or function used to find nested property\r\n */\r\nexport const getProp = <T extends (Record<string, unknown> | string)> (option: T, prop: string | ((t: T) => any) | Function): any => {\r\n  if (typeof option === 'string') { return }\r\n  if (!prop || !option) { return option }\r\n  if (typeof prop === 'string') { return getValueByPath(option, prop) }\r\n  if (typeof prop === 'function') { return prop(option) }\r\n  return option\r\n}\r\n\r\nconst getRandomString = (stringLength = 4): string => {\r\n  return Math.random().toString(36).substring(2, stringLength + 2)\r\n}\r\n\r\nexport const generateUniqueId = () => {\r\n  return `${getRandomString(8)}-${getRandomString(4)}-${getRandomString(4)}`\r\n}\r\n","import { isArray, isObject, camelCase, upperFirst } from 'lodash-es'\r\nimport {\r\n  DefineComponent,\r\n  ComponentOptions,\r\n  h,\r\n  computed,\r\n  SetupContext,\r\n} from 'vue'\r\nimport { PropOptions } from 'vue-class-component'\r\n\r\nimport { useLocalConfig } from '../../components/va-config/VaConfig'\r\nimport { useGlobalConfig } from '../global-config/global-config'\r\nimport { getLocalConfigWithComponentProp } from './createConfigValueGetter'\r\nimport { ComponentConfig } from '../component-config/component-config'\r\n\r\nexport type Props = {\r\n  [key: string]: PropOptions;\r\n}\r\n\r\nconst createConfigValueGetter = (\r\n  globalConfig: ComponentConfig,\r\n  configChain: ComponentConfig[],\r\n  componentName = '',\r\n) => (\r\n  prop: string,\r\n  defaultValue: any,\r\n) => {\r\n  // We have to pass context here as this method will be mainly used in prop default,\r\n  // and methods are not accessible there.\r\n  const configLayers = globalConfig ? [globalConfig, ...configChain] : configChain\r\n\r\n  const configLayer = getLocalConfigWithComponentProp(configLayers, componentName, prop)\r\n\r\n  if (configLayer) {\r\n    return configLayer[componentName][prop]\r\n  }\r\n\r\n  return typeof defaultValue === 'function' ? defaultValue() : defaultValue\r\n}\r\n\r\nexport function getComponentOptions (component: DefineComponent): ComponentOptions {\r\n  switch (true) {\r\n  case Boolean(component.options):\r\n    return component.options\r\n  case Boolean(component.__vccOpts) || Boolean(component.__b):\r\n    return { ...component.__b, ...component.__vccOpts }\r\n  default:\r\n    return component\r\n  }\r\n}\r\n\r\nfunction normalizeProps (props: any) {\r\n  switch (true) {\r\n  case isArray(props):\r\n    return props.reduce((acc: Record<string, unknown>, prop: string) => ({\r\n      ...acc,\r\n      [prop]: null,\r\n    }), {})\r\n  case isObject(props):\r\n    return props\r\n  default:\r\n    return {}\r\n  }\r\n}\r\n\r\nfunction mergeProps (to: Record<string, any>, from: Record<string, any>, optionsType = 'props') {\r\n  const { mixins, extends: extendsOptions } = from\r\n\r\n  extendsOptions && mergeProps(to, extendsOptions, optionsType)\r\n  mixins && mixins.forEach((m: any) => mergeProps(to, m, optionsType))\r\n\r\n  const props = normalizeProps(from[optionsType])\r\n\r\n  for (const key in props) {\r\n    to[key] = props[key]\r\n  }\r\n}\r\n\r\nexport function resolveProps (options: any, optionsType = 'props') {\r\n  const mixins = options.mixins ?? []\r\n  const extendsOptions = options.extends ?? []\r\n  const result = {}\r\n\r\n  mergeProps(result, extendsOptions, optionsType)\r\n\r\n  for (let i = 0; i < mixins.length; i++) {\r\n    mergeProps(result, mixins[i], optionsType)\r\n  }\r\n\r\n  Object.assign(result, normalizeProps(options[optionsType]))\r\n\r\n  return result\r\n}\r\n\r\nconst formatEmitString = (str: string): string => {\r\n  const [beforeColon, afterColon] = str.split(':')\r\n\r\n  if (afterColon) {\r\n    return [upperFirst(beforeColon), camelCase(afterColon)].join(':')\r\n  }\r\n\r\n  return upperFirst(camelCase(beforeColon))\r\n}\r\n\r\n// TODO: improve typing\r\n// (component: DefineComponent | VueConstructor): ComponentOptions<any> doesn't work here\r\n\r\nconst withConfigTransport = (component: any): any => {\r\n  const options = getComponentOptions(component as DefineComponent)\r\n\r\n  const props = resolveProps(options)\r\n\r\n  // TODO: it's too generic to use resolveProps here\r\n  // NOTE: for some reason unit tests work without this feature\r\n  const emits = Object.keys(resolveProps(options, 'emits'))\r\n\r\n  const propsOptions: { [key: string]: PropOptions } = { ...props }\r\n  const methods: { [key: string]: (...args: any[]) => any } = { ...options.methods }\r\n  const optionsWithoutDefaults = Object.keys(propsOptions)\r\n\r\n  const componentName = upperFirst(camelCase(component.name))\r\n\r\n  return {\r\n    name: `WithConfigTransport${componentName || 'Component'}`,\r\n    props: optionsWithoutDefaults,\r\n    emits,\r\n    methods: Object.keys(methods).reduce((acc, name) => ({\r\n      ...acc,\r\n      [name]: function (...args: any[]) {\r\n        return (this as any).$refs.innerRef[name](...args)\r\n      },\r\n    }), {}),\r\n    setup (props: Record<string, any>, context: SetupContext) {\r\n      const configChain = useLocalConfig()\r\n      const { getGlobalConfig } = useGlobalConfig()\r\n\r\n      const computedProps = computed(() => {\r\n        const componentsConfig = getGlobalConfig().components\r\n        const getConfigValue = createConfigValueGetter(componentsConfig || {}, configChain.value, componentName)\r\n\r\n        const getValue = (name: string, defaultValue: any) => {\r\n          // We want to fallback to config in 2 cases:\r\n          // * prop value is undefined (allows user to dynamically enter/exit config).\r\n          // * prop value is not defined\r\n          if (!(name in props) || (props[name] === undefined)) {\r\n            return getConfigValue(name, defaultValue)\r\n          }\r\n\r\n          // In other cases we return the prop itself.\r\n          return props[name]\r\n        }\r\n\r\n        return Object.entries(propsOptions).reduce((computed, [name, definition]) => ({\r\n          ...computed,\r\n          [name]: getValue(name, definition.default),\r\n        }), {})\r\n      })\r\n\r\n      const proxiedEmits = emits.reduce((acc, emit) => ({\r\n        ...acc,\r\n        [`on${formatEmitString(emit)}`]: (...args: any[]) => context.emit(emit, ...args),\r\n      }), {})\r\n\r\n      return {\r\n        computedProps,\r\n        proxiedEmits,\r\n      }\r\n    },\r\n    render () {\r\n      return h(\r\n        component,\r\n        {\r\n          ...this.computedProps,\r\n          ...this.proxiedEmits,\r\n          ref: 'innerRef',\r\n        },\r\n        { ...this.$slots },\r\n      )\r\n    },\r\n  }\r\n}\r\n\r\nexport default withConfigTransport\r\n","import { hasOwnProperty } from '../utils'\r\nimport { ComponentConfig } from '../component-config/component-config'\r\n\r\n/**\r\n * Attempt to find a prop value from config chain.\r\n *\r\n * @category String\r\n * @param configs [object] config chain.\r\n * @param componentName [string]\r\n * @param propName [string] property name (pascal-case)\r\n *\r\n * @returns {any} config object if found undefined means not found.\r\n */\r\nexport const getLocalConfigWithComponentProp = (configs: ComponentConfig[], componentName: string, propName: string): ComponentConfig | undefined => {\r\n  // Find prop value in config chain.\r\n  return configs.reverse().find(config => {\r\n    const componentConfig = config[componentName]\r\n    return componentConfig && hasOwnProperty(componentConfig, propName)\r\n  })\r\n}\r\n"],"names":["VuesticIconFonts","name","class","resolve","icon","content","VuesticIconAliases","to","createIconsConfig","config","aliases","fonts","globalConfigRef","ref","colors","primary","secondary","success","info","danger","warning","background","divider","gray","dark","icons","components","VaIcon","sizesConfig","defaultSize","sizes","small","medium","large","VaRating","setGlobalConfig","updater","value","cloneDeep","mergeGlobalConfig","merge","getGlobalConfig","useGlobalConfig","globalConfig","sleep","ms","Promise","setTimeout","normalizeValue","minValue","maxValue","warn","attrs","console","hasOwnProperty","object","key","Object","prototype","call","getNestedValue","option","propsArray","length","nestedItem","isObject","slice","getProp","prop","replace","split","getValueByPath","getRandomString","stringLength","Math","random","toString","substring","generateUniqueId","createConfigValueGetter","configChain","componentName","defaultValue","configLayer","configs","propName","reverse","find","componentConfig","getLocalConfigWithComponentProp","normalizeProps","props","isArray","reduce","acc","mergeProps","from","optionsType","mixins","extends","extendsOptions","forEach","m","resolveProps","options","result","i","assign","formatEmitString","str","beforeColon","afterColon","upperFirst","camelCase","join","withConfigTransport","component","getComponentOptions","Boolean","__vccOpts","__b","emits","keys","propsOptions","methods","optionsWithoutDefaults","args","this","$refs","innerRef","setup","context","useLocalConfig","computedProps","computed","componentsConfig","getConfigValue","getValue","undefined","entries","definition","default","proxiedEmits","emit","render","h","$slots"],"mappings":"4LAEO,MCAMA,EAA+B,CAC1C,CACEC,KAAM,SACNC,MAAO,iBACPC,QAAS,EAAGC,KAAAA,OAAcC,QAASD,MCJ1BE,EAA0C,CACrD,CACEL,KAAM,iBACNM,GAAI,kBAEN,CACEN,KAAM,oBACNM,GAAI,qBAEN,CACEN,KAAM,aACNM,GAAI,cAEN,CACEN,KAAM,YACNM,GAAI,aAEN,CACEN,KAAM,gBACNM,GAAI,iBAEN,CACEN,KAAM,eACNM,GAAI,gBAEN,CACEN,KAAM,cACNM,GAAI,eAEN,CACEN,KAAM,cACNM,GAAI,eAEN,CACEN,KAAM,kBACNM,GAAI,mBAEN,CACEN,KAAM,gBACNM,GAAI,iBAEN,CACEN,KAAM,iBACNM,GAAI,kBAEN,CACEN,KAAM,iBACNM,GAAI,kBAEN,CACEN,KAAM,QACNM,GAAI,SAEN,CACEN,KAAM,QACNM,GAAI,SAEN,CACEN,KAAM,UACNM,GAAI,WAEN,CACEN,KAAM,gBACNM,GAAI,iBAEN,CACEN,KAAM,QACNM,GAAI,SAEN,CACEN,KAAM,OACNM,GAAI,QAEN,CACEN,KAAM,SACNM,GAAI,UAEN,CACEN,KAAM,OACNM,GAAI,SC1EKC,kBAAqBC,IAIhCA,EAAOC,QAAUD,EAAOC,SAAW,GACnCD,EAAOE,MAAQF,EAAOE,OAAS,GAExB,IACFF,EAAOC,WACPJ,KACAG,EAAOE,SACPX,ICXDY,EAAkBC,EAAkB,CACxCC,OCQS,CACPC,QAAS,UACTC,UAAW,UACXC,QAAS,UACTC,KAAM,UACNC,OAAQ,UACRC,QAAS,UACTC,WAAY,UACZC,QAAS,UACTC,KAAM,UACNC,KAAM,WDjBRC,MAAOjB,kBAAkB,IACzBkB,WJNO,CACLC,OAAQ,CACNC,YAAa,CACXC,YAAa,GACbC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,MAAO,MAIbC,SAAU,CACRN,YAAa,CACXC,YAAa,GACbC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,MAAO,kBIRDE,gBAAiBC,GAC/B,MAAM3B,EAA4B,mBAAZ2B,EAAyBA,EAAQxB,EAAgByB,OAASD,EAChFxB,EAAgByB,MAAQC,EAAU7B,YAIpB8B,kBAAmBH,GACjC,MAAM3B,EAA4B,mBAAZ2B,EAAyBA,EAAQxB,EAAgByB,OAASD,EAChFxB,EAAgByB,MAAQG,EAAMF,EAAU1B,EAAgByB,OAAQ5B,YAGlDgC,kBACd,OAAO7B,EAAgByB,eAGTK,kBACd,MAAO,CAAEP,gBAAAA,gBAAiBM,gBAAAA,gBAAiBF,kBAAAA,kBAAmBI,aAAc/B,SEzBjEgC,MAAQ,CAACC,EAAK,IAClB,IAAIC,SAAQ3C,GAAW4C,WAAW5C,EAAS0C,KAGvCG,eAAiB,CAACX,EAAOY,EAAW,EAAGC,EAAW,MACzDb,GAASY,EACJA,EAGLZ,GAASa,EACJA,EAGFb,EA4BIc,KAAO,IAAIC,KAEtBC,QAAQF,QAAQC,IACT,GAGIE,eAAiB,CAACC,EAAQC,IAG9BC,OAAOC,UAAUJ,eAAeK,KAAKJ,EAAQC,GAIzCI,eAAiB,CAACC,EAAQC,KACrC,GAA0B,IAAtBA,EAAWC,OAAgB,OAAOF,EAEtC,MAAMG,EAAaH,EAAOC,EAAW,IACrC,OAAKG,EAASD,GAMPJ,eAAeI,EAAYF,EAAWI,MAAM,IALvB,IAAtBJ,EAAWC,OACNC,OAET,GAyBSG,QAAU,CAAgDN,EAAWO,KAChF,GAAsB,iBAAXP,EACX,OAAKO,GAASP,EACM,iBAATO,EAjBiB,EAAoCP,EAAWO,IACvEA,KAAQP,EACHA,EAAOO,IAEhBA,EAAOA,EAAKC,QAAQ,MAAO,IACpBT,eAAeC,EAAQO,EAAKE,MAAM,OAYFC,CAAeV,EAAQO,GAC1C,mBAATA,EAA8BA,EAAKP,GACvCA,EAHwBA,GAM3BW,gBAAkB,CAACC,EAAe,IAC/BC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAGJ,EAAe,GAGnDK,iBAAmB,IACvB,GAAGN,gBAAgB,MAAMA,gBAAgB,MAAMA,gBAAgB,KCrFlEO,wBAA0B,CAC9BpC,EACAqC,EACAC,EAAgB,KACb,CACHb,EACAc,KAIA,MAEMC,EClBuC,EAACC,EAA4BH,EAAuBI,IAE1FD,EAAQE,UAAUC,MAAK9E,IAC5B,MAAM+E,EAAkB/E,EAAOwE,GAC/B,OAAOO,GAAmBlC,eAAekC,EAAiBH,MDcxCI,CAFC9C,EAAe,CAACA,KAAiBqC,GAAeA,EAEHC,EAAeb,GAEjF,OAAIe,EACKA,EAAYF,GAAeb,GAGL,mBAAjBc,EAA8BA,IAAiBA,GAc/D,SAASQ,eAAgBC,GACvB,QAAQ,GACR,KAAKC,EAAQD,GACX,OAAOA,EAAME,QAAO,CAACC,EAA8B1B,SAC9C0B,EACH1B,CAACA,GAAO,QACN,IACN,KAAKH,EAAS0B,GACZ,OAAOA,EACT,QACE,MAAO,IAIX,SAASI,WAAYxF,EAAyByF,EAA2BC,EAAc,SACrF,MAAMC,OAAEA,EAAQC,QAASC,GAAmBJ,EAE5CI,GAAkBL,WAAWxF,EAAI6F,EAAgBH,GACjDC,GAAUA,EAAOG,SAASC,GAAWP,WAAWxF,EAAI+F,EAAGL,KAEvD,MAAMN,EAAQD,eAAeM,EAAKC,IAElC,IAAK,MAAMzC,KAAOmC,EAChBpF,EAAGiD,GAAOmC,EAAMnC,YAIJ+C,aAAcC,EAAcP,EAAc,iBACxD,MAAMC,YAASM,EAAQN,sBAAU,GAE3BO,EAAS,GAEfV,WAAWU,YAHYD,EAAQL,uBAAW,GAGPF,GAEnC,IAAK,IAAIS,EAAI,EAAGA,EAAIR,EAAOnC,OAAQ2C,IACjCX,WAAWU,EAAQP,EAAOQ,GAAIT,GAKhC,OAFAxC,OAAOkD,OAAOF,EAAQf,eAAec,EAAQP,KAEtCQ,EAGT,MAAMG,iBAAoBC,IACxB,MAAOC,EAAaC,GAAcF,EAAIvC,MAAM,KAE5C,OAAIyC,EACK,CAACC,EAAWF,GAAcG,EAAUF,IAAaG,KAAK,KAGxDF,EAAWC,EAAUH,KAMxBK,oBAAuBC,IAC3B,MAAMZ,WApEQa,oBAAqBD,GACnC,QAAQ,GACR,KAAKE,QAAQF,EAAUZ,SACrB,OAAOY,EAAUZ,QACnB,KAAKc,QAAQF,EAAUG,YAAcD,QAAQF,EAAUI,KACrD,MAAO,IAAKJ,EAAUI,OAAQJ,EAAUG,WAC1C,QACE,OAAOH,GA6DOC,CAAoBD,GAE9BzB,EAAQY,aAAaC,GAIrBiB,EAAQhE,OAAOiE,KAAKnB,aAAaC,EAAS,UAE1CmB,EAA+C,IAAKhC,GACpDiC,EAAsD,IAAKpB,EAAQoB,SACnEC,EAAyBpE,OAAOiE,KAAKC,GAErC1C,EAAgB+B,EAAWC,EAAUG,EAAUnH,OAErD,MAAO,CACLA,KAAM,sBAAsBgF,GAAiB,cAC7CU,MAAOkC,EACPJ,MAAAA,EACAG,QAASnE,OAAOiE,KAAKE,GAAS/B,QAAO,CAACC,EAAK7F,SACtC6F,EACH7F,CAACA,GAAO,YAAa6H,GACnB,OAAQC,KAAaC,MAAMC,SAAShI,MAAS6H,OAE7C,IACJI,MAAOvC,EAA4BwC,GACjC,MAAMnD,EAAcoD,KACd3F,gBAAEA,GAAoBC,kBA6B5B,MAAO,CACL2F,cA5BoBC,GAAS,KAC7B,MAAMC,EAAmB9F,IAAkBf,WACrC8G,EAAiBzD,wBAAwBwD,GAAoB,GAAIvD,EAAY3C,MAAO4C,GAEpFwD,SAAW,CAACxI,EAAciF,IAIxBjF,KAAQ0F,QAA2B+C,IAAhB/C,EAAM1F,GAKxB0F,EAAM1F,GAJJuI,EAAevI,EAAMiF,GAOhC,OAAOzB,OAAOkF,QAAQhB,GAAc9B,QAAO,CAACyC,GAAWrI,EAAM2I,UACxDN,EACHrI,CAACA,GAAOwI,SAASxI,EAAM2I,EAAWC,YAChC,OAUJC,aAPmBrB,EAAM5B,QAAO,CAACC,EAAKiD,SACnCjD,EACH,CAAC,KAAKc,iBAAiBmC,MAAU,IAAIjB,IAAgBK,EAAQY,KAAKA,KAASjB,MACzE,MAONkB,SACE,OAAOC,EACL7B,EACA,IACKW,KAAKM,iBACLN,KAAKe,aACRjI,IAAK,YAEP,IAAKkH,KAAKmB"}