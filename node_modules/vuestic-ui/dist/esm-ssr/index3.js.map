{"version":3,"file":"index3.js","sources":["../../src/components/va-alert/VaAlert.vue","../../src/components/va-alert/VaAlert.vue?vue&type=template&id=0ae3ae0c&lang.js","../../src/components/va-alert/index.ts"],"sourcesContent":["<template>\r\n  <transition\r\n    v-if=\"valueComputed\"\r\n    name=\"fade\"\r\n  >\r\n    <div\r\n      class=\"va-alert\"\r\n      :style=\"alertStyle\"\r\n    >\r\n      <div\r\n        :style=\"borderStyle\"\r\n        :class=\"borderClass\"\r\n        class=\"va-alert__border\"\r\n      />\r\n\r\n      <div\r\n        :style=\"contentStyle\"\r\n        class=\"va-alert__icon\"\r\n        v-if=\"hasIcon\"\r\n      >\r\n        <slot name=\"icon\">\r\n          <va-icon\r\n            :name=\"icon\"\r\n          />\r\n        </slot>\r\n      </div>\r\n\r\n      <div\r\n        :style=\"contentStyle\"\r\n        class=\"va-alert__content\"\r\n      >\r\n        <div\r\n          :style=\"titleStyle\"\r\n          class=\"va-alert__title\"\r\n          v-if=\"hasTitle\"\r\n        >\r\n          <slot name=\"title\">\r\n            {{ title }}\r\n          </slot>\r\n        </div>\r\n        <slot>\r\n          {{ description }}\r\n        </slot>\r\n      </div>\r\n\r\n      <div\r\n        class=\"va-alert__close\"\r\n        v-if=\"closeable\"\r\n      >\r\n        <div\r\n          :style=\"contentStyle\"\r\n          class=\"va-alert__close--closeable\"\r\n          @click=\"hide()\"\r\n        >\r\n          <slot name=\"close\">\r\n            <va-icon\r\n              v-if=\"!closeText\"\r\n              :name=\"closeIcon\"\r\n              size=\"small\"\r\n            />\r\n            {{ closeText }}\r\n          </slot>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nimport {\r\n  getHoverColor,\r\n  getBoxShadowColor, getTextColor,\r\n} from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\n\r\nimport VaIcon from '../va-icon'\r\n\r\nclass AlertProps {\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  title = prop<string>({ type: String, default: '' })\r\n  description = prop<string>({ type: String, default: '' })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  closeText = prop<string>({ type: String, default: '' })\r\n  closeable = prop<boolean>({ type: Boolean, default: false })\r\n  dense = prop<boolean>({ type: Boolean, default: false })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  center = prop<boolean>({ type: Boolean, default: false })\r\n  borderColor = prop<string>({ type: String, default: '' })\r\n  border = prop<string>({\r\n    type: String,\r\n    default: '',\r\n    validator: (value: string) => {\r\n      return ['top', 'right', 'bottom', 'left', ''].includes(value)\r\n    },\r\n  })\r\n\r\n  modelValue = prop<boolean>({\r\n    type: Boolean,\r\n    default: true,\r\n  })\r\n}\r\n\r\nconst AlertPropsMixin = Vue.with(AlertProps)\r\nconst dark = 'var(--va-dark)'\r\n\r\n@Options({\r\n  name: 'VaAlert',\r\n  components: { VaIcon },\r\n})\r\nexport default class VaAlert extends mixins(\r\n  StatefulMixin,\r\n  ColorMixin,\r\n  AlertPropsMixin,\r\n) {\r\n  get hasIcon () {\r\n    return this.icon || this.$slots.icon\r\n  }\r\n\r\n  get hasTitle () {\r\n    return this.$props.title || this.$slots.title\r\n  }\r\n\r\n  get alertStyle () {\r\n    let background = this.colorComputed\r\n    let boxShadow = 'none'\r\n    if (this.outline) {\r\n      background = 'transparent'\r\n    }\r\n    if (this.border) {\r\n      background = '#ffffff'\r\n      boxShadow = 'var(--va-alert-box-shadow)'\r\n    }\r\n    return {\r\n      border: this.outline && `1px solid ${this.colorComputed}`,\r\n      background: background,\r\n      boxShadow: boxShadow,\r\n      padding: this.dense && '0.25rem 0.75rem',\r\n    }\r\n  }\r\n\r\n  get contentStyle () {\r\n    let color = getTextColor(this.colorComputed)\r\n    if (this.outline) {\r\n      color = this.colorComputed\r\n    }\r\n    if (this.border) {\r\n      color = dark\r\n    }\r\n    return {\r\n      alignItems: this.center && 'center',\r\n      color: color,\r\n    }\r\n  }\r\n\r\n  get titleStyle () {\r\n    let color = getTextColor(this.colorComputed)\r\n    if (this.outline) {\r\n      color = this.colorComputed\r\n    }\r\n    if (this.border) {\r\n      color = this.colorComputed\r\n    }\r\n    return {\r\n      color: color,\r\n    }\r\n  }\r\n\r\n  get borderClass () {\r\n    return `va-alert__border--${this.border}`\r\n  }\r\n\r\n  get borderStyle () {\r\n    return {\r\n      backgroundColor: this.$props.borderColor\r\n        ? this.theme.getColor(this.$props.borderColor)\r\n        : this.colorComputed,\r\n    }\r\n  }\r\n\r\n  get closeIcon () {\r\n    return !this.closeText ? 'close' : this.closeText\r\n  }\r\n\r\n  hide (): void {\r\n    this.valueComputed = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-alert {\r\n  position: var(--va-alert-position);\r\n  padding: var(--va-alert-padding-y) var(--va-alert-padding-x);\r\n  margin: var(--va-alert-margin-y) auto;\r\n  display: var(--va-alert-display);\r\n  align-items: var(--va-alert-align-items);\r\n  border: var(--va-alert-border-width, var(--va-control-border)) solid transparent;\r\n  border-radius: var(--va-alert-border-radius, var(--va-block-border-radius));\r\n\r\n  &__border {\r\n    content: '';\r\n    position: absolute;\r\n\r\n    &--top {\r\n      border-radius: var(--va-alert-top-border-radius);\r\n      width: 100%;\r\n      height: var(--va-alert-stripe-border-size);\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n\r\n    &--right {\r\n      border-radius: var(--va-alert-right-border-radius);\r\n      height: 100%;\r\n      width: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n\r\n    &--bottom {\r\n      border-radius: var(--va-alert-bottom-border-radius);\r\n      width: 100%;\r\n      height: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      left: 0;\r\n    }\r\n\r\n    &--left {\r\n      border-radius: var(--va-alert-left-border-radius);\r\n      height: 100%;\r\n      width: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: var(--va-alert-padding-x);\r\n  }\r\n\r\n  &__title {\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: var(--va-alert-title-font-weight);\r\n  }\r\n\r\n  &__content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex-grow: 1;\r\n    color: var(--va-alert-color);\r\n  }\r\n\r\n  &__close {\r\n    padding-left: var(--va-alert-close-padding-x);\r\n    font-size: var(--va-alert-close-font-size);\r\n\r\n    &--closeable {\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @include media-breakpoint-down(xs) {\r\n    @at-root {\r\n      .va-alert {\r\n        &__content {\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n        }\r\n\r\n        &__close {\r\n          align-self: flex-start;\r\n          display: flex;\r\n          align-items: flex-start;\r\n          padding: 0 var(--va-alert-close-padding-x) 0 0;\r\n          margin: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <transition\r\n    v-if=\"valueComputed\"\r\n    name=\"fade\"\r\n  >\r\n    <div\r\n      class=\"va-alert\"\r\n      :style=\"alertStyle\"\r\n    >\r\n      <div\r\n        :style=\"borderStyle\"\r\n        :class=\"borderClass\"\r\n        class=\"va-alert__border\"\r\n      />\r\n\r\n      <div\r\n        :style=\"contentStyle\"\r\n        class=\"va-alert__icon\"\r\n        v-if=\"hasIcon\"\r\n      >\r\n        <slot name=\"icon\">\r\n          <va-icon\r\n            :name=\"icon\"\r\n          />\r\n        </slot>\r\n      </div>\r\n\r\n      <div\r\n        :style=\"contentStyle\"\r\n        class=\"va-alert__content\"\r\n      >\r\n        <div\r\n          :style=\"titleStyle\"\r\n          class=\"va-alert__title\"\r\n          v-if=\"hasTitle\"\r\n        >\r\n          <slot name=\"title\">\r\n            {{ title }}\r\n          </slot>\r\n        </div>\r\n        <slot>\r\n          {{ description }}\r\n        </slot>\r\n      </div>\r\n\r\n      <div\r\n        class=\"va-alert__close\"\r\n        v-if=\"closeable\"\r\n      >\r\n        <div\r\n          :style=\"contentStyle\"\r\n          class=\"va-alert__close--closeable\"\r\n          @click=\"hide()\"\r\n        >\r\n          <slot name=\"close\">\r\n            <va-icon\r\n              v-if=\"!closeText\"\r\n              :name=\"closeIcon\"\r\n              size=\"small\"\r\n            />\r\n            {{ closeText }}\r\n          </slot>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nimport {\r\n  getHoverColor,\r\n  getBoxShadowColor, getTextColor,\r\n} from '../../services/color-config/color-functions'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { StatefulMixin } from '../../mixins/StatefulMixin/StatefulMixin'\r\n\r\nimport VaIcon from '../va-icon'\r\n\r\nclass AlertProps {\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  title = prop<string>({ type: String, default: '' })\r\n  description = prop<string>({ type: String, default: '' })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  closeText = prop<string>({ type: String, default: '' })\r\n  closeable = prop<boolean>({ type: Boolean, default: false })\r\n  dense = prop<boolean>({ type: Boolean, default: false })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  center = prop<boolean>({ type: Boolean, default: false })\r\n  borderColor = prop<string>({ type: String, default: '' })\r\n  border = prop<string>({\r\n    type: String,\r\n    default: '',\r\n    validator: (value: string) => {\r\n      return ['top', 'right', 'bottom', 'left', ''].includes(value)\r\n    },\r\n  })\r\n\r\n  modelValue = prop<boolean>({\r\n    type: Boolean,\r\n    default: true,\r\n  })\r\n}\r\n\r\nconst AlertPropsMixin = Vue.with(AlertProps)\r\nconst dark = 'var(--va-dark)'\r\n\r\n@Options({\r\n  name: 'VaAlert',\r\n  components: { VaIcon },\r\n})\r\nexport default class VaAlert extends mixins(\r\n  StatefulMixin,\r\n  ColorMixin,\r\n  AlertPropsMixin,\r\n) {\r\n  get hasIcon () {\r\n    return this.icon || this.$slots.icon\r\n  }\r\n\r\n  get hasTitle () {\r\n    return this.$props.title || this.$slots.title\r\n  }\r\n\r\n  get alertStyle () {\r\n    let background = this.colorComputed\r\n    let boxShadow = 'none'\r\n    if (this.outline) {\r\n      background = 'transparent'\r\n    }\r\n    if (this.border) {\r\n      background = '#ffffff'\r\n      boxShadow = 'var(--va-alert-box-shadow)'\r\n    }\r\n    return {\r\n      border: this.outline && `1px solid ${this.colorComputed}`,\r\n      background: background,\r\n      boxShadow: boxShadow,\r\n      padding: this.dense && '0.25rem 0.75rem',\r\n    }\r\n  }\r\n\r\n  get contentStyle () {\r\n    let color = getTextColor(this.colorComputed)\r\n    if (this.outline) {\r\n      color = this.colorComputed\r\n    }\r\n    if (this.border) {\r\n      color = dark\r\n    }\r\n    return {\r\n      alignItems: this.center && 'center',\r\n      color: color,\r\n    }\r\n  }\r\n\r\n  get titleStyle () {\r\n    let color = getTextColor(this.colorComputed)\r\n    if (this.outline) {\r\n      color = this.colorComputed\r\n    }\r\n    if (this.border) {\r\n      color = this.colorComputed\r\n    }\r\n    return {\r\n      color: color,\r\n    }\r\n  }\r\n\r\n  get borderClass () {\r\n    return `va-alert__border--${this.border}`\r\n  }\r\n\r\n  get borderStyle () {\r\n    return {\r\n      backgroundColor: this.$props.borderColor\r\n        ? this.theme.getColor(this.$props.borderColor)\r\n        : this.colorComputed,\r\n    }\r\n  }\r\n\r\n  get closeIcon () {\r\n    return !this.closeText ? 'close' : this.closeText\r\n  }\r\n\r\n  hide (): void {\r\n    this.valueComputed = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-alert {\r\n  position: var(--va-alert-position);\r\n  padding: var(--va-alert-padding-y) var(--va-alert-padding-x);\r\n  margin: var(--va-alert-margin-y) auto;\r\n  display: var(--va-alert-display);\r\n  align-items: var(--va-alert-align-items);\r\n  border: var(--va-alert-border-width, var(--va-control-border)) solid transparent;\r\n  border-radius: var(--va-alert-border-radius, var(--va-block-border-radius));\r\n\r\n  &__border {\r\n    content: '';\r\n    position: absolute;\r\n\r\n    &--top {\r\n      border-radius: var(--va-alert-top-border-radius);\r\n      width: 100%;\r\n      height: var(--va-alert-stripe-border-size);\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n\r\n    &--right {\r\n      border-radius: var(--va-alert-right-border-radius);\r\n      height: 100%;\r\n      width: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      right: 0;\r\n    }\r\n\r\n    &--bottom {\r\n      border-radius: var(--va-alert-bottom-border-radius);\r\n      width: 100%;\r\n      height: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      left: 0;\r\n    }\r\n\r\n    &--left {\r\n      border-radius: var(--va-alert-left-border-radius);\r\n      height: 100%;\r\n      width: var(--va-alert-stripe-border-size);\r\n      bottom: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  &__icon {\r\n    display: flex;\r\n    align-items: center;\r\n    padding-right: var(--va-alert-padding-x);\r\n  }\r\n\r\n  &__title {\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: var(--va-alert-title-font-weight);\r\n  }\r\n\r\n  &__content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex-grow: 1;\r\n    color: var(--va-alert-color);\r\n  }\r\n\r\n  &__close {\r\n    padding-left: var(--va-alert-close-padding-x);\r\n    font-size: var(--va-alert-close-font-size);\r\n\r\n    &--closeable {\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  @include media-breakpoint-down(xs) {\r\n    @at-root {\r\n      .va-alert {\r\n        &__content {\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n        }\r\n\r\n        &__close {\r\n          align-self: flex-start;\r\n          display: flex;\r\n          align-items: flex-start;\r\n          padding: 0 var(--va-alert-close-padding-x) 0 0;\r\n          margin: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaAlert from './VaAlert.vue'\r\n\r\nexport default withConfigTransport(VaAlert)\r\n"],"names":["AlertPropsMixin","Vue","with","AlertProps","constructor","this","prop","type","String","default","Boolean","validator","value","includes","VaAlert","mixins","StatefulMixin","ColorMixin","hasIcon","icon","$slots","hasTitle","$props","title","alertStyle","background","colorComputed","boxShadow","outline","border","padding","dense","contentStyle","color","getTextColor","alignItems","center","titleStyle","borderClass","borderStyle","backgroundColor","borderColor","theme","getColor","closeIcon","closeText","hide","valueComputed","Options","name","components","VaIcon","_ctx","_mergeProps","class","style","size","withConfigTransport"],"mappings":"mpBA0GA,MAAMA,EAAkBC,EAAIC,KAzB5B,MAAMC,WAANC,cACEC,WAAQC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,YAC9CJ,WAAQC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KAC9CJ,iBAAcC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KACpDJ,UAAOC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KAC7CJ,eAAYC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KAClDJ,eAAYC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACpDJ,WAAQC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IAChDJ,aAAUC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IAClDJ,YAASC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACjDJ,iBAAcC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KACpDJ,YAASC,EAAa,CACpBC,KAAMC,OACNC,QAAS,GACTE,UAAYC,GACH,CAAC,MAAO,QAAS,SAAU,OAAQ,IAAIC,SAASD,KAI3DP,gBAAaC,EAAc,CACzBC,KAAMG,QACND,SAAS,OAWb,IAAqBK,EAArB,MAAqBA,gBAAgBC,EACnCC,EACAC,EACAjB,IAEAkB,cACE,OAAOb,KAAKc,MAAQd,KAAKe,OAAOD,KAGlCE,eACE,OAAOhB,KAAKiB,OAAOC,OAASlB,KAAKe,OAAOG,MAG1CC,iBACE,IAAIC,EAAapB,KAAKqB,cAClBC,EAAY,OAQhB,OAPItB,KAAKuB,UACPH,EAAa,eAEXpB,KAAKwB,SACPJ,EAAa,UACbE,EAAY,8BAEP,CACLE,OAAQxB,KAAKuB,SAAW,aAAavB,KAAKqB,gBAC1CD,WAAYA,EACZE,UAAWA,EACXG,QAASzB,KAAK0B,OAAS,mBAI3BC,mBACE,IAAIC,EAAQC,EAAa7B,KAAKqB,eAO9B,OANIrB,KAAKuB,UACPK,EAAQ5B,KAAKqB,eAEXrB,KAAKwB,SACPI,EA3CO,kBA6CF,CACLE,WAAY9B,KAAK+B,QAAU,SAC3BH,MAAOA,GAIXI,iBACE,IAAIJ,EAAQC,EAAa7B,KAAKqB,eAO9B,OANIrB,KAAKuB,UACPK,EAAQ5B,KAAKqB,eAEXrB,KAAKwB,SACPI,EAAQ5B,KAAKqB,eAER,CACLO,MAAOA,GAIXK,kBACE,MAAO,qBAAqBjC,KAAKwB,SAGnCU,kBACE,MAAO,CACLC,gBAAiBnC,KAAKiB,OAAOmB,YACzBpC,KAAKqC,MAAMC,SAAStC,KAAKiB,OAAOmB,aAChCpC,KAAKqB,eAIbkB,gBACE,OAAQvC,KAAKwC,UAAsBxC,KAAKwC,UAAf,QAG3BC,OACEzC,KAAK0C,eAAgB,IA3EJjC,KAJpBkC,EAAQ,CACPC,KAAM,UACNC,WAAY,CAAEC,OAAAA,MAEKrC,SAAAA,ssJC/GXsC,4BAGNC,GACEC,MAAM,WACLC,MAAOH,mCAGEA,6BACAA,8CAOFA,8BAFEA,8EAMHH,KAAMG,2EAMHA,+CAMAA,+BAFEA,8EAKHA,wFAIFA,qCAMCA,6DAGIA,oFAMGA,sCACNH,KAAMG,YACPI,KAAK,0BAEJJ,6ICzDf,MAAeK,EAAoB3C"}