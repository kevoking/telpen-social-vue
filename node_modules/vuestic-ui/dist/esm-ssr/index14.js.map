{"version":3,"file":"index14.js","sources":["../../src/components/va-checkbox/VaCheckbox.vue","../../src/components/va-checkbox/VaCheckbox.vue?vue&type=template&id=828af530&lang.js","../../src/components/va-checkbox/index.ts"],"sourcesContent":["<template>\r\n  <va-input-wrapper\r\n    class=\"va-checkbox\"\r\n    :class=\"computedClass\"\r\n    :disabled=\"disabled\"\r\n    :success=\"success\"\r\n    :messages=\"messages\"\r\n    :error=\"computedError\"\r\n    :error-messages=\"computedErrorMessages\"\r\n    :error-count=\"errorCount\"\r\n  >\r\n    <div\r\n      class=\"va-checkbox__input-container\"\r\n      @click=\"onWrapperClick()\"\r\n      tabindex=\"-1\"\r\n      @blur=\"onBlur\"\r\n      ref=\"container\"\r\n    >\r\n      <div\r\n        class=\"va-checkbox__square\"\r\n        :style=\"inputStyle\"\r\n      >\r\n        <input\r\n          ref=\"input\"\r\n          :id=\"id\"\r\n          :name=\"name\"\r\n          type=\"checkbox\"\r\n          role=\"checkbox\"\r\n          readonly\r\n          v-on=\"SetupContext.keyboardFocusListeners\"\r\n          @focus=\"onFocus\"\r\n          @blur=\"onBlur($event)\"\r\n          class=\"va-checkbox__input\"\r\n          @keypress.prevent=\"toggleSelection()\"\r\n          :disabled=\"disabled\"\r\n          :indeterminate=\"indeterminate\"\r\n        >\r\n        <va-icon\r\n          class=\"va-checkbox__icon\"\r\n          :name=\"computedIconName\"\r\n          size=\"20px\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"va-checkbox__label\"\r\n        :style=\"labelStyle\"\r\n        ref=\"label\"\r\n        tabindex=\"-1\"\r\n        @blur=\"onBlur\"\r\n      >\r\n        <slot name=\"label\">\r\n          {{ label }}\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </va-input-wrapper>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, setup, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SelectableMixin } from '../../mixins/SelectableMixin/SelectableMixin'\r\nimport VaIcon from '../va-icon/'\r\nimport { VaInputWrapper } from '../va-input'\r\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\r\n\r\ntype ModelValue = boolean | boolean[] | string | Record<string, unknown>\r\n\r\nclass CheckboxProps {\r\n  modelValue = prop<ModelValue>({\r\n    type: [Boolean, Array, String, Object],\r\n    default: false,\r\n  })\r\n\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  checkedIcon = prop<string>({ type: String, default: 'check' })\r\n  indeterminateIcon = prop<string>({ type: String, default: 'remove' })\r\n}\r\n\r\nconst CheckboxPropsMixin = Vue.with(CheckboxProps)\r\n\r\n@Options({\r\n  name: 'VaCheckbox',\r\n  components: { VaInputWrapper, VaIcon },\r\n})\r\nexport default class VaCheckbox extends mixins(\r\n  ColorMixin,\r\n  SelectableMixin,\r\n  CheckboxPropsMixin,\r\n) {\r\n  SetupContext = setup(() => {\r\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\r\n\r\n    return {\r\n      hasKeyboardFocus,\r\n      keyboardFocusListeners,\r\n    }\r\n  })\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-checkbox--selected': this.isChecked,\r\n      'va-checkbox--readonly': this.readonly,\r\n      'va-checkbox--disabled': this.disabled,\r\n      'va-checkbox--indeterminate': this.indeterminate,\r\n      'va-checkbox--error': this.computedError,\r\n      'va-checkbox--left-label': this.leftLabel,\r\n      'va-checkbox--on-keyboard-focus': this.SetupContext.hasKeyboardFocus,\r\n    }\r\n  }\r\n\r\n  get labelStyle () {\r\n    return {\r\n      color: this.computedError ? this.theme.getColor('danger') : '',\r\n      padding: !this.label\r\n        ? ''\r\n        : this.leftLabel\r\n          ? '0 0.5rem 0 0'\r\n          : '0 0 0 0.5rem',\r\n    }\r\n  }\r\n\r\n  get inputStyle () {\r\n    return this.computedError\r\n      ? (this.isChecked || this.isIndeterminate)\r\n        ? {\r\n          background: this.colorComputed,\r\n          borderColor: this.theme.getColor('danger'),\r\n        }\r\n        : { borderColor: this.theme.getColor('danger') }\r\n      : (this.isChecked || this.isIndeterminate)\r\n        ? { background: this.colorComputed, borderColor: this.colorComputed }\r\n        : {}\r\n  }\r\n\r\n  get computedIconName () {\r\n    return (this.indeterminate && this.isIndeterminate)\r\n      ? this.indeterminateIcon\r\n      : this.checkedIcon\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-checkbox {\r\n  display: var(--va-checkbox-display);\r\n  max-width: var(--va-checkbox-max-width);\r\n\r\n  &__input-container {\r\n    align-items: var(--va-checkbox-input-align-items);\r\n    display: var(--va-checkbox-input-display);\r\n    padding: var(--va-checkbox-input-padding);\r\n    cursor: var(--va-checkbox-input-cursor);\r\n\r\n    @at-root {\r\n      .va-checkbox--disabled & {\r\n        @include va-disabled();\r\n\r\n        cursor: var(--va-checkbox-disabled-cursor);\r\n      }\r\n\r\n      .va-checkbox--readonly & {\r\n        cursor: var(--va-checkbox-readonly-cursor);\r\n      }\r\n\r\n      .va-checkbox--left-label & {\r\n        flex-direction: row-reverse;\r\n      }\r\n    }\r\n  }\r\n\r\n  #{&}__square {\r\n    @include flex-center();\r\n\r\n    width: var(--va-checkbox-square-width);\r\n    min-width: var(--va-checkbox-square-min-width);\r\n    height: var(--va-checkbox-square-height);\r\n    position: var(--va-checkbox-square-position);\r\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\r\n    border: var(--va-checkbox-square-border, var(--va-control-border));\r\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\r\n\r\n    @at-root {\r\n      .va-checkbox--on-keyboard-focus#{&} {\r\n        transition: all, 0.6s, ease-in;\r\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0 !important;\r\n  }\r\n\r\n  &__label {\r\n    display: var(--va-checkbox-label-display);\r\n    position: var(--va-checkbox-label-position);\r\n  }\r\n\r\n  &__icon {\r\n    pointer-events: var(--va-checkbox-icon-pointer-events);\r\n    position: var(--va-checkbox-icon-position);\r\n    color: var(--va-checkbox-icon-color);\r\n  }\r\n\r\n  &--selected {\r\n    .va-checkbox {\r\n      &__icon {\r\n        color: var(--va-checkbox-selected-icon-color);\r\n      }\r\n    }\r\n  }\r\n\r\n  &--indeterminate {\r\n    .va-checkbox {\r\n      &__icon {\r\n        color: var(--va-checkbox-indeterminate-icon-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <va-input-wrapper\r\n    class=\"va-checkbox\"\r\n    :class=\"computedClass\"\r\n    :disabled=\"disabled\"\r\n    :success=\"success\"\r\n    :messages=\"messages\"\r\n    :error=\"computedError\"\r\n    :error-messages=\"computedErrorMessages\"\r\n    :error-count=\"errorCount\"\r\n  >\r\n    <div\r\n      class=\"va-checkbox__input-container\"\r\n      @click=\"onWrapperClick()\"\r\n      tabindex=\"-1\"\r\n      @blur=\"onBlur\"\r\n      ref=\"container\"\r\n    >\r\n      <div\r\n        class=\"va-checkbox__square\"\r\n        :style=\"inputStyle\"\r\n      >\r\n        <input\r\n          ref=\"input\"\r\n          :id=\"id\"\r\n          :name=\"name\"\r\n          type=\"checkbox\"\r\n          role=\"checkbox\"\r\n          readonly\r\n          v-on=\"SetupContext.keyboardFocusListeners\"\r\n          @focus=\"onFocus\"\r\n          @blur=\"onBlur($event)\"\r\n          class=\"va-checkbox__input\"\r\n          @keypress.prevent=\"toggleSelection()\"\r\n          :disabled=\"disabled\"\r\n          :indeterminate=\"indeterminate\"\r\n        >\r\n        <va-icon\r\n          class=\"va-checkbox__icon\"\r\n          :name=\"computedIconName\"\r\n          size=\"20px\"\r\n        />\r\n      </div>\r\n      <div\r\n        class=\"va-checkbox__label\"\r\n        :style=\"labelStyle\"\r\n        ref=\"label\"\r\n        tabindex=\"-1\"\r\n        @blur=\"onBlur\"\r\n      >\r\n        <slot name=\"label\">\r\n          {{ label }}\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </va-input-wrapper>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, setup, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SelectableMixin } from '../../mixins/SelectableMixin/SelectableMixin'\r\nimport VaIcon from '../va-icon/'\r\nimport { VaInputWrapper } from '../va-input'\r\nimport useKeyboardOnlyFocus from '../../composables/useKeyboardOnlyFocus'\r\n\r\ntype ModelValue = boolean | boolean[] | string | Record<string, unknown>\r\n\r\nclass CheckboxProps {\r\n  modelValue = prop<ModelValue>({\r\n    type: [Boolean, Array, String, Object],\r\n    default: false,\r\n  })\r\n\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  checkedIcon = prop<string>({ type: String, default: 'check' })\r\n  indeterminateIcon = prop<string>({ type: String, default: 'remove' })\r\n}\r\n\r\nconst CheckboxPropsMixin = Vue.with(CheckboxProps)\r\n\r\n@Options({\r\n  name: 'VaCheckbox',\r\n  components: { VaInputWrapper, VaIcon },\r\n})\r\nexport default class VaCheckbox extends mixins(\r\n  ColorMixin,\r\n  SelectableMixin,\r\n  CheckboxPropsMixin,\r\n) {\r\n  SetupContext = setup(() => {\r\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\r\n\r\n    return {\r\n      hasKeyboardFocus,\r\n      keyboardFocusListeners,\r\n    }\r\n  })\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-checkbox--selected': this.isChecked,\r\n      'va-checkbox--readonly': this.readonly,\r\n      'va-checkbox--disabled': this.disabled,\r\n      'va-checkbox--indeterminate': this.indeterminate,\r\n      'va-checkbox--error': this.computedError,\r\n      'va-checkbox--left-label': this.leftLabel,\r\n      'va-checkbox--on-keyboard-focus': this.SetupContext.hasKeyboardFocus,\r\n    }\r\n  }\r\n\r\n  get labelStyle () {\r\n    return {\r\n      color: this.computedError ? this.theme.getColor('danger') : '',\r\n      padding: !this.label\r\n        ? ''\r\n        : this.leftLabel\r\n          ? '0 0.5rem 0 0'\r\n          : '0 0 0 0.5rem',\r\n    }\r\n  }\r\n\r\n  get inputStyle () {\r\n    return this.computedError\r\n      ? (this.isChecked || this.isIndeterminate)\r\n        ? {\r\n          background: this.colorComputed,\r\n          borderColor: this.theme.getColor('danger'),\r\n        }\r\n        : { borderColor: this.theme.getColor('danger') }\r\n      : (this.isChecked || this.isIndeterminate)\r\n        ? { background: this.colorComputed, borderColor: this.colorComputed }\r\n        : {}\r\n  }\r\n\r\n  get computedIconName () {\r\n    return (this.indeterminate && this.isIndeterminate)\r\n      ? this.indeterminateIcon\r\n      : this.checkedIcon\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-checkbox {\r\n  display: var(--va-checkbox-display);\r\n  max-width: var(--va-checkbox-max-width);\r\n\r\n  &__input-container {\r\n    align-items: var(--va-checkbox-input-align-items);\r\n    display: var(--va-checkbox-input-display);\r\n    padding: var(--va-checkbox-input-padding);\r\n    cursor: var(--va-checkbox-input-cursor);\r\n\r\n    @at-root {\r\n      .va-checkbox--disabled & {\r\n        @include va-disabled();\r\n\r\n        cursor: var(--va-checkbox-disabled-cursor);\r\n      }\r\n\r\n      .va-checkbox--readonly & {\r\n        cursor: var(--va-checkbox-readonly-cursor);\r\n      }\r\n\r\n      .va-checkbox--left-label & {\r\n        flex-direction: row-reverse;\r\n      }\r\n    }\r\n  }\r\n\r\n  #{&}__square {\r\n    @include flex-center();\r\n\r\n    width: var(--va-checkbox-square-width);\r\n    min-width: var(--va-checkbox-square-min-width);\r\n    height: var(--va-checkbox-square-height);\r\n    position: var(--va-checkbox-square-position);\r\n    background-color: var(--va-checkbox-square-background-color, var(--va-background-color));\r\n    border: var(--va-checkbox-square-border, var(--va-control-border));\r\n    border-radius: var(--va-checkbox-square-border-radius, var(--va-square-border-radius));\r\n\r\n    @at-root {\r\n      .va-checkbox--on-keyboard-focus#{&} {\r\n        transition: all, 0.6s, ease-in;\r\n        box-shadow: 0 0 0.5rem 0 rgba(0, 0, 0, 0.3);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0 !important;\r\n  }\r\n\r\n  &__label {\r\n    display: var(--va-checkbox-label-display);\r\n    position: var(--va-checkbox-label-position);\r\n  }\r\n\r\n  &__icon {\r\n    pointer-events: var(--va-checkbox-icon-pointer-events);\r\n    position: var(--va-checkbox-icon-position);\r\n    color: var(--va-checkbox-icon-color);\r\n  }\r\n\r\n  &--selected {\r\n    .va-checkbox {\r\n      &__icon {\r\n        color: var(--va-checkbox-selected-icon-color);\r\n      }\r\n    }\r\n  }\r\n\r\n  &--indeterminate {\r\n    .va-checkbox {\r\n      &__icon {\r\n        color: var(--va-checkbox-indeterminate-icon-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaCheckbox from './VaCheckbox.vue'\r\n\r\nexport default withConfigTransport(VaCheckbox)\r\n"],"names":["CheckboxPropsMixin","Vue","with","CheckboxProps","constructor","this","prop","type","Boolean","Array","String","Object","default","VaCheckbox","mixins","ColorMixin","SelectableMixin","setup","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","computedClass","isChecked","readonly","disabled","indeterminate","computedError","leftLabel","SetupContext","labelStyle","color","theme","getColor","padding","label","inputStyle","isIndeterminate","background","colorComputed","borderColor","computedIconName","indeterminateIcon","checkedIcon","Options","name","components","VaInputWrapper","VaIcon","_mergeProps","class","_ctx","success","messages","error","_createVNode","onClick","tabindex","onBlur","ref","style","id","role","_toHandlers","onFocus","$event","onKeypress","size","_renderSlot","withConfigTransport"],"mappings":"y6BAgFA,MAAMA,EAAqBC,EAAIC,KAX/B,MAAMC,cAANC,cACEC,gBAAaC,EAAiB,CAC5BC,KAAM,CAACC,QAASC,MAAOC,OAAQC,QAC/BC,SAAS,IAGXP,WAAQC,EAAa,CAAEC,KAAMG,OAAQE,QAAS,YAC9CP,iBAAcC,EAAa,CAAEC,KAAMG,OAAQE,QAAS,UACpDP,uBAAoBC,EAAa,CAAEC,KAAMG,OAAQE,QAAS,cAS5D,IAAqBC,EAArB,MAAqBA,mBAAmBC,EACtCC,EACAC,EACAhB,IAHFI,kCAKEC,kBAAeY,GAAM,KACnB,MAAMC,iBAAEA,EAAgBC,uBAAEA,GAA2BC,IAErD,MAAO,CACLF,iBAAAA,EACAC,uBAAAA,MAIJE,oBACE,MAAO,CACL,wBAAyBhB,KAAKiB,UAC9B,wBAAyBjB,KAAKkB,SAC9B,wBAAyBlB,KAAKmB,SAC9B,6BAA8BnB,KAAKoB,cACnC,qBAAsBpB,KAAKqB,cAC3B,0BAA2BrB,KAAKsB,UAChC,iCAAkCtB,KAAKuB,aAAaV,kBAIxDW,iBACE,MAAO,CACLC,MAAOzB,KAAKqB,cAAgBrB,KAAK0B,MAAMC,SAAS,UAAY,GAC5DC,QAAU5B,KAAK6B,MAEX7B,KAAKsB,UACH,eACA,eAHF,IAORQ,iBACE,OAAO9B,KAAKqB,cACPrB,KAAKiB,WAAajB,KAAK+B,gBACtB,CACAC,WAAYhC,KAAKiC,cACjBC,YAAalC,KAAK0B,MAAMC,SAAS,WAEjC,CAAEO,YAAalC,KAAK0B,MAAMC,SAAS,WACpC3B,KAAKiB,WAAajB,KAAK+B,gBACtB,CAAEC,WAAYhC,KAAKiC,cAAeC,YAAalC,KAAKiC,eACpD,GAGRE,uBACE,OAAQnC,KAAKoB,eAAiBpB,KAAK+B,gBAC/B/B,KAAKoC,kBACLpC,KAAKqC,cArDQ7B,KAJpB8B,EAAQ,CACPC,KAAM,aACNC,WAAY,CAAEC,eAAAA,EAAgBC,OAAAA,MAEXlC,SAAAA,iuJCrFnBmC,GACEC,OAAM,cACEC,iBACP1B,SAAU0B,WACVC,QAASD,UACTE,SAAUF,WACVG,MAAOH,gBACP,iBAAgBA,wBAChB,cAAaA,6BARhB,yBAUEI,SACEL,MAAM,+BACLM,WAAOL,mBACRM,SAAS,KACRC,OAAMP,SACPQ,IAAI,cAEJJ,SACEL,MAAM,sBACLU,MAAOT,eAERI,UAAAN,GACEU,IAAI,QACHE,GAAIV,KACJN,KAAMM,OACP3C,KAAK,WACLsD,KAAK,WACLtC,SAAA,IACAuC,iBAAmB3C,yBAClB4C,QAAOb,UACPO,UAAMP,SAAOc,GACdf,MAAM,qBACLgB,iBAAkBf,kCAClB1B,SAAU0B,WACVzB,cAAeyB,oGAElBI,KACEL,MAAM,oBACLL,KAAMM,mBACPgB,KAAK,6BAGTZ,SACEL,MAAM,qBACLU,MAAOT,aACRQ,IAAI,QACJF,SAAS,KACRC,OAAMP,WAEPiB,uBAAA,SACKjB,qKA/BGA,8BAIL,KAAIA,UACJ,OAAMA,gFASIA,+BACV,gBAAeA,gCAGhBD,MAAM,oBACLL,KAAMM,mBACPgB,KAAK,uEAKChB,wEAMHA,yGChDb,MAAekB,EAAoBvD"}