{"version":3,"file":"index5.js","sources":["../../src/components/va-avatar/VaAvatar.vue","../../src/components/va-avatar/VaAvatar.vue?vue&type=template&id=98de6a30&lang.js","../../src/components/va-avatar/index.ts"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"va-avatar\"\r\n    ref=\"avatar\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <slot>\r\n      <va-progress-circle\r\n        v-if=\"loading\"\r\n        indeterminate\r\n        :size=\"sizeComputed\"\r\n        :color=\"colorComputed\"\r\n      />\r\n      <img\r\n        v-else-if=\"src\"\r\n        :src=\"src\"\r\n      >\r\n      <va-icon\r\n        v-else-if=\"icon\"\r\n        :name=\"icon\"\r\n      />\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\nimport { LoadingMixin } from '../../mixins/LoadingMixin/LoadingMixin'\r\nimport VaIcon from '../va-icon'\r\nimport { VaProgressCircle } from '../va-progress-bar'\r\n\r\nclass AvatarProps {\r\n  color = prop<string>({ type: String, default: 'info' })\r\n  textColor = prop<string>({ type: String, default: 'white' })\r\n  square = prop<boolean>({ type: Boolean, default: false })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  src = prop<string>({ type: String, default: null })\r\n  fontSize = prop<string>({ type: String, default: '' })\r\n}\r\n\r\nconst AvatarPropsMixin = Vue.with(AvatarProps)\r\n\r\n@Options({\r\n  name: 'VaAvatar',\r\n  components: { VaIcon, VaProgressCircle },\r\n})\r\nexport default class VaAvatar extends mixins(\r\n  SizeMixin,\r\n  ColorMixin,\r\n  LoadingMixin,\r\n  AvatarPropsMixin,\r\n) {\r\n  get computedStyle () {\r\n    return {\r\n      color: this.theme.getColor(this.textColor, '#ffffff'),\r\n      backgroundColor: this.loading ? 'transparent' : this.colorComputed,\r\n      borderRadius: this.square ? 0 : '',\r\n      fontSize: this.fontSize || this.fontSizeComputed,\r\n      width: this.sizeComputed,\r\n      minWidth: this.sizeComputed, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\r\n      height: this.sizeComputed,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"variables\";\r\n\r\n.va-avatar {\r\n  align-items: var(--va-avatar-align-items);\r\n  display: var(--va-avatar-display);\r\n  justify-content: var(--va-avatar-justify-content);\r\n  line-height: var(--va-avatar-line-height);\r\n  position: var(--va-avatar-position);\r\n  text-align: var(--va-avatar-text-align);\r\n  vertical-align: var(--va-avatar-vertical-align);\r\n  border-radius: var(--va-avatar-border-radius);\r\n\r\n  img,\r\n  svg {\r\n    border-radius: inherit;\r\n    display: inline-flex;\r\n    height: inherit;\r\n    width: inherit;\r\n    margin: auto;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-avatar\"\r\n    ref=\"avatar\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <slot>\r\n      <va-progress-circle\r\n        v-if=\"loading\"\r\n        indeterminate\r\n        :size=\"sizeComputed\"\r\n        :color=\"colorComputed\"\r\n      />\r\n      <img\r\n        v-else-if=\"src\"\r\n        :src=\"src\"\r\n      >\r\n      <va-icon\r\n        v-else-if=\"icon\"\r\n        :name=\"icon\"\r\n      />\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, mixins, prop, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\nimport { LoadingMixin } from '../../mixins/LoadingMixin/LoadingMixin'\r\nimport VaIcon from '../va-icon'\r\nimport { VaProgressCircle } from '../va-progress-bar'\r\n\r\nclass AvatarProps {\r\n  color = prop<string>({ type: String, default: 'info' })\r\n  textColor = prop<string>({ type: String, default: 'white' })\r\n  square = prop<boolean>({ type: Boolean, default: false })\r\n  icon = prop<string>({ type: String, default: '' })\r\n  src = prop<string>({ type: String, default: null })\r\n  fontSize = prop<string>({ type: String, default: '' })\r\n}\r\n\r\nconst AvatarPropsMixin = Vue.with(AvatarProps)\r\n\r\n@Options({\r\n  name: 'VaAvatar',\r\n  components: { VaIcon, VaProgressCircle },\r\n})\r\nexport default class VaAvatar extends mixins(\r\n  SizeMixin,\r\n  ColorMixin,\r\n  LoadingMixin,\r\n  AvatarPropsMixin,\r\n) {\r\n  get computedStyle () {\r\n    return {\r\n      color: this.theme.getColor(this.textColor, '#ffffff'),\r\n      backgroundColor: this.loading ? 'transparent' : this.colorComputed,\r\n      borderRadius: this.square ? 0 : '',\r\n      fontSize: this.fontSize || this.fontSizeComputed,\r\n      width: this.sizeComputed,\r\n      minWidth: this.sizeComputed, // We only define width because common use case would be flex row, for column we expect user to set appropriate styling externally.\r\n      height: this.sizeComputed,\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"variables\";\r\n\r\n.va-avatar {\r\n  align-items: var(--va-avatar-align-items);\r\n  display: var(--va-avatar-display);\r\n  justify-content: var(--va-avatar-justify-content);\r\n  line-height: var(--va-avatar-line-height);\r\n  position: var(--va-avatar-position);\r\n  text-align: var(--va-avatar-text-align);\r\n  vertical-align: var(--va-avatar-vertical-align);\r\n  border-radius: var(--va-avatar-border-radius);\r\n\r\n  img,\r\n  svg {\r\n    border-radius: inherit;\r\n    display: inline-flex;\r\n    height: inherit;\r\n    width: inherit;\r\n    margin: auto;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaAvatar from './VaAvatar.vue'\r\n\r\nexport default withConfigTransport(VaAvatar)\r\n"],"names":["AvatarPropsMixin","Vue","with","AvatarProps","constructor","this","prop","type","String","default","Boolean","VaAvatar","mixins","SizeMixin","ColorMixin","LoadingMixin","computedStyle","color","theme","getColor","textColor","backgroundColor","loading","colorComputed","borderRadius","square","fontSize","fontSizeComputed","width","sizeComputed","minWidth","height","Options","name","components","VaIcon","VaProgressCircle","_mergeProps","class","ref","style","_ctx","indeterminate","size","withConfigTransport"],"mappings":"ypBA2CA,MAAMA,EAAmBC,EAAIC,KAT7B,MAAMC,YAANC,cACEC,WAAQC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,SAC9CJ,eAAYC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,UAClDJ,YAASC,EAAc,CAAEC,KAAMG,QAASD,SAAS,IACjDJ,UAAOC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,KAC7CJ,SAAMC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,OAC5CJ,cAAWC,EAAa,CAAEC,KAAMC,OAAQC,QAAS,QASnD,IAAqBE,EAArB,MAAqBA,iBAAiBC,EACpCC,EACAC,EACAC,EACAf,IAEAgB,oBACE,MAAO,CACLC,MAAOZ,KAAKa,MAAMC,SAASd,KAAKe,UAAW,WAC3CC,gBAAiBhB,KAAKiB,QAAU,cAAgBjB,KAAKkB,cACrDC,aAAcnB,KAAKoB,OAAS,EAAI,GAChCC,SAAUrB,KAAKqB,UAAYrB,KAAKsB,iBAChCC,MAAOvB,KAAKwB,aACZC,SAAUzB,KAAKwB,aACfE,OAAQ1B,KAAKwB,gBAdElB,KAJpBqB,EAAQ,CACPC,KAAM,WACNC,WAAY,CAAEC,OAAAA,EAAQC,iBAAAA,MAEHzB,SAAAA,2zBChDnB0B,GACEC,MAAM,YACNC,IAAI,SACHC,MAAOC,uDAIEA,iBACNC,cAAA,GACCC,KAAMF,eACNxB,MAAOwB,0BAGGA,iBACV,MAAKA,WAGKA,cACVR,KAAMQ,yGChBf,MAAeG,EAAoBjC"}