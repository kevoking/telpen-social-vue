import{__decorate as t}from"tslib";import{V as e,m as s,O as i,p as r}from"./vue-class-component.esm-bundler.js";const a=e.with(class RouterLinkProps{constructor(){this.tag=r({type:String,default:"router-link"}),this.to=r({type:[String,Object]}),this.replace=r({type:Boolean}),this.append=r({type:Boolean}),this.exact=r({type:Boolean}),this.activeClass=r({type:String}),this.exactActiveClass=r({type:String}),this.href=r({type:String}),this.target=r({type:String})}});let o=class RouterLinkMixin extends(s(a)){get tagComputed(){const t=!!Object.getOwnPropertyDescriptor(this,"$nuxt");return"a"===this.tag||this.href&&!this.to||this.target?"a":"nuxt-link"===this.tag||t&&this.hasRouterLinkParams?"nuxt-link":"router-link"===this.tag||this.hasRouterLinkParams?"router-link":this.tag}get hasRouterLinkParams(){return Boolean(this.to||this.append||this.replace||this.exact||this.activeClass||this.href||this.exactActiveClass)}get isActiveRouterLink(){if(!this.$router||!this.to)return!1;const t=this.$router.resolve(this.to).href,e=this.$router.currentRoute.value.path;return t.replace("#","")===e.replace("#","")}get hrefComputed(){var t;return this.href||(this.to?null===(t=this.$router)||void 0===t?void 0:t.resolve(this.to,this.$route).href:null)}created(){this.hasRouterLinkMixin=!0}};o=t([i({})],o);export{o as R};
//# sourceMappingURL=RouterLinkMixin.js.map
