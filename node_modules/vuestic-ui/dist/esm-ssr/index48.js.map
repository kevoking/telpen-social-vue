{"version":3,"file":"index48.js","sources":["../../src/components/va-form/VaForm.vue","../../src/components/va-form/VaForm.vue?vue&type=template&id=848ce870&lang.js","../../src/components/va-form/index.ts"],"sourcesContent":["<template>\r\n  <component\r\n    class=\"va-form\"\r\n    :is=\"tag\"\r\n  >\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { inject, provide } from 'vue'\r\nimport { Options, mixins, prop, Vue, setup } from 'vue-class-component'\r\nimport { FormComponentMixin } from '../../mixins/FormComponent/FormComponentMixin'\r\nimport { FormProvider, FormServiceKey } from './consts'\r\n\r\nclass FormProps {\r\n  autofocus = prop<boolean>({ type: Boolean, default: false })\r\n  tag = prop<string>({ type: String, default: 'div' })\r\n}\r\n\r\nconst FormPropsMixin = Vue.with(FormProps)\r\n\r\ninterface UniversalFormBlock {\r\n  reset: () => void;\r\n  some: () => void;\r\n}\r\n\r\n@Options({\r\n  name: 'VaForm',\r\n  emits: ['validation'],\r\n})\r\nexport default class VaForm extends mixins(\r\n  FormPropsMixin,\r\n) {\r\n  nestedFormElements: (FormComponentMixin | VaForm)[] = [];\r\n\r\n  parentFormProvider: FormProvider | Record<string, unknown> = setup(() => {\r\n    return {\r\n      ...inject(FormServiceKey, undefined),\r\n    }\r\n  })\r\n\r\n  formProvider = setup(() => {\r\n    const onChildMounted = (child: FormComponentMixin | VaForm) => this.childMountedHandler(child)\r\n    const onChildUnmounted = (removableChild: FormComponentMixin | VaForm) => this.childUnmountedHandler(removableChild)\r\n\r\n    const formProvider = {\r\n      onChildMounted,\r\n      onChildUnmounted,\r\n    }\r\n\r\n    provide(FormServiceKey, formProvider)\r\n\r\n    return formProvider\r\n  })\r\n\r\n  childMountedHandler (child: FormComponentMixin | VaForm) {\r\n    this.nestedFormElements.push(child)\r\n  }\r\n\r\n  childUnmountedHandler (removableChild: FormComponentMixin | VaForm) {\r\n    this.nestedFormElements = this.nestedFormElements.filter(child => child !== removableChild)\r\n  }\r\n\r\n  mounted () {\r\n    if (Object.keys(this.parentFormProvider).length) {\r\n      // @ts-ignore\r\n      this.parentFormProvider.onChildMounted(this)\r\n    }\r\n    if (this.autofocus) {\r\n      this.$nextTick(() => {\r\n        this.focus()\r\n      })\r\n    }\r\n  }\r\n\r\n  unmounted () {\r\n    if (Object.keys(this.parentFormProvider).length) {\r\n      // @ts-ignore\r\n      this.parentFormProvider.onChildUnmounted(this)\r\n    }\r\n  }\r\n\r\n  // public methods\r\n  reset () {\r\n    this.nestedFormElements\r\n      .filter(({ reset }) => reset)\r\n      .forEach((item) => {\r\n        item.reset()\r\n      })\r\n  }\r\n\r\n  resetValidation () {\r\n    this.nestedFormElements\r\n      .filter(({ resetValidation }) => resetValidation)\r\n      .forEach((item: any) => {\r\n        item.resetValidation()\r\n      })\r\n  }\r\n\r\n  focus () {\r\n    const focusableElement = this.nestedFormElements.find(({ focus }) => focus)\r\n    if (focusableElement) {\r\n      focusableElement.focus()\r\n    }\r\n  }\r\n\r\n  focusInvalid () {\r\n    const invalidComponent = this.nestedFormElements\r\n      // @ts-ignore\r\n      .filter(({ hasError }) => hasError)\r\n      // @ts-ignore\r\n      .find((item) => item.hasError())\r\n\r\n    if (invalidComponent) {\r\n      invalidComponent.focus()\r\n    } else {\r\n      // @ts-ignore\r\n      const nestedFormComponents = this.nestedFormElements.filter(({ nestedFormElements }) => nestedFormElements)\r\n      // @ts-ignore\r\n      nestedFormComponents.forEach(formComponent => formComponent.focusInvalid())\r\n    }\r\n  }\r\n\r\n  validate () { // NOTE: temporarily synchronous validation\r\n    let formValid = true\r\n    this.nestedFormElements\r\n      .filter(({ validate }) => validate)\r\n      .forEach((child) => {\r\n        const isValidChild = child.validate()\r\n        if (!isValidChild) {\r\n          formValid = false\r\n        }\r\n      })\r\n    this.$emit('validation', formValid)\r\n    return formValid\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.va-form {\r\n}\r\n</style>\r\n","<template>\r\n  <component\r\n    class=\"va-form\"\r\n    :is=\"tag\"\r\n  >\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { inject, provide } from 'vue'\r\nimport { Options, mixins, prop, Vue, setup } from 'vue-class-component'\r\nimport { FormComponentMixin } from '../../mixins/FormComponent/FormComponentMixin'\r\nimport { FormProvider, FormServiceKey } from './consts'\r\n\r\nclass FormProps {\r\n  autofocus = prop<boolean>({ type: Boolean, default: false })\r\n  tag = prop<string>({ type: String, default: 'div' })\r\n}\r\n\r\nconst FormPropsMixin = Vue.with(FormProps)\r\n\r\ninterface UniversalFormBlock {\r\n  reset: () => void;\r\n  some: () => void;\r\n}\r\n\r\n@Options({\r\n  name: 'VaForm',\r\n  emits: ['validation'],\r\n})\r\nexport default class VaForm extends mixins(\r\n  FormPropsMixin,\r\n) {\r\n  nestedFormElements: (FormComponentMixin | VaForm)[] = [];\r\n\r\n  parentFormProvider: FormProvider | Record<string, unknown> = setup(() => {\r\n    return {\r\n      ...inject(FormServiceKey, undefined),\r\n    }\r\n  })\r\n\r\n  formProvider = setup(() => {\r\n    const onChildMounted = (child: FormComponentMixin | VaForm) => this.childMountedHandler(child)\r\n    const onChildUnmounted = (removableChild: FormComponentMixin | VaForm) => this.childUnmountedHandler(removableChild)\r\n\r\n    const formProvider = {\r\n      onChildMounted,\r\n      onChildUnmounted,\r\n    }\r\n\r\n    provide(FormServiceKey, formProvider)\r\n\r\n    return formProvider\r\n  })\r\n\r\n  childMountedHandler (child: FormComponentMixin | VaForm) {\r\n    this.nestedFormElements.push(child)\r\n  }\r\n\r\n  childUnmountedHandler (removableChild: FormComponentMixin | VaForm) {\r\n    this.nestedFormElements = this.nestedFormElements.filter(child => child !== removableChild)\r\n  }\r\n\r\n  mounted () {\r\n    if (Object.keys(this.parentFormProvider).length) {\r\n      // @ts-ignore\r\n      this.parentFormProvider.onChildMounted(this)\r\n    }\r\n    if (this.autofocus) {\r\n      this.$nextTick(() => {\r\n        this.focus()\r\n      })\r\n    }\r\n  }\r\n\r\n  unmounted () {\r\n    if (Object.keys(this.parentFormProvider).length) {\r\n      // @ts-ignore\r\n      this.parentFormProvider.onChildUnmounted(this)\r\n    }\r\n  }\r\n\r\n  // public methods\r\n  reset () {\r\n    this.nestedFormElements\r\n      .filter(({ reset }) => reset)\r\n      .forEach((item) => {\r\n        item.reset()\r\n      })\r\n  }\r\n\r\n  resetValidation () {\r\n    this.nestedFormElements\r\n      .filter(({ resetValidation }) => resetValidation)\r\n      .forEach((item: any) => {\r\n        item.resetValidation()\r\n      })\r\n  }\r\n\r\n  focus () {\r\n    const focusableElement = this.nestedFormElements.find(({ focus }) => focus)\r\n    if (focusableElement) {\r\n      focusableElement.focus()\r\n    }\r\n  }\r\n\r\n  focusInvalid () {\r\n    const invalidComponent = this.nestedFormElements\r\n      // @ts-ignore\r\n      .filter(({ hasError }) => hasError)\r\n      // @ts-ignore\r\n      .find((item) => item.hasError())\r\n\r\n    if (invalidComponent) {\r\n      invalidComponent.focus()\r\n    } else {\r\n      // @ts-ignore\r\n      const nestedFormComponents = this.nestedFormElements.filter(({ nestedFormElements }) => nestedFormElements)\r\n      // @ts-ignore\r\n      nestedFormComponents.forEach(formComponent => formComponent.focusInvalid())\r\n    }\r\n  }\r\n\r\n  validate () { // NOTE: temporarily synchronous validation\r\n    let formValid = true\r\n    this.nestedFormElements\r\n      .filter(({ validate }) => validate)\r\n      .forEach((child) => {\r\n        const isValidChild = child.validate()\r\n        if (!isValidChild) {\r\n          formValid = false\r\n        }\r\n      })\r\n    this.$emit('validation', formValid)\r\n    return formValid\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.va-form {\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaForm from './VaForm.vue'\r\n\r\nexport default withConfigTransport(VaForm)\r\n"],"names":["FormPropsMixin","Vue","with","FormProps","constructor","this","prop","type","Boolean","default","String","VaForm","mixins","setup","inject","FormServiceKey","undefined","formProvider","onChildMounted","child","childMountedHandler","onChildUnmounted","removableChild","childUnmountedHandler","provide","nestedFormElements","push","filter","mounted","Object","keys","parentFormProvider","length","autofocus","$nextTick","focus","unmounted","reset","forEach","item","resetValidation","focusableElement","find","focusInvalid","invalidComponent","hasError","formComponent","validate","formValid","$emit","Options","name","emits","_ctx","_mergeProps","class","_renderSlot","withConfigTransport"],"mappings":"+dAoBA,MAAMA,EAAiBC,EAAIC,KAL3B,MAAMC,UAANC,cACEC,eAAYC,EAAc,CAAEC,KAAMC,QAASC,SAAS,IACpDJ,SAAMC,EAAa,CAAEC,KAAMG,OAAQD,QAAS,WAc9C,IAAqBE,EAArB,MAAqBA,eAAeC,EAClCZ,IADFI,kCAGEC,wBAAsD,GAEtDA,wBAA6DQ,GAAM,KAC1D,IACFC,EAAOC,OAAgBC,OAI9BX,kBAAeQ,GAAM,KACnB,MAGMI,EAAe,CACnBC,eAJsBC,GAAuCd,KAAKe,oBAAoBD,GAKtFE,iBAJwBC,GAAgDjB,KAAKkB,sBAAsBD,IASrG,OAFAE,EAAQT,EAAgBE,GAEjBA,KAGTG,oBAAqBD,GACnBd,KAAKoB,mBAAmBC,KAAKP,GAG/BI,sBAAuBD,GACrBjB,KAAKoB,mBAAqBpB,KAAKoB,mBAAmBE,QAAOR,GAASA,IAAUG,IAG9EM,UACMC,OAAOC,KAAKzB,KAAK0B,oBAAoBC,QAEvC3B,KAAK0B,mBAAmBb,eAAeb,MAErCA,KAAK4B,WACP5B,KAAK6B,WAAU,KACb7B,KAAK8B,WAKXC,YACMP,OAAOC,KAAKzB,KAAK0B,oBAAoBC,QAEvC3B,KAAK0B,mBAAmBV,iBAAiBhB,MAK7CgC,QACEhC,KAAKoB,mBACFE,QAAO,EAAGU,MAAAA,KAAYA,IACtBC,SAASC,IACRA,EAAKF,WAIXG,kBACEnC,KAAKoB,mBACFE,QAAO,EAAGa,gBAAAA,KAAsBA,IAChCF,SAASC,IACRA,EAAKC,qBAIXL,QACE,MAAMM,EAAmBpC,KAAKoB,mBAAmBiB,MAAK,EAAGP,MAAAA,KAAYA,IACjEM,GACFA,EAAiBN,QAIrBQ,eACE,MAAMC,EAAmBvC,KAAKoB,mBAE3BE,QAAO,EAAGkB,SAAAA,KAAeA,IAEzBH,MAAMH,GAASA,EAAKM,aAEvB,GAAID,EACFA,EAAiBT,YACZ,CAEwB9B,KAAKoB,mBAAmBE,QAAO,EAAGF,mBAAAA,KAAyBA,IAEnEa,SAAQQ,GAAiBA,EAAcH,kBAIhEI,WACE,IAAIC,GAAY,EAUhB,OATA3C,KAAKoB,mBACFE,QAAO,EAAGoB,SAAAA,KAAeA,IACzBT,SAASnB,IACaA,EAAM4B,aAEzBC,GAAY,MAGlB3C,KAAK4C,MAAM,aAAcD,GAClBA,IAxGUrC,KAJpBuC,EAAQ,CACPC,KAAM,SACNC,MAAO,CAAC,iBAEWzC,SAAAA,gEC5BZ0C,OAFPC,GACEC,MAAM,0BADR,yBAIEC,qHCFJ,MAAeC,EAAoB9C"}