{"version":3,"file":"index9.js","sources":["../../src/components/va-button-dropdown/VaButtonDropdown.vue","../../src/components/va-button-dropdown/VaButtonDropdown.vue?vue&type=template&id=1172abf3&lang.js","../../src/components/va-button-dropdown/index.ts"],"sourcesContent":["<template>\r\n  <div :class=\"computedClass\">\r\n    <va-dropdown\r\n      v-if=\"!split\"\r\n      :disabled=\"disabled\"\r\n      :position=\"position\"\r\n      :offset=\"$props.offset\"\r\n      :keep-anchor-width=\"keepAnchorWidth\"\r\n      :close-on-content-click=\"closeOnContentClick\"\r\n      v-model=\"showDropdown\"\r\n      :stateful=\"stateful\"\r\n    >\r\n      <template #anchor>\r\n        <va-button\r\n          :size=\"size\"\r\n          :flat=\"flat\"\r\n          :outline=\"outline\"\r\n          :disabled=\"disabled\"\r\n          :color=\"color\"\r\n          :icon-right=\"computedIcon\"\r\n          @click=\"click\"\r\n        >\r\n          <slot name=\"label\">\r\n            {{ label }}\r\n          </slot>\r\n        </va-button>\r\n      </template>\r\n\r\n      <va-dropdown-content>\r\n        <slot />\r\n      </va-dropdown-content>\r\n    </va-dropdown>\r\n    <va-button-group\r\n      v-else\r\n      :outline=\"outline\"\r\n      :flat=\"flat\"\r\n    >\r\n      <va-button\r\n        :size=\"size\"\r\n        :disabled=\"disabled || disableButton\"\r\n        :color=\"color\"\r\n        :to=\"splitTo\"\r\n        @click=\"mainButtonClick\"\r\n      >\r\n        <slot name=\"label\">\r\n          {{ label }}\r\n        </slot>\r\n      </va-button>\r\n      <va-dropdown\r\n        :disabled=\"disabled || disableDropdown\"\r\n        :position=\"position\"\r\n        :offset=\"$props.offset\"\r\n        v-model=\"showDropdown\"\r\n        :stateful=\"stateful\"\r\n      >\r\n        <template #anchor>\r\n          <va-button\r\n            :size=\"size\"\r\n            :flat=\"flat\"\r\n            :outline=\"outline\"\r\n            :disabled=\"disabled || disableDropdown\"\r\n            :color=\"color\"\r\n            :icon=\"computedIcon\"\r\n            @click=\"click\"\r\n          />\r\n        </template>\r\n        <va-dropdown-content>\r\n          <slot />\r\n        </va-dropdown-content>\r\n      </va-dropdown>\r\n    </va-button-group>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\r\nimport VaButton from '../va-button'\r\nimport VaButtonGroup from '../va-button-group'\r\n\r\nclass ButtonDropdownProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  disableButton = prop<boolean>({ type: Boolean, default: false })\r\n  disableDropdown = prop<boolean>({ type: Boolean, default: false })\r\n  flat = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value: string) => {\r\n      return ['medium', 'small', 'large'].includes(value)\r\n    },\r\n  })\r\n\r\n  keepAnchorWidth = prop({ type: Boolean, default: false })\r\n  split = prop<boolean>({ type: Boolean })\r\n  splitTo = prop<string>({ type: String, default: '' })\r\n  icon = prop<string>({ type: String, default: 'expand_more' })\r\n  openedIcon = prop<string>({ type: String, default: 'expand_less' })\r\n  position = prop<string>({ type: String, default: 'bottom' })\r\n  label = prop<string>({ type: String })\r\n  offset = prop<number | number[]>({ type: [Array, Number], default: () => [] })\r\n  closeOnContentClick = prop<boolean>({ type: Boolean, default: true })\r\n  stateful = prop<boolean>({ type: Boolean, default: true })\r\n}\r\n\r\nconst ButtonDropdownPropsMixin = Vue.with(ButtonDropdownProps)\r\n\r\n@Options({\r\n  name: 'VaButtonDropdown',\r\n  components: { VaButtonGroup, VaButton, VaDropdown, VaDropdownContent },\r\n  emits: ['click', 'main-button-click', 'update:modelValue'],\r\n})\r\nexport default class VaButtonDropdown extends mixins(\r\n  SizeMixin,\r\n  ColorMixin,\r\n  ButtonDropdownPropsMixin,\r\n) {\r\n  get computedIcon (): string {\r\n    // @ts-ignore\r\n    return this.showDropdown ? this.$props.openedIcon : this.$props.icon\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-button-dropdown': true,\r\n      'va-button-dropdown--split': this.split,\r\n      'va-button-dropdown--normal': this.size === 'normal',\r\n      'va-button-dropdown--large': this.size === 'large',\r\n      'va-button-dropdown--small': this.size === 'small',\r\n    }\r\n  }\r\n\r\n  get showDropdown (): boolean {\r\n    return this.modelValue\r\n  }\r\n\r\n  set showDropdown (value: boolean) {\r\n    this.$emit('update:modelValue', value)\r\n  }\r\n\r\n  click (event: Event): void {\r\n    this.$emit('click', event)\r\n  }\r\n\r\n  mainButtonClick (event: Event): void {\r\n    this.$emit('main-button-click', event)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-button-dropdown {\r\n  display: inline-block;\r\n\r\n  .va-button {\r\n    margin: var(--va-button-dropdown-button-margin);\r\n  }\r\n\r\n  &--split {\r\n    .va-dropdown {\r\n      .va-dropdown__anchor {\r\n        margin: 0;\r\n      }\r\n\r\n      .va-button {\r\n        border-top-left-radius: 0;\r\n        border-bottom-left-radius: 0;\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    &.va-button-dropdown--small {\r\n      .va-dropdown .va-button {\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n\r\n    &.va-button-dropdown--large {\r\n      .va-dropdown .va-button {\r\n        font-size: 1.7rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div :class=\"computedClass\">\r\n    <va-dropdown\r\n      v-if=\"!split\"\r\n      :disabled=\"disabled\"\r\n      :position=\"position\"\r\n      :offset=\"$props.offset\"\r\n      :keep-anchor-width=\"keepAnchorWidth\"\r\n      :close-on-content-click=\"closeOnContentClick\"\r\n      v-model=\"showDropdown\"\r\n      :stateful=\"stateful\"\r\n    >\r\n      <template #anchor>\r\n        <va-button\r\n          :size=\"size\"\r\n          :flat=\"flat\"\r\n          :outline=\"outline\"\r\n          :disabled=\"disabled\"\r\n          :color=\"color\"\r\n          :icon-right=\"computedIcon\"\r\n          @click=\"click\"\r\n        >\r\n          <slot name=\"label\">\r\n            {{ label }}\r\n          </slot>\r\n        </va-button>\r\n      </template>\r\n\r\n      <va-dropdown-content>\r\n        <slot />\r\n      </va-dropdown-content>\r\n    </va-dropdown>\r\n    <va-button-group\r\n      v-else\r\n      :outline=\"outline\"\r\n      :flat=\"flat\"\r\n    >\r\n      <va-button\r\n        :size=\"size\"\r\n        :disabled=\"disabled || disableButton\"\r\n        :color=\"color\"\r\n        :to=\"splitTo\"\r\n        @click=\"mainButtonClick\"\r\n      >\r\n        <slot name=\"label\">\r\n          {{ label }}\r\n        </slot>\r\n      </va-button>\r\n      <va-dropdown\r\n        :disabled=\"disabled || disableDropdown\"\r\n        :position=\"position\"\r\n        :offset=\"$props.offset\"\r\n        v-model=\"showDropdown\"\r\n        :stateful=\"stateful\"\r\n      >\r\n        <template #anchor>\r\n          <va-button\r\n            :size=\"size\"\r\n            :flat=\"flat\"\r\n            :outline=\"outline\"\r\n            :disabled=\"disabled || disableDropdown\"\r\n            :color=\"color\"\r\n            :icon=\"computedIcon\"\r\n            @click=\"click\"\r\n          />\r\n        </template>\r\n        <va-dropdown-content>\r\n          <slot />\r\n        </va-dropdown-content>\r\n      </va-dropdown>\r\n    </va-button-group>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { SizeMixin } from '../../mixins/SizeMixin'\r\n\r\nimport VaDropdown, { VaDropdownContent } from '../va-dropdown'\r\nimport VaButton from '../va-button'\r\nimport VaButtonGroup from '../va-button-group'\r\n\r\nclass ButtonDropdownProps {\r\n  modelValue = prop<boolean>({ type: Boolean, default: false })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  outline = prop<boolean>({ type: Boolean, default: false })\r\n  disableButton = prop<boolean>({ type: Boolean, default: false })\r\n  disableDropdown = prop<boolean>({ type: Boolean, default: false })\r\n  flat = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  size = prop<string>({\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value: string) => {\r\n      return ['medium', 'small', 'large'].includes(value)\r\n    },\r\n  })\r\n\r\n  keepAnchorWidth = prop({ type: Boolean, default: false })\r\n  split = prop<boolean>({ type: Boolean })\r\n  splitTo = prop<string>({ type: String, default: '' })\r\n  icon = prop<string>({ type: String, default: 'expand_more' })\r\n  openedIcon = prop<string>({ type: String, default: 'expand_less' })\r\n  position = prop<string>({ type: String, default: 'bottom' })\r\n  label = prop<string>({ type: String })\r\n  offset = prop<number | number[]>({ type: [Array, Number], default: () => [] })\r\n  closeOnContentClick = prop<boolean>({ type: Boolean, default: true })\r\n  stateful = prop<boolean>({ type: Boolean, default: true })\r\n}\r\n\r\nconst ButtonDropdownPropsMixin = Vue.with(ButtonDropdownProps)\r\n\r\n@Options({\r\n  name: 'VaButtonDropdown',\r\n  components: { VaButtonGroup, VaButton, VaDropdown, VaDropdownContent },\r\n  emits: ['click', 'main-button-click', 'update:modelValue'],\r\n})\r\nexport default class VaButtonDropdown extends mixins(\r\n  SizeMixin,\r\n  ColorMixin,\r\n  ButtonDropdownPropsMixin,\r\n) {\r\n  get computedIcon (): string {\r\n    // @ts-ignore\r\n    return this.showDropdown ? this.$props.openedIcon : this.$props.icon\r\n  }\r\n\r\n  get computedClass () {\r\n    return {\r\n      'va-button-dropdown': true,\r\n      'va-button-dropdown--split': this.split,\r\n      'va-button-dropdown--normal': this.size === 'normal',\r\n      'va-button-dropdown--large': this.size === 'large',\r\n      'va-button-dropdown--small': this.size === 'small',\r\n    }\r\n  }\r\n\r\n  get showDropdown (): boolean {\r\n    return this.modelValue\r\n  }\r\n\r\n  set showDropdown (value: boolean) {\r\n    this.$emit('update:modelValue', value)\r\n  }\r\n\r\n  click (event: Event): void {\r\n    this.$emit('click', event)\r\n  }\r\n\r\n  mainButtonClick (event: Event): void {\r\n    this.$emit('main-button-click', event)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import \"variables\";\r\n\r\n.va-button-dropdown {\r\n  display: inline-block;\r\n\r\n  .va-button {\r\n    margin: var(--va-button-dropdown-button-margin);\r\n  }\r\n\r\n  &--split {\r\n    .va-dropdown {\r\n      .va-dropdown__anchor {\r\n        margin: 0;\r\n      }\r\n\r\n      .va-button {\r\n        border-top-left-radius: 0;\r\n        border-bottom-left-radius: 0;\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    &.va-button-dropdown--small {\r\n      .va-dropdown .va-button {\r\n        font-size: 1.6rem;\r\n      }\r\n    }\r\n\r\n    &.va-button-dropdown--large {\r\n      .va-dropdown .va-button {\r\n        font-size: 1.7rem;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaButtonDropdown from './VaButtonDropdown.vue'\r\n\r\nexport default withConfigTransport(VaButtonDropdown)\r\n"],"names":["ButtonDropdownPropsMixin","Vue","with","ButtonDropdownProps","constructor","this","prop","type","Boolean","default","String","validator","value","includes","Array","Number","VaButtonDropdown","mixins","SizeMixin","ColorMixin","computedIcon","showDropdown","$props","openedIcon","icon","computedClass","split","size","modelValue","$emit","click","event","mainButtonClick","Options","name","components","VaButtonGroup","VaButton","VaDropdown","VaDropdownContent","emits","_mergeProps","class","_ctx","outline","flat","_createVNode","disabled","color","to","onClick","_renderSlot","position","offset","stateful","anchor","withConfigTransport"],"mappings":"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"}