{"version":3,"file":"index25.js","sources":["../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue","../../src/components/va-file-upload/VaFileUploadUndo/VaFileUploadUndo.vue?vue&type=template&id=ce975680&lang.js","../../src/components/va-file-upload/VaFileUploadUndo/index.ts","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue","../../src/components/va-file-upload/VaFileUploadListItem/VaFileUploadListItem.vue?vue&type=template&id=90450f40&lang.js","../../src/components/va-file-upload/VaFileUploadListItem/index.ts","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue","../../src/components/va-file-upload/VaFileUploadGalleryItem/VaFileUploadGalleryItem.vue?vue&type=template&id=15a3107c&lang.js","../../src/components/va-file-upload/VaFileUploadGalleryItem/index.ts","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue","../../src/components/va-file-upload/VaFileUploadSingleItem/VaFileUploadSingleItem.vue?vue&type=template&id=28528720&lang.js","../../src/components/va-file-upload/VaFileUploadSingleItem/index.ts","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue","../../src/components/va-file-upload/VaFileUploadList/VaFileUploadList.vue?vue&type=template&id=6af3e000&lang.js","../../src/components/va-file-upload/VaFileUploadList/index.ts","../../src/components/va-file-upload/VaFileUpload.vue","../../src/components/va-file-upload/VaFileUpload.vue?vue&type=template&id=c04ee272&lang.js","../../src/components/va-file-upload/index.ts"],"sourcesContent":["<template>\r\n  <div class=\"va-file-upload-undo\">\r\n    <span>File was successfully deleted</span>\r\n    <va-button\r\n      @click=\"$emit('recover')\"\r\n      outline\r\n      size=\"small\"\r\n      class=\"va-file-upload-undo__button\"\r\n    >\r\n      Undo\r\n    </va-button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options } from 'vue-class-component'\r\n\r\nimport VaButton from '../../va-button'\r\n\r\n@Options({\r\n  name: 'VaFileUploadUndo',\r\n  components: {\r\n    VaButton,\r\n  },\r\n  emits: ['recover'],\r\n})\r\nexport default class VaFileUploadUndo extends Vue {\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'variables';\r\n\r\n.va-file-upload-undo {\r\n  height: var(--va-file-upload-undo-height);\r\n\r\n  &__button {\r\n    line-height: var(--va-file-upload-undo-button-line-height);\r\n    margin-top: var(--va-file-upload-undo-button-margin-top);\r\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"va-file-upload-undo\">\r\n    <span>File was successfully deleted</span>\r\n    <va-button\r\n      @click=\"$emit('recover')\"\r\n      outline\r\n      size=\"small\"\r\n      class=\"va-file-upload-undo__button\"\r\n    >\r\n      Undo\r\n    </va-button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options } from 'vue-class-component'\r\n\r\nimport VaButton from '../../va-button'\r\n\r\n@Options({\r\n  name: 'VaFileUploadUndo',\r\n  components: {\r\n    VaButton,\r\n  },\r\n  emits: ['recover'],\r\n})\r\nexport default class VaFileUploadUndo extends Vue {\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import 'variables';\r\n\r\n.va-file-upload-undo {\r\n  height: var(--va-file-upload-undo-height);\r\n\r\n  &__button {\r\n    line-height: var(--va-file-upload-undo-button-line-height);\r\n    margin-top: var(--va-file-upload-undo-button-margin-top);\r\n    margin-bottom: var(--va-file-upload-undo-button-margin-bottom);\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaFileUploadUndo from './VaFileUploadUndo.vue'\r\n\r\nexport default withConfigTransport(VaFileUploadUndo)\r\n","<template>\r\n  <va-card\r\n    class=\"va-file-upload-list-item\"\r\n    :stripe=\"removed\"\r\n    :stripeColor=\"color\"\r\n    no-margin\r\n    no-padding\r\n    :class=\"{'file-upload-list-item--undo': removed}\"\r\n  >\r\n    <va-file-upload-undo\r\n      @recover=\"recoverFile\"\r\n      v-if=\"removed\"\r\n    />\r\n    <div\r\n      class=\"va-file-upload-list-item__content\"\r\n      v-else\r\n    >\r\n      <div class=\"va-file-upload-list-item__name\">\r\n        {{ file.name }}\r\n      </div>\r\n      <div class=\"va-file-upload-list-item__size\">\r\n        {{ file.size }}\r\n      </div>\r\n      <va-icon\r\n        color=\"danger\"\r\n        name=\"clear\"\r\n        @click=\"removeFile()\"\r\n        class=\"va-file-upload-list-item__delete\"\r\n      />\r\n    </div>\r\n  </va-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaCard from '../../va-card'\r\nimport VaIcon from '../../va-icon'\r\n\r\nimport VaFileUploadUndo from '../VaFileUploadUndo'\r\n\r\nclass FileUploadListItemProps {\r\n  file = prop<Record<string, unknown>>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n\r\n  color = prop<string>({\r\n    type: String,\r\n    default: 'success',\r\n  })\r\n}\r\n\r\nconst FileUploadListItemPropsMixin = Vue.with(FileUploadListItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadListItem',\r\n  components: {\r\n    VaIcon,\r\n    VaCard,\r\n    VaFileUploadUndo,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadListItem extends mixins(FileUploadListItemPropsMixin) {\r\n  removed = false\r\n\r\n  removeFile () {\r\n    this.removed = true\r\n    setTimeout(() => {\r\n      if (this.removed) {\r\n        this.$emit('remove')\r\n        this.removed = false\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  recoverFile () {\r\n    this.removed = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../../styles/resources/resources';\r\n\r\n.va-file-upload-list-item {\r\n  & + & {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  line-height: 1.5rem;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding: 1.125rem 0.5rem 1rem 1rem;\r\n\r\n  &__content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &__name {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    flex-basis: 60%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__size {\r\n    color: $gray-light;\r\n  }\r\n\r\n  &__delete {\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &--undo {\r\n    background: none;\r\n    box-shadow: none;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <va-card\r\n    class=\"va-file-upload-list-item\"\r\n    :stripe=\"removed\"\r\n    :stripeColor=\"color\"\r\n    no-margin\r\n    no-padding\r\n    :class=\"{'file-upload-list-item--undo': removed}\"\r\n  >\r\n    <va-file-upload-undo\r\n      @recover=\"recoverFile\"\r\n      v-if=\"removed\"\r\n    />\r\n    <div\r\n      class=\"va-file-upload-list-item__content\"\r\n      v-else\r\n    >\r\n      <div class=\"va-file-upload-list-item__name\">\r\n        {{ file.name }}\r\n      </div>\r\n      <div class=\"va-file-upload-list-item__size\">\r\n        {{ file.size }}\r\n      </div>\r\n      <va-icon\r\n        color=\"danger\"\r\n        name=\"clear\"\r\n        @click=\"removeFile()\"\r\n        class=\"va-file-upload-list-item__delete\"\r\n      />\r\n    </div>\r\n  </va-card>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaCard from '../../va-card'\r\nimport VaIcon from '../../va-icon'\r\n\r\nimport VaFileUploadUndo from '../VaFileUploadUndo'\r\n\r\nclass FileUploadListItemProps {\r\n  file = prop<Record<string, unknown>>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n\r\n  color = prop<string>({\r\n    type: String,\r\n    default: 'success',\r\n  })\r\n}\r\n\r\nconst FileUploadListItemPropsMixin = Vue.with(FileUploadListItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadListItem',\r\n  components: {\r\n    VaIcon,\r\n    VaCard,\r\n    VaFileUploadUndo,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadListItem extends mixins(FileUploadListItemPropsMixin) {\r\n  removed = false\r\n\r\n  removeFile () {\r\n    this.removed = true\r\n    setTimeout(() => {\r\n      if (this.removed) {\r\n        this.$emit('remove')\r\n        this.removed = false\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  recoverFile () {\r\n    this.removed = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../../styles/resources/resources';\r\n\r\n.va-file-upload-list-item {\r\n  & + & {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  line-height: 1.5rem;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  padding: 1.125rem 0.5rem 1rem 1rem;\r\n\r\n  &__content {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  &__name {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    flex-basis: 60%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__size {\r\n    color: $gray-light;\r\n  }\r\n\r\n  &__delete {\r\n    font-size: 1.5rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &--undo {\r\n    background: none;\r\n    box-shadow: none;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaFileUploadListItem from './VaFileUploadListItem.vue'\r\n\r\nexport default withConfigTransport(VaFileUploadListItem)\r\n","<template>\r\n  <div\r\n    v-if=\"removed\"\r\n    class=\"va-file-upload-gallery-item\"\r\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\r\n  >\r\n    <va-file-upload-undo\r\n      class=\"va-file-upload-gallery-item--undo\"\r\n      @recover=\"recoverImage\"\r\n    />\r\n  </div>\r\n\r\n  <div\r\n    v-else\r\n    class=\"va-file-upload-gallery-item\"\r\n    :class=\"{'file-upload-gallery-item_not-image': !this.previewImage}\"\r\n  >\r\n    <img\r\n      v-if=\"previewImage\"\r\n      :src=\"previewImage\"\r\n      alt=\"\"\r\n      class=\"va-file-upload-gallery-item__image\"\r\n    >\r\n    <div\r\n      class=\"va-file-upload-gallery-item__overlay\"\r\n      :style=\"overlayStyles\"\r\n    >\r\n      <div\r\n        class=\"va-file-upload-gallery-item__name\"\r\n        :title=\"file.name\"\r\n      >\r\n        {{ file.name }}\r\n      </div>\r\n      <va-icon\r\n        name=\"delete_outline\"\r\n        color=\"danger\"\r\n        class=\"va-file-upload-gallery-item__delete\"\r\n        @click=\"removeImage()\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport { colorToRgba } from '../../../services/color-config/color-functions'\r\nimport VaIcon from '../../va-icon'\r\n\r\nimport VaFileUploadUndo from '../VaFileUploadUndo'\r\n\r\nclass FileUploadGalleryItemProps {\r\n  file = prop<any>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n\r\n  color = prop<string>({\r\n    type: String,\r\n    default: 'success',\r\n  })\r\n}\r\n\r\nconst FileUploadGalleryItemPropsMixin = Vue.with(FileUploadGalleryItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadGalleryItem',\r\n  components: {\r\n    VaIcon,\r\n    VaFileUploadUndo,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadGalleryItem extends mixins(FileUploadGalleryItemPropsMixin) {\r\n  previewImage = ''\r\n  removed = false\r\n\r\n  created () {\r\n    watch(() => this.$props.file, () => {\r\n      this.convertToImg()\r\n    })\r\n  }\r\n\r\n  get overlayStyles () {\r\n    return {\r\n      backgroundColor: colorToRgba(this.$props.color as string, 0.7),\r\n    }\r\n  }\r\n\r\n  removeImage () {\r\n    this.removed = true\r\n    setTimeout(() => {\r\n      if (this.removed) {\r\n        this.$emit('remove')\r\n        this.removed = false\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  recoverImage () {\r\n    this.removed = false\r\n  }\r\n\r\n  convertToImg () {\r\n    if (!this.$props.file.name) {\r\n      return\r\n    }\r\n    if (this.$props.file.image && this.$props.file.image.url) {\r\n      this.previewImage = this.$props.file.image.url\r\n    } else {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(this?.$props?.file?.image)\r\n      reader.onload = (e: any) => {\r\n        if (e.target.result.includes('image')) {\r\n          this.previewImage = e.target.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.convertToImg()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../../styles/resources/resources';\r\n\r\n$max-image-size: 8.5714rem;\r\n\r\n.va-file-upload-gallery-item {\r\n  display: flex;\r\n  position: relative;\r\n  margin-bottom: 1rem;\r\n  margin-right: 0.5rem;\r\n  flex-basis: calc(14.2857% - 0.5rem);\r\n  max-width: calc(14.2857% - 0.5rem);\r\n  border-radius: 0.375rem;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  align-items: stretch;\r\n\r\n  @include media-breakpoint-down(md) {\r\n    flex-basis: calc(16.667% - 0.5rem);\r\n    max-width: calc(16.667% - 0.5rem);\r\n  }\r\n\r\n  @include media-breakpoint-down(sm) {\r\n    flex-basis: calc(20% - 0.5rem);\r\n    max-width: calc(20% - 0.5rem);\r\n  }\r\n\r\n  @include media-breakpoint-down(xs) {\r\n    flex-basis: calc(50% - 0.5rem);\r\n    max-width: calc(50% - 0.5rem);\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &:hover {\r\n    .va-file-upload-gallery-item__overlay {\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  &__overlay {\r\n    display: flex;\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    flex-direction: column;\r\n    padding: 0.5rem;\r\n    background: rgba($lighter-green, 0.8);\r\n    z-index: -1;\r\n  }\r\n\r\n  &__image {\r\n    width: 100%;\r\n    box-shadow: $card-box-shadow;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &__name {\r\n    color: $vue-darkest-blue;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-size: 0.875rem;\r\n  }\r\n\r\n  &__delete {\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    margin-top: auto;\r\n  }\r\n\r\n  &--undo {\r\n    box-shadow: none;\r\n\r\n    .va-file-upload-gallery-item--undo {\r\n      padding: 0.5rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-size: 0.875rem;\r\n      height: 100%;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n\r\n      span {\r\n        margin-right: 0.5rem;\r\n      }\r\n\r\n      .va-button {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.file-upload-gallery-item_not-image {\r\n  .file-upload-gallery-item__overlay {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n</style>\r\n","<template>\r\n  <div\r\n    v-if=\"removed\"\r\n    class=\"va-file-upload-gallery-item\"\r\n    :class=\"{'va-file-upload-gallery-item--undo': removed}\"\r\n  >\r\n    <va-file-upload-undo\r\n      class=\"va-file-upload-gallery-item--undo\"\r\n      @recover=\"recoverImage\"\r\n    />\r\n  </div>\r\n\r\n  <div\r\n    v-else\r\n    class=\"va-file-upload-gallery-item\"\r\n    :class=\"{'file-upload-gallery-item_not-image': !this.previewImage}\"\r\n  >\r\n    <img\r\n      v-if=\"previewImage\"\r\n      :src=\"previewImage\"\r\n      alt=\"\"\r\n      class=\"va-file-upload-gallery-item__image\"\r\n    >\r\n    <div\r\n      class=\"va-file-upload-gallery-item__overlay\"\r\n      :style=\"overlayStyles\"\r\n    >\r\n      <div\r\n        class=\"va-file-upload-gallery-item__name\"\r\n        :title=\"file.name\"\r\n      >\r\n        {{ file.name }}\r\n      </div>\r\n      <va-icon\r\n        name=\"delete_outline\"\r\n        color=\"danger\"\r\n        class=\"va-file-upload-gallery-item__delete\"\r\n        @click=\"removeImage()\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { watch } from 'vue'\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport { colorToRgba } from '../../../services/color-config/color-functions'\r\nimport VaIcon from '../../va-icon'\r\n\r\nimport VaFileUploadUndo from '../VaFileUploadUndo'\r\n\r\nclass FileUploadGalleryItemProps {\r\n  file = prop<any>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n\r\n  color = prop<string>({\r\n    type: String,\r\n    default: 'success',\r\n  })\r\n}\r\n\r\nconst FileUploadGalleryItemPropsMixin = Vue.with(FileUploadGalleryItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadGalleryItem',\r\n  components: {\r\n    VaIcon,\r\n    VaFileUploadUndo,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadGalleryItem extends mixins(FileUploadGalleryItemPropsMixin) {\r\n  previewImage = ''\r\n  removed = false\r\n\r\n  created () {\r\n    watch(() => this.$props.file, () => {\r\n      this.convertToImg()\r\n    })\r\n  }\r\n\r\n  get overlayStyles () {\r\n    return {\r\n      backgroundColor: colorToRgba(this.$props.color as string, 0.7),\r\n    }\r\n  }\r\n\r\n  removeImage () {\r\n    this.removed = true\r\n    setTimeout(() => {\r\n      if (this.removed) {\r\n        this.$emit('remove')\r\n        this.removed = false\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  recoverImage () {\r\n    this.removed = false\r\n  }\r\n\r\n  convertToImg () {\r\n    if (!this.$props.file.name) {\r\n      return\r\n    }\r\n    if (this.$props.file.image && this.$props.file.image.url) {\r\n      this.previewImage = this.$props.file.image.url\r\n    } else {\r\n      const reader = new FileReader()\r\n      reader.readAsDataURL(this?.$props?.file?.image)\r\n      reader.onload = (e: any) => {\r\n        if (e.target.result.includes('image')) {\r\n          this.previewImage = e.target.result\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  mounted () {\r\n    this.convertToImg()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../../styles/resources/resources';\r\n\r\n$max-image-size: 8.5714rem;\r\n\r\n.va-file-upload-gallery-item {\r\n  display: flex;\r\n  position: relative;\r\n  margin-bottom: 1rem;\r\n  margin-right: 0.5rem;\r\n  flex-basis: calc(14.2857% - 0.5rem);\r\n  max-width: calc(14.2857% - 0.5rem);\r\n  border-radius: 0.375rem;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  align-items: stretch;\r\n\r\n  @include media-breakpoint-down(md) {\r\n    flex-basis: calc(16.667% - 0.5rem);\r\n    max-width: calc(16.667% - 0.5rem);\r\n  }\r\n\r\n  @include media-breakpoint-down(sm) {\r\n    flex-basis: calc(20% - 0.5rem);\r\n    max-width: calc(20% - 0.5rem);\r\n  }\r\n\r\n  @include media-breakpoint-down(xs) {\r\n    flex-basis: calc(50% - 0.5rem);\r\n    max-width: calc(50% - 0.5rem);\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &:hover {\r\n    .va-file-upload-gallery-item__overlay {\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  &__overlay {\r\n    display: flex;\r\n    position: absolute;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    flex-direction: column;\r\n    padding: 0.5rem;\r\n    background: rgba($lighter-green, 0.8);\r\n    z-index: -1;\r\n  }\r\n\r\n  &__image {\r\n    width: 100%;\r\n    box-shadow: $card-box-shadow;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &__name {\r\n    color: $vue-darkest-blue;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    font-size: 0.875rem;\r\n  }\r\n\r\n  &__delete {\r\n    cursor: pointer;\r\n    font-size: 1.5rem;\r\n    margin-top: auto;\r\n  }\r\n\r\n  &--undo {\r\n    box-shadow: none;\r\n\r\n    .va-file-upload-gallery-item--undo {\r\n      padding: 0.5rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      font-size: 0.875rem;\r\n      height: 100%;\r\n      justify-content: space-between;\r\n      align-items: flex-start;\r\n\r\n      span {\r\n        margin-right: 0.5rem;\r\n      }\r\n\r\n      .va-button {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.file-upload-gallery-item_not-image {\r\n  .file-upload-gallery-item__overlay {\r\n    display: flex;\r\n  }\r\n}\r\n\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaFileUploadGalleryItem from './VaFileUploadGalleryItem.vue'\r\n\r\nexport default withConfigTransport(VaFileUploadGalleryItem)\r\n","<template>\r\n  <div class=\"va-file-upload-single-item\">\r\n    <div class=\"va-file-upload-single-item__name\">\r\n      {{ file.name }}\r\n    </div>\r\n    <va-button\r\n      flat\r\n      @click=\"$emit('remove')\"\r\n      color=\"danger\"\r\n      size=\"small\"\r\n      class=\"va-file-upload-single-item__button\"\r\n    >\r\n      Delete\r\n    </va-button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaButton from '../../va-button'\r\n\r\nclass FileUploadSingleItemProps {\r\n  file = prop<Record<string, unknown>>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n}\r\n\r\nconst FileUploadSingleItemPropsMixin = Vue.with(FileUploadSingleItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadSingleItem',\r\n  components: {\r\n    VaButton,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadSingleItem extends mixins(FileUploadSingleItemPropsMixin) {\r\n\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.va-file-upload-single-item {\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 100%;\r\n\r\n  &__name {\r\n    margin-right: 0.25rem;\r\n    max-width: 80%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  &__button {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-weight: 700;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"va-file-upload-single-item\">\r\n    <div class=\"va-file-upload-single-item__name\">\r\n      {{ file.name }}\r\n    </div>\r\n    <va-button\r\n      flat\r\n      @click=\"$emit('remove')\"\r\n      color=\"danger\"\r\n      size=\"small\"\r\n      class=\"va-file-upload-single-item__button\"\r\n    >\r\n      Delete\r\n    </va-button>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Options, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaButton from '../../va-button'\r\n\r\nclass FileUploadSingleItemProps {\r\n  file = prop<Record<string, unknown>>({\r\n    type: Object,\r\n    default: null,\r\n  })\r\n}\r\n\r\nconst FileUploadSingleItemPropsMixin = Vue.with(FileUploadSingleItemProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadSingleItem',\r\n  components: {\r\n    VaButton,\r\n  },\r\n  emits: ['remove'],\r\n})\r\nexport default class VaFileUploadSingleItem extends mixins(FileUploadSingleItemPropsMixin) {\r\n\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.va-file-upload-single-item {\r\n  display: flex;\r\n  align-items: center;\r\n  max-width: 100%;\r\n\r\n  &__name {\r\n    margin-right: 0.25rem;\r\n    max-width: 80%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  &__button {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    font-weight: 700;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaFileUploadSingleItem from './VaFileUploadSingleItem.vue'\r\n\r\nexport default withConfigTransport(VaFileUploadSingleItem)\r\n","<template>\r\n  <div\r\n    class=\"va-file-upload-list\"\r\n    :class=\"`va-file-upload-list--${type}`\"\r\n  >\r\n    <template v-if=\"type === 'list'\">\r\n      <va-file-upload-list-item\r\n        v-for=\"(file, index) in filesList\"\r\n        :key=\"file.name\"\r\n        :file=\"file\"\r\n        :color=\"color\"\r\n        @remove=\"$emit('remove', index)\"\r\n      />\r\n    </template>\r\n    <template v-if=\"type === 'gallery'\">\r\n      <va-file-upload-gallery-item\r\n        v-for=\"(file, index) in filesList\"\r\n        :file=\"file\"\r\n        :key=\"file.name\"\r\n        :color=\"color\"\r\n        @remove=\"$emit('remove', index)\"\r\n      />\r\n    </template>\r\n    <va-file-upload-single-item\r\n      v-if=\"type === 'single' && filesList.length\"\r\n      :file=\"filesList[filesList.length - 1]\"\r\n      @remove=\"$emit('removeSingle')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaFileUploadListItem from '../VaFileUploadListItem'\r\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\r\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\r\n\r\nclass FileUploadListProps {\r\n  type = prop<string>({ type: String, default: '' })\r\n  files = prop<any|any[]>({ type: [Object, Array], default: null })\r\n  color = prop<string>({ type: String, default: 'success' })\r\n}\r\n\r\nconst FileUploadListPropsMixin = Vue.with(FileUploadListProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadList',\r\n  components: {\r\n    VaFileUploadListItem,\r\n    VaFileUploadGalleryItem,\r\n    VaFileUploadSingleItem,\r\n  },\r\n  emits: ['remove', 'removeSingle'],\r\n})\r\nexport default class VaFileUploadList extends mixins(\r\n  FileUploadListPropsMixin,\r\n) {\r\n  get filesList () {\r\n    return this.files.map(this.convertFile)\r\n  }\r\n\r\n  convertFile (file: any) {\r\n    return {\r\n      name: file.name || file.url,\r\n      size: file.size ? this.formatSize(file.size) : '',\r\n      date: this.formatDate(new Date()),\r\n      image: file,\r\n    }\r\n  }\r\n\r\n  formatSize (bytes: number) {\r\n    if (bytes === 0) { return '0 Bytes' }\r\n    const k = 1024\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n  }\r\n\r\n  formatDate (date: Date) {\r\n    if (!date) { return '' }\r\n    return date.toLocaleDateString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric',\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.va-file-upload-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0 0 1.5rem;\r\n\r\n  &--gallery {\r\n    padding-bottom: 0.5rem;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-file-upload-list\"\r\n    :class=\"`va-file-upload-list--${type}`\"\r\n  >\r\n    <template v-if=\"type === 'list'\">\r\n      <va-file-upload-list-item\r\n        v-for=\"(file, index) in filesList\"\r\n        :key=\"file.name\"\r\n        :file=\"file\"\r\n        :color=\"color\"\r\n        @remove=\"$emit('remove', index)\"\r\n      />\r\n    </template>\r\n    <template v-if=\"type === 'gallery'\">\r\n      <va-file-upload-gallery-item\r\n        v-for=\"(file, index) in filesList\"\r\n        :file=\"file\"\r\n        :key=\"file.name\"\r\n        :color=\"color\"\r\n        @remove=\"$emit('remove', index)\"\r\n      />\r\n    </template>\r\n    <va-file-upload-single-item\r\n      v-if=\"type === 'single' && filesList.length\"\r\n      :file=\"filesList[filesList.length - 1]\"\r\n      @remove=\"$emit('removeSingle')\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, prop, mixins } from 'vue-class-component'\r\n\r\nimport VaFileUploadListItem from '../VaFileUploadListItem'\r\nimport VaFileUploadGalleryItem from '../VaFileUploadGalleryItem'\r\nimport VaFileUploadSingleItem from '../VaFileUploadSingleItem'\r\n\r\nclass FileUploadListProps {\r\n  type = prop<string>({ type: String, default: '' })\r\n  files = prop<any|any[]>({ type: [Object, Array], default: null })\r\n  color = prop<string>({ type: String, default: 'success' })\r\n}\r\n\r\nconst FileUploadListPropsMixin = Vue.with(FileUploadListProps)\r\n\r\n@Options({\r\n  name: 'VaFileUploadList',\r\n  components: {\r\n    VaFileUploadListItem,\r\n    VaFileUploadGalleryItem,\r\n    VaFileUploadSingleItem,\r\n  },\r\n  emits: ['remove', 'removeSingle'],\r\n})\r\nexport default class VaFileUploadList extends mixins(\r\n  FileUploadListPropsMixin,\r\n) {\r\n  get filesList () {\r\n    return this.files.map(this.convertFile)\r\n  }\r\n\r\n  convertFile (file: any) {\r\n    return {\r\n      name: file.name || file.url,\r\n      size: file.size ? this.formatSize(file.size) : '',\r\n      date: this.formatDate(new Date()),\r\n      image: file,\r\n    }\r\n  }\r\n\r\n  formatSize (bytes: number) {\r\n    if (bytes === 0) { return '0 Bytes' }\r\n    const k = 1024\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\r\n  }\r\n\r\n  formatDate (date: Date) {\r\n    if (!date) { return '' }\r\n    return date.toLocaleDateString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric',\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.va-file-upload-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 0 0 1.5rem;\r\n\r\n  &--gallery {\r\n    padding-bottom: 0.5rem;\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../../services/config-transport/withConfigTransport'\r\nimport VaFileUploadList from './VaFileUploadList.vue'\r\n\r\nexport default withConfigTransport(VaFileUploadList)\r\n","<template>\r\n  <div\r\n    class=\"va-file-upload\"\r\n    :class=\"{'va-file-upload--dropzone': dropzone}\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div class=\"va-file-upload__field\">\r\n      <div\r\n        class=\"va-file-upload__field__text\"\r\n        v-if=\"dropzone\"\r\n      >\r\n        Drag’n’drop files or\r\n      </div>\r\n      <va-button\r\n        class=\"va-file-upload__field__button\"\r\n        :disabled=\"disabled\"\r\n        :color=\"colorComputed\"\r\n        @click=\"callFileDialogue()\"\r\n        icon=\"\"\r\n        icon-right=\"\"\r\n      >\r\n        Upload file\r\n      </va-button>\r\n      <input\r\n        ref=\"fileInput\"\r\n        type=\"file\"\r\n        class=\"va-file-upload__field__input\"\r\n        :accept=\"fileTypes\"\r\n        :multiple=\"type !== 'single'\"\r\n        :disabled=\"disabled\"\r\n        @change=\"changeFieldValue\"\r\n      >\r\n    </div>\r\n    <va-file-upload-list\r\n      v-if=\"files.length\"\r\n      :type=\"type\"\r\n      :files=\"files\"\r\n      :color=\"colorComputed\"\r\n      @remove=\"removeFile\"\r\n      @removeSingle=\"removeSingleFile\"\r\n    />\r\n    <va-modal\r\n      v-model=\"modal\"\r\n      hide-default-actions\r\n      title=\"File validation\"\r\n      message=\"File type is incorrect!\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\r\nimport VaButton from '../va-button'\r\nimport VaModal from '../va-modal'\r\n\r\nimport VaFileUploadList from './VaFileUploadList'\r\n\r\nclass FileUploadProps {\r\n  type = prop<string>({\r\n    type: String,\r\n    default: 'list',\r\n    validator (modelValue: string) {\r\n      return ['list', 'gallery', 'single'].includes(modelValue)\r\n    },\r\n  })\r\n\r\n  fileTypes = prop<string>({ type: String, default: '' })\r\n  dropzone = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<any[]>({ type: Array, default: () => [] })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n}\r\n\r\nconst FileUploadPropsMixin = Vue.with(FileUploadProps)\r\n\r\n@Options({\r\n  name: 'VaFileUpload',\r\n  components: {\r\n    VaModal,\r\n    VaButton,\r\n    VaFileUploadList,\r\n  },\r\n  emits: ['update:modelValue'],\r\n})\r\nexport default class VaFileUpload extends mixins(\r\n  ColorMixin,\r\n  FileUploadPropsMixin,\r\n) {\r\n  modal = false\r\n\r\n  get computedStyle () {\r\n    return {\r\n      backgroundColor: this.dropzone ? shiftHSLAColor(this.colorComputed, { a: -0.92 }) : 'transparent',\r\n    }\r\n  }\r\n\r\n  get files () {\r\n    return this.modelValue\r\n  }\r\n\r\n  set files (files) {\r\n    this.$emit('update:modelValue', files)\r\n  }\r\n\r\n  changeFieldValue (e: Event) {\r\n    this.uploadFile(e)\r\n    ;(this as any).$refs.fileInput.value = ''\r\n  }\r\n\r\n  uploadFile (e: any) {\r\n    let files = e.target.files || e.dataTransfer.files\r\n\r\n    // type validation\r\n    if (this.fileTypes) {\r\n      files = this.validateFiles(Array.from(files))\r\n    }\r\n    this.files = [...this.files, ...files]\r\n  }\r\n\r\n  removeFile (index: number) {\r\n    this.files.splice(index, 1)\r\n  }\r\n\r\n  removeSingleFile () {\r\n    this.files = []\r\n  }\r\n\r\n  validateFiles (files: any) {\r\n    return files.filter((file: any) => {\r\n      const fileName = file.name || file.url\r\n      if (!fileName) {\r\n        return false\r\n      } else {\r\n        if (file.url) {\r\n          return true\r\n        } else {\r\n          const MIMETypes = ['audio/*', 'video/*', 'image/*']\r\n          const isContainedMIMEType = MIMETypes.find((t) => this.fileTypes.includes(t))\r\n\r\n          if (isContainedMIMEType) {\r\n            // Do not validatie MIMEType becouse there is too much to validate.\r\n            return true\r\n          }\r\n\r\n          const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\r\n\r\n          const isCorrectExt = this.fileTypes.includes(extn)\r\n          if (!isCorrectExt) {\r\n            this.modal = true\r\n          }\r\n\r\n          return isCorrectExt\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  callFileDialogue () {\r\n    // HACK Seems like safari fix. If you happen to stumble upon this and have mac - please test.\r\n    (this as any).$refs.fileInput.click()\r\n  }\r\n\r\n  mounted () {\r\n    this.files = this.validateFiles(this.files)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../styles/resources/resources';\r\n@import 'variables';\r\n\r\n.va-file-upload {\r\n  position: var(--va-file-upload-position);\r\n\r\n  &--dropzone {\r\n    background-color: var(--va-file-upload-dropzone-background-color);\r\n    padding: var(--va-file-upload-dropzone-padding);\r\n    overflow: var(--va-file-upload-dropzone-overflow);\r\n    border-radius: var(--va-file-upload-dropzone-border-radius);\r\n    cursor: var(--va-file-upload-dropzone-cursor);\r\n\r\n    .va-file-upload__field {\r\n      justify-content: center;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 2rem 1rem;\r\n      transition: height 0.2s;\r\n      overflow: visible;\r\n      flex-wrap: wrap;\r\n\r\n      @include media-breakpoint-down(xs) {\r\n        flex-direction: column;\r\n        padding: 0 0 1rem;\r\n\r\n        &__text {\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n\r\n    .va-file-upload-list {\r\n      padding-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  &__field {\r\n    padding-bottom: var(--va-file-upload-dropzone-field-padding-bottom);\r\n    overflow: var(--va-file-upload-dropzone-field-overflow);\r\n    display: var(--va-file-upload-dropzone-field-display);\r\n    align-items: var(--va-file-upload-dropzone-field-align-items);\r\n    position: var(--va-file-upload-dropzone-field-position);\r\n\r\n    &__button {\r\n      margin: var(--va-file-upload-dropzone-field-button-margin);\r\n      z-index: var(--va-file-upload-dropzone-field-button-zindex);\r\n    }\r\n\r\n    &__text {\r\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\r\n    }\r\n\r\n    &__input {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      height: 100%;\r\n      width: 100%;\r\n      color: transparent;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n\r\n      &::-webkit-file-upload-button {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@include media-breakpoint-down(xs) {\r\n  .va-file-upload {\r\n    &--dropzone {\r\n      padding: 1.5rem 1rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    class=\"va-file-upload\"\r\n    :class=\"{'va-file-upload--dropzone': dropzone}\"\r\n    :style=\"computedStyle\"\r\n  >\r\n    <div class=\"va-file-upload__field\">\r\n      <div\r\n        class=\"va-file-upload__field__text\"\r\n        v-if=\"dropzone\"\r\n      >\r\n        Drag’n’drop files or\r\n      </div>\r\n      <va-button\r\n        class=\"va-file-upload__field__button\"\r\n        :disabled=\"disabled\"\r\n        :color=\"colorComputed\"\r\n        @click=\"callFileDialogue()\"\r\n        icon=\"\"\r\n        icon-right=\"\"\r\n      >\r\n        Upload file\r\n      </va-button>\r\n      <input\r\n        ref=\"fileInput\"\r\n        type=\"file\"\r\n        class=\"va-file-upload__field__input\"\r\n        :accept=\"fileTypes\"\r\n        :multiple=\"type !== 'single'\"\r\n        :disabled=\"disabled\"\r\n        @change=\"changeFieldValue\"\r\n      >\r\n    </div>\r\n    <va-file-upload-list\r\n      v-if=\"files.length\"\r\n      :type=\"type\"\r\n      :files=\"files\"\r\n      :color=\"colorComputed\"\r\n      @remove=\"removeFile\"\r\n      @removeSingle=\"removeSingleFile\"\r\n    />\r\n    <va-modal\r\n      v-model=\"modal\"\r\n      hide-default-actions\r\n      title=\"File validation\"\r\n      message=\"File type is incorrect!\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, prop, mixins, Vue } from 'vue-class-component'\r\n\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { shiftHSLAColor } from '../../services/color-config/color-functions'\r\nimport VaButton from '../va-button'\r\nimport VaModal from '../va-modal'\r\n\r\nimport VaFileUploadList from './VaFileUploadList'\r\n\r\nclass FileUploadProps {\r\n  type = prop<string>({\r\n    type: String,\r\n    default: 'list',\r\n    validator (modelValue: string) {\r\n      return ['list', 'gallery', 'single'].includes(modelValue)\r\n    },\r\n  })\r\n\r\n  fileTypes = prop<string>({ type: String, default: '' })\r\n  dropzone = prop<boolean>({ type: Boolean, default: false })\r\n  modelValue = prop<any[]>({ type: Array, default: () => [] })\r\n  color = prop<string>({ type: String, default: 'primary' })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n}\r\n\r\nconst FileUploadPropsMixin = Vue.with(FileUploadProps)\r\n\r\n@Options({\r\n  name: 'VaFileUpload',\r\n  components: {\r\n    VaModal,\r\n    VaButton,\r\n    VaFileUploadList,\r\n  },\r\n  emits: ['update:modelValue'],\r\n})\r\nexport default class VaFileUpload extends mixins(\r\n  ColorMixin,\r\n  FileUploadPropsMixin,\r\n) {\r\n  modal = false\r\n\r\n  get computedStyle () {\r\n    return {\r\n      backgroundColor: this.dropzone ? shiftHSLAColor(this.colorComputed, { a: -0.92 }) : 'transparent',\r\n    }\r\n  }\r\n\r\n  get files () {\r\n    return this.modelValue\r\n  }\r\n\r\n  set files (files) {\r\n    this.$emit('update:modelValue', files)\r\n  }\r\n\r\n  changeFieldValue (e: Event) {\r\n    this.uploadFile(e)\r\n    ;(this as any).$refs.fileInput.value = ''\r\n  }\r\n\r\n  uploadFile (e: any) {\r\n    let files = e.target.files || e.dataTransfer.files\r\n\r\n    // type validation\r\n    if (this.fileTypes) {\r\n      files = this.validateFiles(Array.from(files))\r\n    }\r\n    this.files = [...this.files, ...files]\r\n  }\r\n\r\n  removeFile (index: number) {\r\n    this.files.splice(index, 1)\r\n  }\r\n\r\n  removeSingleFile () {\r\n    this.files = []\r\n  }\r\n\r\n  validateFiles (files: any) {\r\n    return files.filter((file: any) => {\r\n      const fileName = file.name || file.url\r\n      if (!fileName) {\r\n        return false\r\n      } else {\r\n        if (file.url) {\r\n          return true\r\n        } else {\r\n          const MIMETypes = ['audio/*', 'video/*', 'image/*']\r\n          const isContainedMIMEType = MIMETypes.find((t) => this.fileTypes.includes(t))\r\n\r\n          if (isContainedMIMEType) {\r\n            // Do not validatie MIMEType becouse there is too much to validate.\r\n            return true\r\n          }\r\n\r\n          const extn = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\r\n\r\n          const isCorrectExt = this.fileTypes.includes(extn)\r\n          if (!isCorrectExt) {\r\n            this.modal = true\r\n          }\r\n\r\n          return isCorrectExt\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  callFileDialogue () {\r\n    // HACK Seems like safari fix. If you happen to stumble upon this and have mac - please test.\r\n    (this as any).$refs.fileInput.click()\r\n  }\r\n\r\n  mounted () {\r\n    this.files = this.validateFiles(this.files)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import '../../styles/resources/resources';\r\n@import 'variables';\r\n\r\n.va-file-upload {\r\n  position: var(--va-file-upload-position);\r\n\r\n  &--dropzone {\r\n    background-color: var(--va-file-upload-dropzone-background-color);\r\n    padding: var(--va-file-upload-dropzone-padding);\r\n    overflow: var(--va-file-upload-dropzone-overflow);\r\n    border-radius: var(--va-file-upload-dropzone-border-radius);\r\n    cursor: var(--va-file-upload-dropzone-cursor);\r\n\r\n    .va-file-upload__field {\r\n      justify-content: center;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 0 2rem 1rem;\r\n      transition: height 0.2s;\r\n      overflow: visible;\r\n      flex-wrap: wrap;\r\n\r\n      @include media-breakpoint-down(xs) {\r\n        flex-direction: column;\r\n        padding: 0 0 1rem;\r\n\r\n        &__text {\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n\r\n    .va-file-upload-list {\r\n      padding-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  &__field {\r\n    padding-bottom: var(--va-file-upload-dropzone-field-padding-bottom);\r\n    overflow: var(--va-file-upload-dropzone-field-overflow);\r\n    display: var(--va-file-upload-dropzone-field-display);\r\n    align-items: var(--va-file-upload-dropzone-field-align-items);\r\n    position: var(--va-file-upload-dropzone-field-position);\r\n\r\n    &__button {\r\n      margin: var(--va-file-upload-dropzone-field-button-margin);\r\n      z-index: var(--va-file-upload-dropzone-field-button-zindex);\r\n    }\r\n\r\n    &__text {\r\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\r\n    }\r\n\r\n    &__input {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      height: 100%;\r\n      width: 100%;\r\n      color: transparent;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n\r\n      &::-webkit-file-upload-button {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@include media-breakpoint-down(xs) {\r\n  .va-file-upload {\r\n    &--dropzone {\r\n      padding: 1.5rem 1rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaFileUpload from './VaFileUpload.vue'\r\n\r\nexport { default as VaFileUploadGalleryItem } from './VaFileUploadGalleryItem'\r\nexport { default as VaFileUploadList } from './VaFileUploadList'\r\nexport { default as VaFileUploadListItem } from './VaFileUploadListItem'\r\nexport { default as VaFileUploadSingleItem } from './VaFileUploadSingleItem'\r\nexport { default as VaFileUploadUndo } from './VaFileUploadUndo'\r\n\r\nexport default withConfigTransport(VaFileUpload)\r\n"],"names":["VaFileUploadUndo","Vue","Options","name","components","VaButton","emits","_mergeProps","class","outline","size","withConfigTransport","FileUploadListItemPropsMixin","with","FileUploadListItemProps","constructor","this","prop","type","Object","default","String","VaFileUploadListItem","mixins","removeFile","removed","setTimeout","$emit","recoverFile","VaIcon","VaCard","_ctx","stripe","stripeColor","_createBlock","onRecover","_createVNode","color","onClick","FileUploadGalleryItemPropsMixin","FileUploadGalleryItemProps","VaFileUploadGalleryItem","created","watch","$props","file","convertToImg","overlayStyles","backgroundColor","colorToRgba","removeImage","recoverImage","image","url","previewImage","reader","FileReader","readAsDataURL","onload","e","target","result","includes","mounted","FileUploadSingleItemPropsMixin","FileUploadSingleItemProps","VaFileUploadSingleItem","flat","FileUploadListPropsMixin","FileUploadListProps","Array","VaFileUploadList","filesList","files","map","convertFile","formatSize","date","formatDate","Date","bytes","i","Math","floor","log","parseFloat","pow","toFixed","toLocaleDateString","hour","minute","month","day","year","index","key","length","FileUploadPropsMixin","FileUploadProps","validator","modelValue","Boolean","VaFileUpload","ColorMixin","computedStyle","dropzone","shiftHSLAColor","colorComputed","a","changeFieldValue","uploadFile","$refs","fileInput","value","dataTransfer","fileTypes","validateFiles","from","splice","removeSingleFile","filter","fileName","find","t","extn","substring","lastIndexOf","toLowerCase","isCorrectExt","modal","callFileDialogue","click","VaModal","style","disabled","icon","title","message"],"mappings":"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"}