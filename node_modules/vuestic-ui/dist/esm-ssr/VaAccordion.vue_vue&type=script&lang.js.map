{"version":3,"file":"VaAccordion.vue_vue&type=script&lang.js","sources":["../../src/components/va-accordion/VaAccordion.vue"],"sourcesContent":["<template>\r\n  <div class=\"va-accordion\">\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useStateful } from '../../mixins/StatefulMixin/cStatefulMixin'\r\nimport { provide, defineComponent, ref, onMounted, onUpdated } from 'vue'\r\nimport Collapse from '../va-collapse/VaCollapse.vue'\r\n\r\nexport const AccordionServiceKey = Symbol('AccordionService')\r\n\r\nexport type Accordion = {\r\n  isInsideAccordion: boolean;\r\n  getProps: () => any;\r\n  getState: () => any;\r\n  onChildChange: (child: Collapse) => void;\r\n  onChildMounted: (child: Collapse) => void;\r\n  onChildUnmounted: (child: Collapse) => void;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'VaAccordion',\r\n  emits: ['update:modelValue'],\r\n  props: {\r\n    modelValue: { type: Array, default: () => [] },\r\n    multiply: { type: Boolean, default: false },\r\n    inset: { type: Boolean, default: false },\r\n    popout: { type: Boolean, default: false },\r\n  },\r\n  setup (props, ctx) {\r\n    const stateful = useStateful(props, ctx.emit)\r\n    const collapses = ref<Collapse[]>([])\r\n\r\n    const getProps = () => ({ inset: props.inset, popout: props.popout })\r\n    const onChildMounted = (child: Collapse) => { collapses.value.push(child) }\r\n    const onChildUnmounted = (child: Collapse) => {\r\n      collapses.value = collapses.value.filter(collapse => collapse !== child)\r\n    }\r\n    const onChildChange = (child: Collapse) => {\r\n      const accordionValues = collapses.value.map((collapse: Collapse) => {\r\n        if (collapse === child) {\r\n          return collapse.valueProxy\r\n        }\r\n\r\n        if (!props.multiply) {\r\n          collapse.valueProxy = false\r\n        }\r\n\r\n        return collapse.valueProxy\r\n      })\r\n\r\n      stateful.valueComputed.value = accordionValues\r\n    }\r\n\r\n    const accordion = {\r\n      isInsideAccordion: true,\r\n      getProps,\r\n      getState: () => stateful.valueComputed,\r\n      onChildMounted,\r\n      onChildUnmounted,\r\n      onChildChange,\r\n    }\r\n\r\n    provide(AccordionServiceKey, accordion)\r\n\r\n    const updateCollapsesValues = () => {\r\n      collapses.value.forEach((collapse: Collapse, index: number) => {\r\n        collapse.valueProxy = stateful.valueComputed.value[index]\r\n      })\r\n    }\r\n\r\n    onMounted(updateCollapsesValues)\r\n    onUpdated(updateCollapsesValues)\r\n\r\n    return { collapses, value: stateful.valueComputed }\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.va-accordion {\r\n}\r\n</style>\r\n"],"names":["AccordionServiceKey","Symbol","defineComponent","name","emits","props","modelValue","type","Array","default","multiply","Boolean","inset","popout","setup","ctx","stateful","useStateful","emit","collapses","ref","provide","isInsideAccordion","getProps","getState","valueComputed","onChildMounted","child","value","push","onChildUnmounted","filter","collapse","onChildChange","accordionValues","map","valueProxy","updateCollapsesValues","forEach","index","onMounted","onUpdated"],"mappings":"wIAWaA,EAAsBC,OAAO,oBAW1C,MAAeC,EAAgB,CAC7BC,KAAM,cACNC,MAAO,CAAC,qBACRC,MAAO,CACLC,WAAY,CAAEC,KAAMC,MAAOC,QAAS,IAAM,IAC1CC,SAAU,CAAEH,KAAMI,QAASF,SAAS,GACpCG,MAAO,CAAEL,KAAMI,QAASF,SAAS,GACjCI,OAAQ,CAAEN,KAAMI,QAASF,SAAS,IAEpCK,MAAOT,EAAOU,GACZ,MAAMC,EAAWC,EAAYZ,EAAOU,EAAIG,MAClCC,EAAYC,EAAgB,IAgClCC,EAAQrB,EATU,CAChBsB,mBAAmB,EACnBC,SAvBe,MAASX,MAAOP,EAAMO,MAAOC,OAAQR,EAAMQ,SAwB1DW,SAAU,IAAMR,EAASS,cACzBC,eAxBsBC,IAAsBR,EAAUS,MAAMC,KAAKF,IAyBjEG,iBAxBwBH,IACxBR,EAAUS,MAAQT,EAAUS,MAAMG,QAAOC,GAAYA,IAAaL,KAwBlEM,cAtBqBN,IACrB,MAAMO,EAAkBf,EAAUS,MAAMO,KAAKH,IACvCA,IAAaL,GAIZtB,EAAMK,WACTsB,EAASI,YAAa,GAJfJ,EAASI,cAUpBpB,EAASS,cAAcG,MAAQM,KAcjC,MAAMG,sBAAwB,KAC5BlB,EAAUS,MAAMU,SAAQ,CAACN,EAAoBO,KAC3CP,EAASI,WAAapB,EAASS,cAAcG,MAAMW,OAOvD,OAHAC,EAAUH,uBACVI,EAAUJ,uBAEH,CAAElB,UAAAA,EAAWS,MAAOZ,EAASS"}