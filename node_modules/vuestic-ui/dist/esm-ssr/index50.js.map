{"version":3,"file":"index50.js","sources":["../../src/components/va-infinite-scroll/VaInfiniteScroll.vue","../../src/components/va-infinite-scroll/VaInfiniteScroll.vue?vue&type=template&id=b399cd12&lang.js","../../src/components/va-infinite-scroll/index.ts"],"sourcesContent":["<template>\r\n  <component\r\n    :is=\"$props.tag\"\r\n    class=\"va-infinite-scroll\"\r\n    :class=\"{'va-infinite-scroll--reversed': $props.reverse}\"\r\n  >\r\n    <slot\r\n      name=\"default\"\r\n      ref=\"content\"\r\n    />\r\n    <div\r\n      class=\"va-infinite-scroll__spinner\"\r\n      :class=\"{'va-infinite-scroll__spinner--invisible': !fetching}\"\r\n      ref=\"loadingSlotContainer\"\r\n    >\r\n      <slot\r\n        name=\"loading\"\r\n        v-if=\"!$props.disabled\"\r\n      >\r\n        <div\r\n          ref=\"defaultSpinner\"\r\n          class=\"va-infinite-scroll__spinner__default\"\r\n        >\r\n          <va-progress-circle\r\n            size=\"small\"\r\n            :thickness=\"0.15\"\r\n            :color=\"error ? colors.danger : colors.primary\"\r\n            indeterminate\r\n          />\r\n        </div>\r\n      </slot>\r\n    </div>\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { debounce } from 'lodash-es'\r\nimport { watch } from 'vue'\r\nimport { mixins, Options, prop, Vue } from 'vue-class-component'\r\n\r\nimport { sleep } from '../../services/utils'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { VaProgressCircle } from '../va-progress-bar'\r\n\r\nclass InfiniteScrollProps {\r\n  load = prop<Function>({ type: Function, required: true })\r\n  offset = prop<number>({ type: Number, default: 500 })\r\n  reverse = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  scrollTarget = prop<Element | string>({ type: [Object, String], default: null })\r\n  debounce = prop<number>({ type: Number, default: 100 })\r\n  tag = prop<string>({ type: String, default: 'div' })\r\n}\r\n\r\nconst InfiniteScrollPropsMixin = Vue.with(InfiniteScrollProps)\r\n\r\n@Options({\r\n  name: 'VaInfiniteScroll',\r\n  components: { VaProgressCircle },\r\n})\r\nexport default class VaInfiniteScroll extends mixins(\r\n  ColorMixin,\r\n  InfiniteScrollPropsMixin,\r\n) {\r\n  index = 0\r\n  fetching = false\r\n  error = false\r\n  initialHeight: any = null\r\n  debouncedLoad!: any\r\n  scrollTop!: number\r\n\r\n  created () {\r\n    watch(() => this.$props.disabled, (value) => {\r\n      if (value) {\r\n        this.stop()\r\n      } else {\r\n        this.resume()\r\n      }\r\n    })\r\n\r\n    watch(() => this.$props.debounce, (value) => {\r\n      this.setDebounce(value as number)\r\n    })\r\n  }\r\n\r\n  get scrollAmount () {\r\n    return this.$props.offset as number + 1 + this.$el.offsetHeight\r\n  }\r\n\r\n  get scrollTargetElement () {\r\n    return typeof this.$props.scrollTarget === 'string'\r\n      ? document.querySelector(this.$props.scrollTarget)\r\n      : this.$props.scrollTarget || this.$el.parentElement\r\n  }\r\n\r\n  get colors () {\r\n    return {\r\n      primary: this.theme.getColor('primary', '#23e066'),\r\n      danger: this.theme.getColor('danger', '#e34b4a'),\r\n    }\r\n  }\r\n\r\n  onLoad () {\r\n    if (this.$props.disabled || this.error || this.fetching) {\r\n      return\r\n    }\r\n\r\n    const { scrollTop, scrollHeight } = this.scrollTargetElement\r\n    const containerHeight = this.scrollTargetElement.offsetHeight\r\n    const isLoadingRequired = this.$props.reverse\r\n      ? scrollTop < this.scrollAmount\r\n      : scrollTop + containerHeight + this.scrollAmount >= scrollHeight\r\n    if (!isLoadingRequired) { return }\r\n\r\n    this.fetching = true\r\n    this.scrollTop = this.$props.reverse ? 0 : (this as any).$el.offsetHeight\r\n    this.initialHeight = this.$el.offsetHeight\r\n    this.$props.load()\r\n      .then(this.finishLoading).catch(this.onError)\r\n  }\r\n\r\n  onError () {\r\n    this.stop()\r\n    this.error = true\r\n    this.fetching = true\r\n    sleep(1200)\r\n      .then(this.stopErrorDisplay)\r\n      .then(this.resume)\r\n  }\r\n\r\n  stopErrorDisplay () {\r\n    this.scrollTargetElement.scrollTop = this.$props.reverse\r\n      ? this.scrollAmount\r\n      : this.scrollTargetElement.scrollTop - this.scrollTargetElement.offsetHeight - this.scrollAmount\r\n    this.error = false\r\n    this.fetching = false\r\n  }\r\n\r\n  finishLoading () {\r\n    this.fetching = false\r\n    if (this.$props.reverse) {\r\n      this.scrollTargetElement.scrollTop = this.$el.offsetHeight - this.initialHeight\r\n    }\r\n  }\r\n\r\n  resume () {\r\n    if (!this.$props.disabled) {\r\n      this.scrollTargetElement.addEventListener(\r\n        'scroll',\r\n        this.debouncedLoad,\r\n        {\r\n          passive: true,\r\n        },\r\n      )\r\n    }\r\n  }\r\n\r\n  stop () {\r\n    if (this.$props.disabled) {\r\n      return\r\n    }\r\n\r\n    this.fetching = false\r\n    this.scrollTargetElement.removeEventListener(\r\n      'scroll',\r\n      this.debouncedLoad,\r\n      { passive: true },\r\n    )\r\n  }\r\n\r\n  setDebounce (value: number) {\r\n    this.debouncedLoad = debounce(this.onLoad, value)\r\n  }\r\n\r\n  mounted () {\r\n    if (!this.scrollTargetElement) {\r\n      return\r\n    }\r\n    this.scrollTargetElement.style.overflowY = 'scroll'\r\n\r\n    if (this.$props.reverse) {\r\n      this.scrollTargetElement.scrollTop = this.scrollTargetElement.scrollHeight\r\n    }\r\n\r\n    this.setDebounce(this.$props.debounce as number)\r\n    this.scrollTargetElement.addEventListener('scroll', this.debouncedLoad, {\r\n      passive: true,\r\n    })\r\n  }\r\n\r\n  beforeUnmount () {\r\n    if (!this.$props.disabled) {\r\n      this.scrollTargetElement.removeEventListener(\r\n        'scroll',\r\n        this.debouncedLoad,\r\n        { passive: true },\r\n      )\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-infinite-scroll {\r\n  display: var(--va-infinite-scroll-display);\r\n  flex-direction: var(--va-infinite-scroll-flex-direction);\r\n\r\n  &--reversed {\r\n    flex-direction: var(--va-infinite-scroll-reversed-flex-direction);\r\n  }\r\n\r\n  &__spinner {\r\n    &__default {\r\n      @include flex-center();\r\n\r\n      width: var(--va-infinite-scroll-spinner-default-width);\r\n      min-height: var(--va-infinite-scroll-spinner-default-min-height);\r\n    }\r\n\r\n    &--invisible {\r\n      visibility: hidden !important;\r\n    }\r\n\r\n    @include flex-center();\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <component\r\n    :is=\"$props.tag\"\r\n    class=\"va-infinite-scroll\"\r\n    :class=\"{'va-infinite-scroll--reversed': $props.reverse}\"\r\n  >\r\n    <slot\r\n      name=\"default\"\r\n      ref=\"content\"\r\n    />\r\n    <div\r\n      class=\"va-infinite-scroll__spinner\"\r\n      :class=\"{'va-infinite-scroll__spinner--invisible': !fetching}\"\r\n      ref=\"loadingSlotContainer\"\r\n    >\r\n      <slot\r\n        name=\"loading\"\r\n        v-if=\"!$props.disabled\"\r\n      >\r\n        <div\r\n          ref=\"defaultSpinner\"\r\n          class=\"va-infinite-scroll__spinner__default\"\r\n        >\r\n          <va-progress-circle\r\n            size=\"small\"\r\n            :thickness=\"0.15\"\r\n            :color=\"error ? colors.danger : colors.primary\"\r\n            indeterminate\r\n          />\r\n        </div>\r\n      </slot>\r\n    </div>\r\n  </component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { debounce } from 'lodash-es'\r\nimport { watch } from 'vue'\r\nimport { mixins, Options, prop, Vue } from 'vue-class-component'\r\n\r\nimport { sleep } from '../../services/utils'\r\nimport ColorMixin from '../../services/color-config/ColorMixin'\r\nimport { VaProgressCircle } from '../va-progress-bar'\r\n\r\nclass InfiniteScrollProps {\r\n  load = prop<Function>({ type: Function, required: true })\r\n  offset = prop<number>({ type: Number, default: 500 })\r\n  reverse = prop<boolean>({ type: Boolean, default: false })\r\n  disabled = prop<boolean>({ type: Boolean, default: false })\r\n  scrollTarget = prop<Element | string>({ type: [Object, String], default: null })\r\n  debounce = prop<number>({ type: Number, default: 100 })\r\n  tag = prop<string>({ type: String, default: 'div' })\r\n}\r\n\r\nconst InfiniteScrollPropsMixin = Vue.with(InfiniteScrollProps)\r\n\r\n@Options({\r\n  name: 'VaInfiniteScroll',\r\n  components: { VaProgressCircle },\r\n})\r\nexport default class VaInfiniteScroll extends mixins(\r\n  ColorMixin,\r\n  InfiniteScrollPropsMixin,\r\n) {\r\n  index = 0\r\n  fetching = false\r\n  error = false\r\n  initialHeight: any = null\r\n  debouncedLoad!: any\r\n  scrollTop!: number\r\n\r\n  created () {\r\n    watch(() => this.$props.disabled, (value) => {\r\n      if (value) {\r\n        this.stop()\r\n      } else {\r\n        this.resume()\r\n      }\r\n    })\r\n\r\n    watch(() => this.$props.debounce, (value) => {\r\n      this.setDebounce(value as number)\r\n    })\r\n  }\r\n\r\n  get scrollAmount () {\r\n    return this.$props.offset as number + 1 + this.$el.offsetHeight\r\n  }\r\n\r\n  get scrollTargetElement () {\r\n    return typeof this.$props.scrollTarget === 'string'\r\n      ? document.querySelector(this.$props.scrollTarget)\r\n      : this.$props.scrollTarget || this.$el.parentElement\r\n  }\r\n\r\n  get colors () {\r\n    return {\r\n      primary: this.theme.getColor('primary', '#23e066'),\r\n      danger: this.theme.getColor('danger', '#e34b4a'),\r\n    }\r\n  }\r\n\r\n  onLoad () {\r\n    if (this.$props.disabled || this.error || this.fetching) {\r\n      return\r\n    }\r\n\r\n    const { scrollTop, scrollHeight } = this.scrollTargetElement\r\n    const containerHeight = this.scrollTargetElement.offsetHeight\r\n    const isLoadingRequired = this.$props.reverse\r\n      ? scrollTop < this.scrollAmount\r\n      : scrollTop + containerHeight + this.scrollAmount >= scrollHeight\r\n    if (!isLoadingRequired) { return }\r\n\r\n    this.fetching = true\r\n    this.scrollTop = this.$props.reverse ? 0 : (this as any).$el.offsetHeight\r\n    this.initialHeight = this.$el.offsetHeight\r\n    this.$props.load()\r\n      .then(this.finishLoading).catch(this.onError)\r\n  }\r\n\r\n  onError () {\r\n    this.stop()\r\n    this.error = true\r\n    this.fetching = true\r\n    sleep(1200)\r\n      .then(this.stopErrorDisplay)\r\n      .then(this.resume)\r\n  }\r\n\r\n  stopErrorDisplay () {\r\n    this.scrollTargetElement.scrollTop = this.$props.reverse\r\n      ? this.scrollAmount\r\n      : this.scrollTargetElement.scrollTop - this.scrollTargetElement.offsetHeight - this.scrollAmount\r\n    this.error = false\r\n    this.fetching = false\r\n  }\r\n\r\n  finishLoading () {\r\n    this.fetching = false\r\n    if (this.$props.reverse) {\r\n      this.scrollTargetElement.scrollTop = this.$el.offsetHeight - this.initialHeight\r\n    }\r\n  }\r\n\r\n  resume () {\r\n    if (!this.$props.disabled) {\r\n      this.scrollTargetElement.addEventListener(\r\n        'scroll',\r\n        this.debouncedLoad,\r\n        {\r\n          passive: true,\r\n        },\r\n      )\r\n    }\r\n  }\r\n\r\n  stop () {\r\n    if (this.$props.disabled) {\r\n      return\r\n    }\r\n\r\n    this.fetching = false\r\n    this.scrollTargetElement.removeEventListener(\r\n      'scroll',\r\n      this.debouncedLoad,\r\n      { passive: true },\r\n    )\r\n  }\r\n\r\n  setDebounce (value: number) {\r\n    this.debouncedLoad = debounce(this.onLoad, value)\r\n  }\r\n\r\n  mounted () {\r\n    if (!this.scrollTargetElement) {\r\n      return\r\n    }\r\n    this.scrollTargetElement.style.overflowY = 'scroll'\r\n\r\n    if (this.$props.reverse) {\r\n      this.scrollTargetElement.scrollTop = this.scrollTargetElement.scrollHeight\r\n    }\r\n\r\n    this.setDebounce(this.$props.debounce as number)\r\n    this.scrollTargetElement.addEventListener('scroll', this.debouncedLoad, {\r\n      passive: true,\r\n    })\r\n  }\r\n\r\n  beforeUnmount () {\r\n    if (!this.$props.disabled) {\r\n      this.scrollTargetElement.removeEventListener(\r\n        'scroll',\r\n        this.debouncedLoad,\r\n        { passive: true },\r\n      )\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import \"../../styles/resources/resources\";\r\n@import 'variables';\r\n\r\n.va-infinite-scroll {\r\n  display: var(--va-infinite-scroll-display);\r\n  flex-direction: var(--va-infinite-scroll-flex-direction);\r\n\r\n  &--reversed {\r\n    flex-direction: var(--va-infinite-scroll-reversed-flex-direction);\r\n  }\r\n\r\n  &__spinner {\r\n    &__default {\r\n      @include flex-center();\r\n\r\n      width: var(--va-infinite-scroll-spinner-default-width);\r\n      min-height: var(--va-infinite-scroll-spinner-default-min-height);\r\n    }\r\n\r\n    &--invisible {\r\n      visibility: hidden !important;\r\n    }\r\n\r\n    @include flex-center();\r\n  }\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaInfiniteScroll from './VaInfiniteScroll.vue'\r\n\r\nexport default withConfigTransport(VaInfiniteScroll)\r\n"],"names":["InfiniteScrollPropsMixin","Vue","with","InfiniteScrollProps","constructor","this","prop","type","Function","required","Number","default","Boolean","Object","String","VaInfiniteScroll","mixins","ColorMixin","created","watch","$props","disabled","value","stop","resume","debounce","setDebounce","scrollAmount","offset","$el","offsetHeight","scrollTargetElement","scrollTarget","document","querySelector","parentElement","colors","primary","theme","getColor","danger","onLoad","error","fetching","scrollTop","scrollHeight","containerHeight","reverse","initialHeight","load","then","finishLoading","catch","onError","sleep","stopErrorDisplay","addEventListener","debouncedLoad","passive","removeEventListener","mounted","style","overflowY","beforeUnmount","Options","name","components","VaProgressCircle","_ctx","tag","_mergeProps","class","_renderSlot","ref","_createVNode","size","thickness","color","indeterminate","withConfigTransport"],"mappings":"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"}