{"version":3,"file":"index.js","sources":["../../src/components/va-accordion/VaAccordion.vue?vue&type=template&id=5b395e38&lang.js","../../src/components/va-accordion/index.ts"],"sourcesContent":["<template>\r\n  <div class=\"va-accordion\">\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { useStateful } from '../../mixins/StatefulMixin/cStatefulMixin'\r\nimport { provide, defineComponent, ref, onMounted, onUpdated } from 'vue'\r\nimport Collapse from '../va-collapse/VaCollapse.vue'\r\n\r\nexport const AccordionServiceKey = Symbol('AccordionService')\r\n\r\nexport type Accordion = {\r\n  isInsideAccordion: boolean;\r\n  getProps: () => any;\r\n  getState: () => any;\r\n  onChildChange: (child: Collapse) => void;\r\n  onChildMounted: (child: Collapse) => void;\r\n  onChildUnmounted: (child: Collapse) => void;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'VaAccordion',\r\n  emits: ['update:modelValue'],\r\n  props: {\r\n    modelValue: { type: Array, default: () => [] },\r\n    multiply: { type: Boolean, default: false },\r\n    inset: { type: Boolean, default: false },\r\n    popout: { type: Boolean, default: false },\r\n  },\r\n  setup (props, ctx) {\r\n    const stateful = useStateful(props, ctx.emit)\r\n    const collapses = ref<Collapse[]>([])\r\n\r\n    const getProps = () => ({ inset: props.inset, popout: props.popout })\r\n    const onChildMounted = (child: Collapse) => { collapses.value.push(child) }\r\n    const onChildUnmounted = (child: Collapse) => {\r\n      collapses.value = collapses.value.filter(collapse => collapse !== child)\r\n    }\r\n    const onChildChange = (child: Collapse) => {\r\n      const accordionValues = collapses.value.map((collapse: Collapse) => {\r\n        if (collapse === child) {\r\n          return collapse.valueProxy\r\n        }\r\n\r\n        if (!props.multiply) {\r\n          collapse.valueProxy = false\r\n        }\r\n\r\n        return collapse.valueProxy\r\n      })\r\n\r\n      stateful.valueComputed.value = accordionValues\r\n    }\r\n\r\n    const accordion = {\r\n      isInsideAccordion: true,\r\n      getProps,\r\n      getState: () => stateful.valueComputed,\r\n      onChildMounted,\r\n      onChildUnmounted,\r\n      onChildChange,\r\n    }\r\n\r\n    provide(AccordionServiceKey, accordion)\r\n\r\n    const updateCollapsesValues = () => {\r\n      collapses.value.forEach((collapse: Collapse, index: number) => {\r\n        collapse.valueProxy = stateful.valueComputed.value[index]\r\n      })\r\n    }\r\n\r\n    onMounted(updateCollapsesValues)\r\n    onUpdated(updateCollapsesValues)\r\n\r\n    return { collapses, value: stateful.valueComputed }\r\n  },\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.va-accordion {\r\n}\r\n</style>\r\n","import withConfigTransport from '../../services/config-transport/withConfigTransport'\r\nimport VaAccordion from './VaAccordion.vue'\r\n\r\nexport default withConfigTransport(VaAccordion)\r\n"],"names":["_mergeProps","class","withConfigTransport","VaAccordion"],"mappings":"mYACEA,GAAKC,MAAM,8HCEb,MAAeC,EAAoBC"}