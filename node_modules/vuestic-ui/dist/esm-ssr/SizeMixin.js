import{m as e,V as i,p as s}from"./vue-class-component.esm-bundler.js";const t={defaultSize:48,sizes:{small:32,medium:48,large:64}},n={defaultSize:1,sizes:{small:.75,medium:1,large:1.25}};class SizeProps{constructor(){this.size=s({type:[String,Number],default:"",validator:e=>"string"==typeof e||"number"==typeof e}),this.sizesConfig=s({type:Object,default:()=>t}),this.fontSizesConfig=s({type:Object,default:()=>n})}}class SizeMixin extends(e(i.with(SizeProps))){constructor(){super(...arguments),this.fontRegex=/(?<fontSize>\d+)(?<extension>px|rem)/i}get sizeComputed(){const{defaultSize:e,sizes:i}=this.sizesConfig;return this.size?"string"==typeof this.size?this.size in i?`${i[this.size]}px`:this.size:`${this.size}px`:`${e}px`}get fontSizeComputed(){return`${this.SizeMixin_fontSize}rem`}get SizeMixin_fontSize(){const{defaultSize:e,sizes:i}=this.fontSizesConfig,convertToRem=e=>e/16-.5;if(!this.size)return e;if("string"==typeof this.size){if(this.size in i)return i[this.size];const e=this.size.match(this.fontRegex);if(!e||!e.groups)throw new Error("Size prop should be either valid string or number");const{extension:s,fontSize:t}=e.groups;return"rem"===s?+t:convertToRem(+t)}return convertToRem(this.size)}}export{SizeMixin as S};
//# sourceMappingURL=SizeMixin.js.map
